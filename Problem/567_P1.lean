import Mathlib
import Math
import Smt

open Real

set_option maxHeartbeats 0
set_option maxRecDepth 80000

set_option linter.unusedVariables false
set_option by_axiom true
#eval use_axiom

macro_rules | `($x / $y)   => `(HDiv.hDiv ($x : ℝ) ($y : ℝ))


theorem P1 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) :
  a / b + b / c + c / a ≤ sqrt (a ^ 2 + 1) / sqrt (b ^ 2 + 1) + sqrt (b ^ 2 + 1) / sqrt (c ^ 2 + 1) + sqrt (c ^ 2 + 1) / sqrt (a ^ 2 + 1) := by
  sorry

theorem P2 {a b c d : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) (hd : d > 0) :
  0 ≤ (a ^ 2 - b * d) / (b + 2 * c + d) + (b ^ 2 - c * a) / (c + 2 * d + a) + (c ^ 2 - d * b) / (d + 2 * a + b) + (d ^ 2 - a * c) / (a + 2 * b + c) := by
  intro_by_homogeneous a + b + c + d = 4
  llm_frac_apart 0 - ((a ^ 2 - b * d) / (b + 2 * c + d) + (b ^ 2 - c * a) / (c + 2 * d + a) + (c ^ 2 - d * b) / (d + 2 * a + b) + (d ^ 2 - a * c) / (a + 2 * b + c)) = a * c / (a + 2 * b + c) + a * c / (a + c + 2 * d) + b * d / (2 * a + b + d) + b * d / (b + 2 * c + d) - (c ^ 2 / (2 * a + b + d)) - (d ^ 2 / (a + 2 * b + c)) - (b ^ 2 / (a + c + 2 * d)) - (a ^ 2 / (b + 2 * c + d))
  scale AM_GM_square_left_2vars (u := b) (v := d) (k := (1 / ((b + (2 * c)) + d))) (l := ((((a * c) / ((a + (2 * b)) + c)) + ((a * c) / ((a + c) + (2 * d)))) + ((b * d) / (((2 * a) + b) + d)))) (right := a ^ 2 / (b + 2 * c + d) + b ^ 2 / (a + c + 2 * d) + d ^ 2 / (a + 2 * b + c) + c ^ 2 / (2 * a + b + d))
  llm_simplify 1 / (b + 2 * c + d) * (b ^ 2 + d ^ 2) / 2 + a * c / (a + 2 * b + c) + a * c / (a + c + 2 * d) + b * d / (2 * a + b + d) - (a ^ 2 / (b + 2 * c + d) + b ^ 2 / (a + c + 2 * d) + d ^ 2 / (a + 2 * b + c) + c ^ 2 / (2 * a + b + d)) = (b ^ 2 + d ^ 2 - (2 * a ^ 2)) / (2 * (b + 2 * c + d)) + (b * d - (c ^ 2)) / (2 * a + b + d) + (a * c - (d ^ 2)) / (a + 2 * b + c) + (a * c - (b ^ 2)) / (a + c + 2 * d)
  llm_cancel_denom (b ^ 2 + d ^ 2 - 2 * a ^ 2) / (2 * (b + 2 * c + d)) + (b * d - c ^ 2) / (2 * a + b + d) + (a * c - d ^ 2) / (a + 2 * b + c) + (a * c - b ^ 2) / (a + c + 2 * d) - (0) = ((b ^ 2 + d ^ 2 - (2 * a ^ 2)) * (2 * a + b + d) * (a + 2 * b + c) * (a + c + 2 * d) + (b * d - (c ^ 2)) * 2 * (b + 2 * c + d) * (a + 2 * b + c) * (a + c + 2 * d) + (a * c - (d ^ 2)) * 2 * (b + 2 * c + d) * (2 * a + b + d) * (a + c + 2 * d) + (a * c - (b ^ 2)) * 2 * (b + 2 * c + d) * (2 * a + b + d) * (a + 2 * b + c)) / (2 * (a + 2 * b + c) * (a + c + 2 * d) * (2 * a + b + d) * (b + 2 * c + d))
  llm_factor (b ^ 2 + d ^ 2 - 2 * a ^ 2) * (2 * a + b + d) * (a + 2 * b + c) * (a + c + 2 * d) + (b * d - c ^ 2) * 2 * (b + 2 * c + d) * (a + 2 * b + c) * (a + c + 2 * d) + (a * c - d ^ 2) * 2 * (b + 2 * c + d) * (2 * a + b + d) * (a + c + 2 * d) + (a * c - b ^ 2) * 2 * (b + 2 * c + d) * (2 * a + b + d) * (a + 2 * b + c) - (0) = 2 * (a * c - (b ^ 2)) * (a + c + 2 * b) * (b + d + 2 * a) * (b + d + 2 * c) + 2 * (b * d - (c ^ 2)) * (a + c + 2 * b) * (a + c + 2 * d) * (b + d + 2 * c) + 2 * (a * c - (d ^ 2)) * (a + c + 2 * d) * (b + d + 2 * a) * (b + d + 2 * c) - ((a + c + 2 * b) * (a + c + 2 * d) * (b + d + 2 * a) * (2 * a ^ 2 - (b ^ 2) - (d ^ 2)))
  closed_by_sos

theorem P3 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) (h : a + b + c = 1) :
  a * b / (1 - c ^ 2) + b * c / (1 - a ^ 2) + c * a / (1 - b ^ 2) ≤ 3 / 8 := by
  make_homogeneous a * b / ((a + b + c) ^ 2 - (c ^ 2)) + a * c / ((a + b + c) ^ 2 - (b ^ 2)) + b * c / ((a + b + c) ^ 2 - (a ^ 2)) - (3 / 8) ≤ 0
  llm_frac_together a * b / ((a + b + c) ^ 2 - c ^ 2) + a * c / ((a + b + c) ^ 2 - b ^ 2) + b * c / ((a + b + c) ^ 2 - a ^ 2) - (3 / 8) = a * b / (a ^ 2 + 2 * a * b + 2 * a * c + b ^ 2 + 2 * b * c) + a * c / (a ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c + c ^ 2) + b * c / (2 * a * b + 2 * a * c + b ^ 2 + 2 * b * c + c ^ 2) - (3 / 8)
  llm_cancel_denom (a * b / (a ^ 2 + 2 * a * b + 2 * a * c + b ^ 2 + 2 * b * c) + a * c / (a ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c + c ^ 2) + b * c / (2 * a * b + 2 * a * c + b ^ 2 + 2 * b * c + c ^ 2)) - (3 / 8) = (8 * a * b * (a ^ 2 + c ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c) * (b ^ 2 + c ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c) + 8 * a * c * (a ^ 2 + b ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c) * (b ^ 2 + c ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c) + 8 * b * c * (a ^ 2 + b ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c) * (a ^ 2 + c ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c) - (3 * (a ^ 2 + b ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c) * (a ^ 2 + c ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c) * (b ^ 2 + c ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c))) / (8 * (a ^ 2 + b ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c) * (a ^ 2 + c ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c) * (b ^ 2 + c ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c))
  llm_mul_expand 8 * a * b * (a ^ 2 + c ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c) * (b ^ 2 + c ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c) + 8 * a * c * (a ^ 2 + b ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c) * (b ^ 2 + c ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c) + 8 * b * c * (a ^ 2 + b ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c) * (a ^ 2 + c ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c) - (3 * (a ^ 2 + b ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c) * (a ^ 2 + c ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c) * (b ^ 2 + c ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c)) = 14 * a * b ^ 2 * c ^ 3 + 14 * a * b ^ 3 * c ^ 2 + 14 * b * a ^ 2 * c ^ 3 + 14 * b * a ^ 3 * c ^ 2 + 14 * c * a ^ 2 * b ^ 3 + 14 * c * a ^ 3 * b ^ 2 + 66 * a ^ 2 * b ^ 2 * c ^ 2 - (11 * a ^ 2 * b ^ 4) - (11 * a ^ 2 * c ^ 4) - (11 * a ^ 4 * b ^ 2) - (11 * a ^ 4 * c ^ 2) - (11 * b ^ 2 * c ^ 4) - (11 * b ^ 4 * c ^ 2) - (6 * a * b ^ 5) - (6 * a * c ^ 5) - (6 * b * a ^ 5) - (6 * b * c ^ 5) - (6 * c * a ^ 5) - (6 * c * b ^ 5) - (2 * a ^ 3 * b ^ 3) - (2 * a ^ 3 * c ^ 3) - (2 * b ^ 3 * c ^ 3) - (14 * a * b * c ^ 4) - (14 * a * c * b ^ 4) - (14 * b * c * a ^ 4)
  scale Muirhead_Req1_left_3vars (u := c) (v := a) (w := b) (p := 2) (q := 3) (k := 14) (l := (((((14 * a) * (b ^ 3)) * (c ^ 2)) + (((14 * b) * (a ^ 2)) * (c ^ 3))) + ((((14 * c) * (a ^ 3)) * (b ^ 2)) + (((66 * (a ^ 2)) * (b ^ 2)) * (c ^ 2))))) (right := 14 * b * c * a ^ 4 + 14 * a * c * b ^ 4 + 14 * a * b * c ^ 4 + 2 * b ^ 3 * c ^ 3 + 2 * a ^ 3 * c ^ 3 + 2 * a ^ 3 * b ^ 3 + 6 * c * b ^ 5 + 6 * c * a ^ 5 + 6 * b * c ^ 5 + 6 * b * a ^ 5 + 6 * a * c ^ 5 + 6 * a * b ^ 5 + 11 * b ^ 4 * c ^ 2 + 11 * b ^ 2 * c ^ 4 + 11 * a ^ 4 * c ^ 2 + 11 * a ^ 4 * b ^ 2 + 11 * a ^ 2 * c ^ 4 + 11 * a ^ 2 * b ^ 4)
  scale Muirhead_Req1_left_3vars (u := b) (v := c) (w := a) (p := 3) (q := 2) (k := 14) (l := ((((66 * (a ^ 2)) * (b ^ 2)) * (c ^ 2)) + (14 * ((((c ^ 3) * (a ^ 3)) + ((a ^ 3) * (b ^ 3))) + ((b ^ 3) * (c ^ 3)))))) (right := 14 * b * c * a ^ 4 + 14 * a * c * b ^ 4 + 14 * a * b * c ^ 4 + 2 * b ^ 3 * c ^ 3 + 2 * a ^ 3 * c ^ 3 + 2 * a ^ 3 * b ^ 3 + 6 * c * b ^ 5 + 6 * c * a ^ 5 + 6 * b * c ^ 5 + 6 * b * a ^ 5 + 6 * a * c ^ 5 + 6 * a * b ^ 5 + 11 * b ^ 4 * c ^ 2 + 11 * b ^ 2 * c ^ 4 + 11 * a ^ 4 * c ^ 2 + 11 * a ^ 4 * b ^ 2 + 11 * a ^ 2 * c ^ 4 + 11 * a ^ 2 * b ^ 4)
  scale Muirhead_Req0_onestep_left_3vars (u := b) (v := a) (w := c) (p := 3) (q := 3) (k := 14) (l := ((14 * ((((b ^ 4) * (c ^ 2)) + ((c ^ 4) * (a ^ 2))) + ((a ^ 4) * (b ^ 2)))) + (((66 * (a ^ 2)) * (b ^ 2)) * (c ^ 2)))) (right := 14 * b * c * a ^ 4 + 14 * a * c * b ^ 4 + 14 * a * b * c ^ 4 + 2 * b ^ 3 * c ^ 3 + 2 * a ^ 3 * c ^ 3 + 2 * a ^ 3 * b ^ 3 + 6 * c * b ^ 5 + 6 * c * a ^ 5 + 6 * b * c ^ 5 + 6 * b * a ^ 5 + 6 * a * c ^ 5 + 6 * a * b ^ 5 + 11 * b ^ 4 * c ^ 2 + 11 * b ^ 2 * c ^ 4 + 11 * a ^ 4 * c ^ 2 + 11 * a ^ 4 * b ^ 2 + 11 * a ^ 2 * c ^ 4 + 11 * a ^ 2 * b ^ 4)
  scale Muirhead_Req0_onestep_left_3vars (u := a) (v := c) (w := b) (p := 2) (q := 4) (k := 14) (l := ((14 * ((((b ^ 4) * (a ^ 2)) + ((a ^ 4) * (c ^ 2))) + ((c ^ 4) * (b ^ 2)))) + (((66 * (a ^ 2)) * (b ^ 2)) * (c ^ 2)))) (right := 14 * b * c * a ^ 4 + 14 * a * c * b ^ 4 + 14 * a * b * c ^ 4 + 2 * b ^ 3 * c ^ 3 + 2 * a ^ 3 * c ^ 3 + 2 * a ^ 3 * b ^ 3 + 6 * c * b ^ 5 + 6 * c * a ^ 5 + 6 * b * c ^ 5 + 6 * b * a ^ 5 + 6 * a * c ^ 5 + 6 * a * b ^ 5 + 11 * b ^ 4 * c ^ 2 + 11 * b ^ 2 * c ^ 4 + 11 * a ^ 4 * c ^ 2 + 11 * a ^ 4 * b ^ 2 + 11 * a ^ 2 * c ^ 4 + 11 * a ^ 2 * b ^ 4)
  llm_factor 14 * (a ^ 3 * c ^ 3 + c ^ 3 * b ^ 3 + b ^ 3 * a ^ 3) + 14 * (b ^ 4 * a ^ 2 + a ^ 4 * c ^ 2 + c ^ 4 * b ^ 2) + 66 * a ^ 2 * b ^ 2 * c ^ 2 - (14 * b * c * a ^ 4 + 14 * a * c * b ^ 4 + 14 * a * b * c ^ 4 + 2 * b ^ 3 * c ^ 3 + 2 * a ^ 3 * c ^ 3 + 2 * a ^ 3 * b ^ 3 + 6 * c * b ^ 5 + 6 * c * a ^ 5 + 6 * b * c ^ 5 + 6 * b * a ^ 5 + 6 * a * c ^ 5 + 6 * a * b ^ 5 + 11 * b ^ 4 * c ^ 2 + 11 * b ^ 2 * c ^ 4 + 11 * a ^ 4 * c ^ 2 + 11 * a ^ 4 * b ^ 2 + 11 * a ^ 2 * c ^ 4 + 11 * a ^ 2 * b ^ 4) = 3 * a ^ 2 * b ^ 4 + 3 * a ^ 4 * c ^ 2 + 3 * b ^ 2 * c ^ 4 + 12 * a ^ 3 * b ^ 3 + 12 * a ^ 3 * c ^ 3 + 12 * b ^ 3 * c ^ 3 + 66 * a ^ 2 * b ^ 2 * c ^ 2 - (11 * a ^ 2 * c ^ 4) - (11 * a ^ 4 * b ^ 2) - (11 * b ^ 4 * c ^ 2) - (6 * a * b ^ 5) - (6 * a * c ^ 5) - (6 * b * a ^ 5) - (6 * b * c ^ 5) - (6 * c * a ^ 5) - (6 * c * b ^ 5) - (14 * a * b * c ^ 4) - (14 * a * c * b ^ 4) - (14 * b * c * a ^ 4)
  scale Muirhead_Req0_onestep_left_3vars (u := b) (v := a) (w := c) (p := 4) (q := 2) (k := 3) (l := ((((12 * (a ^ 3)) * (b ^ 3)) + ((12 * (a ^ 3)) * (c ^ 3))) + (((12 * (b ^ 3)) * (c ^ 3)) + (((66 * (a ^ 2)) * (b ^ 2)) * (c ^ 2))))) (right := 14 * b * c * a ^ 4 + 14 * a * c * b ^ 4 + 14 * a * b * c ^ 4 + 6 * c * b ^ 5 + 6 * c * a ^ 5 + 6 * b * c ^ 5 + 6 * b * a ^ 5 + 6 * a * c ^ 5 + 6 * a * b ^ 5 + 11 * b ^ 4 * c ^ 2 + 11 * a ^ 4 * b ^ 2 + 11 * a ^ 2 * c ^ 4)
  scale Muirhead_Req0_onestep_left_3vars (u := b) (v := c) (w := a) (p := 3) (q := 3) (k := 12) (l := ((((66 * (a ^ 2)) * (b ^ 2)) * (c ^ 2)) + (3 * ((((b ^ 5) * a) + ((a ^ 5) * c)) + ((c ^ 5) * b))))) (right := 14 * b * c * a ^ 4 + 14 * a * c * b ^ 4 + 14 * a * b * c ^ 4 + 6 * c * b ^ 5 + 6 * c * a ^ 5 + 6 * b * c ^ 5 + 6 * b * a ^ 5 + 6 * a * c ^ 5 + 6 * a * b ^ 5 + 11 * b ^ 4 * c ^ 2 + 11 * a ^ 4 * b ^ 2 + 11 * a ^ 2 * c ^ 4)
  llm_mul_expand 12 * (b ^ 4 * c ^ 2 + c ^ 4 * a ^ 2 + a ^ 4 * b ^ 2) + 66 * a ^ 2 * b ^ 2 * c ^ 2 + 3 * (b ^ 5 * a + a ^ 5 * c + c ^ 5 * b) - (14 * b * c * a ^ 4 + 14 * a * c * b ^ 4 + 14 * a * b * c ^ 4 + 6 * c * b ^ 5 + 6 * c * a ^ 5 + 6 * b * c ^ 5 + 6 * b * a ^ 5 + 6 * a * c ^ 5 + 6 * a * b ^ 5 + 11 * b ^ 4 * c ^ 2 + 11 * a ^ 4 * b ^ 2 + 11 * a ^ 2 * c ^ 4) = a ^ 2 * c ^ 4 + a ^ 4 * b ^ 2 + b ^ 4 * c ^ 2 + 66 * a ^ 2 * b ^ 2 * c ^ 2 - (6 * a * c ^ 5) - (6 * b * a ^ 5) - (6 * c * b ^ 5) - (3 * a * b ^ 5) - (3 * b * c ^ 5) - (3 * c * a ^ 5) - (14 * a * b * c ^ 4) - (14 * a * c * b ^ 4) - (14 * b * c * a ^ 4)
  scale Muirhead_Req0_onestep_left_3vars (u := b) (v := a) (w := c) (p := 2) (q := 4) (k := 1) (l := (((66 * (a ^ 2)) * (b ^ 2)) * (c ^ 2))) (right := 14 * b * c * a ^ 4 + 14 * a * c * b ^ 4 + 14 * a * b * c ^ 4 + 3 * c * a ^ 5 + 3 * b * c ^ 5 + 3 * a * b ^ 5 + 6 * c * b ^ 5 + 6 * b * a ^ 5 + 6 * a * c ^ 5)
  scale Muirhead_Req0_onestep_left_3vars (u := b) (v := a) (w := c) (p := 3) (q := 3) (k := 1) (l := (((66 * (a ^ 2)) * (b ^ 2)) * (c ^ 2))) (right := 14 * b * c * a ^ 4 + 14 * a * c * b ^ 4 + 14 * a * b * c ^ 4 + 3 * c * a ^ 5 + 3 * b * c ^ 5 + 3 * a * b ^ 5 + 6 * c * b ^ 5 + 6 * b * a ^ 5 + 6 * a * c ^ 5)
  scale Muirhead_Req0_onestep_left_3vars (u := b) (v := a) (w := c) (p := 4) (q := 2) (k := 1) (l := (((66 * (a ^ 2)) * (b ^ 2)) * (c ^ 2))) (right := 14 * b * c * a ^ 4 + 14 * a * c * b ^ 4 + 14 * a * b * c ^ 4 + 3 * c * a ^ 5 + 3 * b * c ^ 5 + 3 * a * b ^ 5 + 6 * c * b ^ 5 + 6 * b * a ^ 5 + 6 * a * c ^ 5)
  llm_cancel_factor (b ^ 5 * a + a ^ 5 * c + c ^ 5 * b + 66 * a ^ 2 * b ^ 2 * c ^ 2) - (14 * b * c * a ^ 4 + 14 * a * c * b ^ 4 + 14 * a * b * c ^ 4 + 3 * c * a ^ 5 + 3 * b * c ^ 5 + 3 * a * b ^ 5 + 6 * c * b ^ 5 + 6 * b * a ^ 5 + 6 * a * c ^ 5) = (2) * (33 * a ^ 2 * b ^ 2 * c ^ 2 - (a * b ^ 5) - (b * c ^ 5) - (c * a ^ 5) - (3 * a * c ^ 5) - (3 * b * a ^ 5) - (3 * c * b ^ 5) - (7 * a * b * c ^ 4) - (7 * a * c * b ^ 4) - (7 * b * c * a ^ 4))
  scale AM_GM_normal_right_3vars (u := (((7 * b) * c) * (a ^ 4))) (v := (((7 * a) * c) * (b ^ 4))) (w := (((7 * a) * b) * (c ^ 4))) (k := 1) (l := ((((3 * c) * (b ^ 5)) + ((3 * b) * (a ^ 5))) + ((((3 * a) * (c ^ 5)) + (c * (a ^ 5))) + ((b * (c ^ 5)) + (a * (b ^ 5)))))) (left := 33 * a ^ 2 * b ^ 2 * c ^ 2)
  llm_simplify 33 * a ^ 2 * b ^ 2 * c ^ 2 - (3 * (7 * b * c * a ^ 4 * 7 * a * c * b ^ 4 * 7 * a * b * c ^ 4) ^ (1 / 3) + 3 * c * b ^ 5 + 3 * b * a ^ 5 + 3 * a * c ^ 5 + c * a ^ 5 + b * c ^ 5 + a * b ^ 5) = 12 * a ^ 2 * b ^ 2 * c ^ 2 - (a * b ^ 5) - (b * c ^ 5) - (c * a ^ 5) - (3 * a * c ^ 5) - (3 * b * a ^ 5) - (3 * c * b ^ 5)
  scale weighted_AM_GM_normal_right_3vars (u := (c * (b ^ 5))) (v := (b * (a ^ 5))) (w := (a * (c ^ 5))) (i1 := 3) (i2 := 3) (i3 := 3) (k := 1) (l := ((c * (a ^ 5)) + ((b * (c ^ 5)) + (a * (b ^ 5))))) (left := 12 * a ^ 2 * b ^ 2 * c ^ 2)
  llm_simplify 12 * a ^ 2 * b ^ 2 * c ^ 2 - (9 * ((c * b ^ 5) ^ 3 * (b * a ^ 5) ^ 3 * (a * c ^ 5) ^ 3) ^ (1 / 9) + c * a ^ 5 + b * c ^ 5 + a * b ^ 5) = 3 * a ^ 2 * b ^ 2 * c ^ 2 - (a * b ^ 5) - (b * c ^ 5) - (c * a ^ 5)
  scale AM_GM_normal_right_3vars (u := (c * (a ^ 5))) (v := (b * (c ^ 5))) (w := (a * (b ^ 5))) (k := 1) (l := 0) (left := 3 * a ^ 2 * b ^ 2 * c ^ 2)
  sym_simplify 3 * a ^ 2 * b ^ 2 * c ^ 2  -  3 * (c * a ^ 5 * b * c ^ 5 * a * b ^ 5) ^ (1 / 3) = 0
  try close

theorem P4 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) :
  4 * (a ^ 2 + a * b + b * c) ^ (1 / 3) * (b ^ 2 + b * c + c * a) ^ (1 / 3) * (c ^ 2 + c * a + a * b) ^ (1 / 3) / (a + b + c) ^ 2 ≤ 1 + (a * b ^ 2 + b * c ^ 2 + c * a ^ 2) / ((a * b + b * c + c * a) * (a + b + c)) := by
  intro_by_homogeneous a + b + c = 3
  llm_exp_expand 4 * (a ^ 2 + a * b + b * c) ^ (1 / 3) * (b ^ 2 + b * c + c * a) ^ (1 / 3) * (c ^ 2 + c * a + a * b) ^ (1 / 3) / (a + b + c) ^ 2 - (1 + (a * b ^ 2 + b * c ^ 2 + c * a ^ 2) / ((a * b + b * c + c * a) * (a + b + c))) = 4 * ((a ^ 2 + a * b + b * c) * (b ^ 2 + b * c + c * a) * (c ^ 2 + c * a + a * b)) ^ (1 / ((3))) / ((a + b + c) ^ 2) - (1 + (a * b ^ 2 + b * c ^ 2 + c * a ^ 2) / ((a + b + c) * (a * b + a * c + b * c)))
  llm_frac_apart 4 * ((a ^ 2 + a * b + b * c) * (b ^ 2 + b * c + c * a) * (c ^ 2 + c * a + a * b)) ^ (1 / 3) / (a + b + c) ^ 2 - (1 + (a * b ^ 2 + b * c ^ 2 + c * a ^ 2) / ((a + b + c) * (a * b + a * c + b * c))) = 4 * ((a ^ 2 + a * b + b * c) * (b ^ 2 + a * c + b * c) * (c ^ 2 + a * b + a * c)) ^ (1 / 3) / ((a + b + c) ^ 2) - (1) - (a * b ^ 2 / ((a + b + c) * (a * b + a * c + b * c))) - (b * c ^ 2 / ((a + b + c) * (a * b + a * c + b * c))) - (c * a ^ 2 / ((a + b + c) * (a * b + a * c + b * c)))
  llm_cancel_denom 4 * ((a ^ 2 + a * b + b * c) * (b ^ 2 + a * c + b * c) * (c ^ 2 + a * b + a * c)) ^ (1 / 3) / (a + b + c) ^ 2 - (c * a ^ 2 / ((a + b + c) * (a * b + a * c + b * c)) + b * c ^ 2 / ((a + b + c) * (a * b + a * c + b * c)) + a * b ^ 2 / ((a + b + c) * (a * b + a * c + b * c)) + 1) = (4 * ((a ^ 2 + a * b + b * c) * (b ^ 2 + a * c + b * c) * (c ^ 2 + a * b + a * c)) ^ (1 / ((3))) * (a * b + a * c + b * c) - ((c * a ^ 2 + b * c ^ 2 + a * b ^ 2 + (a + b + c) * (a * b + a * c + b * c)) * (a + b + c))) / ((a + b + c) ^ 2 * (a * b + a * c + b * c))
  scale AM_GM_square_left_2vars (u := ((((((a ^ 2) + (a * b)) + (b * c)) * (((b ^ 2) + (a * c)) + (b * c))) * (((c ^ 2) + (a * b)) + (a * c))) ^ (1 / 3))) (v := (((a * b) + (a * c)) + (b * c))) (k := 4) (l := 0) (right := (c * a ^ 2 + b * c ^ 2 + a * b ^ 2 + (a + b + c) * (a * b + a * c + b * c)) * (a + b + c))
  llm_exp_expand 4 * ((((a ^ 2 + a * b + b * c) * (b ^ 2 + a * c + b * c) * (c ^ 2 + a * b + a * c)) ^ (1 / 3)) ^ 2 + (a * b + a * c + b * c) ^ 2) / 2 - ((c * a ^ 2 + b * c ^ 2 + a * b ^ 2 + (a + b + c) * (a * b + a * c + b * c)) * (a + b + c)) = 4 * ((a * b + a * c + b * c) ^ 2 + (a ^ 2 + a * b + b * c) ^ (2 / (3)) * (b ^ 2 + a * c + b * c) ^ (2 / (3)) * (c ^ 2 + a * b + a * c) ^ (2 / (3))) / (2) - ((c * a ^ 2 + b * c ^ 2 + a * b ^ 2 + (a + b + c) * (a * b + a * c + b * c)) * (a + b + c))
  llm_frac_apart 4 * ((a * b + a * c + b * c) ^ 2 + (a ^ 2 + a * b + b * c) ^ (2 / 3) * (b ^ 2 + a * c + b * c) ^ (2 / 3) * (c ^ 2 + a * b + a * c) ^ (2 / 3)) / 2 - ((c * a ^ 2 + b * c ^ 2 + a * b ^ 2 + (a + b + c) * (a * b + a * c + b * c)) * (a + b + c)) = 2 * (a * b + a * c + b * c) ^ 2 + 2 * (a ^ 2 + a * b + b * c) ^ (2 / (3)) * (b ^ 2 + a * c + b * c) ^ (2 / (3)) * (c ^ 2 + a * b + a * c) ^ (2 / (3)) - ((c * a ^ 2 + b * c ^ 2 + a * b ^ 2) * (a + b + c) + (a + b + c) * (a * b + a * c + b * c) * (a + b + c))
  llm_simplify 2 * (a * b + a * c + b * c) ^ 2 + 2 * (a ^ 2 + a * b + b * c) ^ (2 / 3) * (b ^ 2 + a * c + b * c) ^ (2 / 3) * (c ^ 2 + a * b + a * c) ^ (2 / 3) - ((c * a ^ 2 + b * c ^ 2 + a * b ^ 2) * (a + b + c) + (a + b + c) * (a * b + a * c + b * c) * (a + b + c)) = 2 * ((a ^ 2 + a * b + b * c) * (b ^ 2 + a * c + b * c) * (c ^ 2 + a * b + a * c)) ^ (2 / (3)) + 2 * (a ^ 2 * b ^ 2) + 2 * (a ^ 2 * c ^ 2) + 2 * (b ^ 2 * c ^ 2) + 4 * a * b * a * c + 4 * a * b * b * c + 4 * a * c * b * c - ((a + b + c) ^ 2 * (a * b + a * c + b * c)) - (c * a ^ 2 * a + c * a ^ 2 * b + c * a ^ 2 * c + b * c ^ 2 * a + b * c ^ 2 * b + b * c ^ 2 * c + a * b ^ 2 * a + a * b ^ 2 * b + a * b ^ 2 * c)
  llm_frac_apart 2 * ((a ^ 2 + a * b + b * c) * (b ^ 2 + a * c + b * c) * (c ^ 2 + a * b + a * c)) ^ (2 / 3) + 2 * a ^ 2 * b ^ 2 + 2 * a ^ 2 * c ^ 2 + 2 * b ^ 2 * c ^ 2 + 4 * a * b * a * c + 4 * a * b * b * c + 4 * a * c * b * c - (c * a ^ 2 * a + c * a ^ 2 * b + c * a ^ 2 * c + b * c ^ 2 * a + b * c ^ 2 * b + b * c ^ 2 * c + a * b ^ 2 * a + a * b ^ 2 * b + a * b ^ 2 * c + (a + b + c) ^ 2 * (a * b + a * c + b * c)) = 2 * ((a ^ 2 + a * b + b * c) * (b ^ 2 + a * c + b * c) * (c ^ 2 + a * b + a * c)) ^ (2 / 3) + a ^ 2 * b ^ 2 + a ^ 2 * c ^ 2 + b ^ 2 * c ^ 2 + 3 * a * b * c ^ 2 + 3 * a * c * b ^ 2 + 3 * b * c * a ^ 2 - (a * b ^ 3) - (b * c ^ 3) - (c * a ^ 3) - ((a + b + c) ^ 2 * (a * b + a * c + b * c))
  llm_exp_expand 2 * ((a ^ 2 + a * b + b * c) * (b ^ 2 + a * c + b * c) * (c ^ 2 + a * b + a * c)) ^ (2 / 3) + a ^ 2 * b ^ 2 + a ^ 2 * c ^ 2 + b ^ 2 * c ^ 2 + 3 * a * b * c ^ 2 + 3 * a * c * b ^ 2 + 3 * b * c * a ^ 2 - ((a + b + c) ^ 2 * (a * b + a * c + b * c) + c * a ^ 3 + b * c ^ 3 + a * b ^ 3) = a ^ 2 * b ^ 2 + a ^ 2 * c ^ 2 + b ^ 2 * c ^ 2 + 2 * (a ^ 2 + a * b + b * c) ^ (2 / (3)) * (b ^ 2 + a * c + b * c) ^ (2 / (3)) * (c ^ 2 + a * b + a * c) ^ (2 / (3)) + 3 * a * b * c ^ 2 + 3 * a * c * b ^ 2 + 3 * b * c * a ^ 2 - ((a + b + c) ^ 2 * (a * b + a * c + b * c) + c * a ^ 3 + b * c ^ 3 + a * b ^ 3)
  scale Muirhead_Req0_onestep_left_3vars (u := c) (v := a) (w := b) (p := 2) (q := 2) (k := 1) (l := (((((2 * ((((a ^ 2) + (a * b)) + (b * c)) ^ (2 / 3))) * ((((b ^ 2) + (a * c)) + (b * c)) ^ (2 / 3))) * ((((c ^ 2) + (a * b)) + (a * c)) ^ (2 / 3))) + (((3 * a) * b) * (c ^ 2))) + ((((3 * a) * c) * (b ^ 2)) + (((3 * b) * c) * (a ^ 2))))) (right := (a + b + c) ^ 2 * (a * b + a * c + b * c) + c * a ^ 3 + b * c ^ 3 + a * b ^ 3)
  llm_factor c ^ 3 * a + a ^ 3 * b + b ^ 3 * c + 2 * (a ^ 2 + a * b + b * c) ^ (2 / 3) * (b ^ 2 + a * c + b * c) ^ (2 / 3) * (c ^ 2 + a * b + a * c) ^ (2 / 3) + 3 * a * b * c ^ 2 + 3 * a * c * b ^ 2 + 3 * b * c * a ^ 2 - ((a + b + c) ^ 2 * (a * b + a * c + b * c) + c * a ^ 3 + b * c ^ 3 + a * b ^ 3) = 2 * (a ^ 2 + a * b + b * c) ^ (2 / 3) * (b ^ 2 + a * c + b * c) ^ (2 / 3) * (c ^ 2 + a * b + a * c) ^ (2 / 3) - (2 * a * b ^ 3) - (2 * b * c ^ 3) - (2 * c * a ^ 3) - (2 * a ^ 2 * b ^ 2) - (2 * a ^ 2 * c ^ 2) - (2 * b ^ 2 * c ^ 2) - (2 * a * b * c ^ 2) - (2 * a * c * b ^ 2) - (2 * b * c * a ^ 2)
  llm_simplify 2 * (a ^ 2 + a * b + b * c) ^ (2 / 3) * (b ^ 2 + a * c + b * c) ^ (2 / 3) * (c ^ 2 + a * b + a * c) ^ (2 / 3) - (2 * b * c * a ^ 2 + 2 * a * c * b ^ 2 + 2 * a * b * c ^ 2 + 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 2 + 2 * c * a ^ 3 + 2 * b * c ^ 3 + 2 * a * b ^ 3) = 2 * ((a ^ 2 + a * b + b * c) * (b ^ 2 + a * c + b * c) * (c ^ 2 + a * b + a * c)) ^ (2 / (3)) - (2 * (b * c * a ^ 2 + a * c * b ^ 2 + a * b * c ^ 2) + 2 * (b ^ 2 * c ^ 2 + a ^ 2 * c ^ 2 + a ^ 2 * b ^ 2) + 2 * (c * a ^ 3 + b * c ^ 3 + a * b ^ 3))
  scale Muirhead_Req0_onestep_right_3vars (u := a) (v := c) (w := b) (p := 2) (q := 2) (k := 2) (l := ((2 * ((((b * c) * (a ^ 2)) + ((a * c) * (b ^ 2))) + ((a * b) * (c ^ 2)))) + (2 * (((c * (a ^ 3)) + (b * (c ^ 3))) + (a * (b ^ 3)))))) (left := 2 * ((a ^ 2 + a * b + b * c) * (b ^ 2 + a * c + b * c) * (c ^ 2 + a * b + a * c)) ^ (2 / 3))
  llm_factor 2 * ((a ^ 2 + a * b + b * c) * (b ^ 2 + a * c + b * c) * (c ^ 2 + a * b + a * c)) ^ (2 / 3) - (2 * (a * c ^ 3 + c * b ^ 3 + b * a ^ 3) + 2 * (b * c * a ^ 2 + a * c * b ^ 2 + a * b * c ^ 2) + 2 * (c * a ^ 3 + b * c ^ 3 + a * b ^ 3)) = 2 * ((a ^ 2 + a * b + b * c) * (b ^ 2 + a * c + b * c) * (c ^ 2 + a * b + a * c)) ^ (2 / 3) - (2 * ((a ^ 2 + b ^ 2 + c ^ 2) ^ 3 * (a * b + a * c + b * c) ^ 3) ^ (1 / 3))
  llm_cancel_power 3
  llm_exp_expand (2 * ((a ^ 2 + a * b + b * c) * (b ^ 2 + a * c + b * c) * (c ^ 2 + a * b + a * c)) ^ (2 / 3)) ^ 3 - ((2 * ((a ^ 2 + b ^ 2 + c ^ 2) ^ 3 * (a * b + a * c + b * c) ^ 3) ^ (1 / 3)) ^ 3) = 8 * (((a ^ 2 + a * b + b * c) * (b ^ 2 + a * c + b * c) * (c ^ 2 + a * b + a * c)) ^ 2 - ((a ^ 2 + b ^ 2 + c ^ 2) ^ 3 * (a * b + a * c + b * c) ^ 3))
  closed_by_sos

theorem P5 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) :
  9 * (a * b * c) ^ (1 / 3) / (a + b + c) ≤ ((a ^ 2 + b * c) / (b ^ 2 + c ^ 2)) ^ (1 / 3) + ((b ^ 2 + c * a) / (c ^ 2 + a ^ 2)) ^ (1 / 3) + ((c ^ 2 + a * b) / (a ^ 2 + b ^ 2)) ^ (1 / 3) := by
  intro_by_homogeneous a + b + c = 3
  scale AM_GM_normal_right_3vars (u := ((((a ^ 2) + (b * c)) / ((b ^ 2) + (c ^ 2))) ^ (1 / 3))) (v := ((((b ^ 2) + (c * a)) / ((c ^ 2) + (a ^ 2))) ^ (1 / 3))) (w := ((((c ^ 2) + (a * b)) / ((a ^ 2) + (b ^ 2))) ^ (1 / 3))) (k := 1) (l := 0) (left := 9 * (a * b * c) ^ (1 / 3) / (a + b + c))
  llm_cancel_denom (9 * (a * b * c) ^ (1 / 3) / (a + b + c)) - (3 * (((a ^ 2 + b * c) / (b ^ 2 + c ^ 2)) ^ (1 / 3) * ((b ^ 2 + c * a) / (c ^ 2 + a ^ 2)) ^ (1 / 3) * ((c ^ 2 + a * b) / (a ^ 2 + b ^ 2)) ^ (1 / 3)) ^ (1 / 3)) = (9 * (a * b * c) ^ (1 / (3)) - (3 * (((c ^ 2 + a * b) / (a ^ 2 + b ^ 2)) ^ (1 / (3)) * ((b ^ 2 + c * a) / (a ^ 2 + c ^ 2)) ^ (1 / (3)) * ((a ^ 2 + b * c) / (b ^ 2 + c ^ 2)) ^ (1 / (3))) ^ (1 / (3)) * (a + b + c))) / (a + b + c)
  llm_cancel_power 3
  llm_cancel_denom (9 * (a * b * c) ^ (1 / 3)) ^ 3 - ((3 * (((c ^ 2 + a * b) / (a ^ 2 + b ^ 2)) ^ (1 / 3) * ((b ^ 2 + c * a) / (a ^ 2 + c ^ 2)) ^ (1 / 3) * ((a ^ 2 + b * c) / (b ^ 2 + c ^ 2)) ^ (1 / 3)) ^ (1 / 3) * (a + b + c)) ^ 3) = 729 * a * b * c - (27 * ((a ^ 2 + b * c) * (b ^ 2 + c * a) * (c ^ 2 + a * b) / ((a ^ 2 + b ^ 2) * (a ^ 2 + c ^ 2) * (b ^ 2 + c ^ 2))) ^ (3 / ((9))) * (a + b + c) ^ 3)
  llm_simplify 729 * a * b * c - (27 * ((a ^ 2 + b * c) * (b ^ 2 + c * a) * (c ^ 2 + a * b) / ((a ^ 2 + b ^ 2) * (a ^ 2 + c ^ 2) * (b ^ 2 + c ^ 2))) ^ (1 / 3) * (a + b + c) ^ 3) = 27 * -(((a ^ 2 + b * c) * (b ^ 2 + c * a) * (c ^ 2 + a * b) / ((a ^ 2 + b ^ 2) * (a ^ 2 + c ^ 2) * (b ^ 2 + c ^ 2))) ^ (1 / ((3))) * (a + b + c) ^ 3) + 729 * a * b * c
  llm_simplify 27 * -(((a ^ 2 + b * c) * (b ^ 2 + c * a) * (c ^ 2 + a * b) / ((a ^ 2 + b ^ 2) * (a ^ 2 + c ^ 2) * (b ^ 2 + c ^ 2))) ^ (1 / 3) * (a + b + c) ^ 3) + 729 * a * b * c - (0) = 729 * a * b * c - (27 * (a ^ 2 + b * c) ^ (1 / 3) * (b ^ 2 + a * c) ^ (1 / 3) * (c ^ 2 + a * b) ^ (1 / 3) * (a + b + c) ^ 3 / (((a ^ 2 + b ^ 2) ^ (1 / 3)) * ((a ^ 2 + c ^ 2) ^ (1 / 3)) * ((b ^ 2 + c ^ 2) ^ (1 / 3))))
  scale AM_GM_div_cubic_right_3vars (u := (((a ^ 2) + (b ^ 2)) ^ (1 / 3))) (v := (((a ^ 2) + (c ^ 2)) ^ (1 / 3))) (w := (((b ^ 2) + (c ^ 2)) ^ (1 / 3))) (i := 1) (j := 0) (k := ((((27 * (((a ^ 2) + (b * c)) ^ (1 / 3))) * (((b ^ 2) + (a * c)) ^ (1 / 3))) * (((c ^ 2) + (a * b)) ^ (1 / 3))) * (((a + b) + c) ^ 3))) (l := 0) (left := 729 * a * b * c)
  llm_simplify 729 * a * b * c - (27 * (a ^ 2 + b * c) ^ (1 / 3) * (b ^ 2 + a * c) ^ (1 / 3) * (c ^ 2 + a * b) ^ (1 / 3) * (a + b + c) ^ 3 * (1 / ((((a ^ 2 + b ^ 2) ^ (1 / 3)) ^ 3 + ((a ^ 2 + c ^ 2) ^ (1 / 3)) ^ 3 + ((b ^ 2 + c ^ 2) ^ (1 / 3)) ^ 3) / 3))) = 729 * a * b * c - (81 * ((a ^ 2 + b * c) * (b ^ 2 + a * c) * (c ^ 2 + a * b)) ^ (1 / ((3))) * (a + b + c) ^ 3 / (2 * (a ^ 2 + b ^ 2 + c ^ 2)))
  llm_cancel_denom 729 * a * b * c - (81 * ((a ^ 2 + b * c) * (b ^ 2 + a * c) * (c ^ 2 + a * b)) ^ (1 / 3) * (a + b + c) ^ 3 / (2 * (a ^ 2 + b ^ 2 + c ^ 2))) = (729 * a * b * c * 2 * (a ^ 2 + b ^ 2 + c ^ 2) - (81 * ((a ^ 2 + b * c) * (b ^ 2 + a * c) * (c ^ 2 + a * b)) ^ (1 / ((3))) * (a + b + c) ^ 3)) / (2 * (a ^ 2 + b ^ 2 + c ^ 2))
  llm_exp_expand 729 * a * b * c * 2 * (a ^ 2 + b ^ 2 + c ^ 2) - (81 * ((a ^ 2 + b * c) * (b ^ 2 + a * c) * (c ^ 2 + a * b)) ^ (1 / 3) * (a + b + c) ^ 3) = 1458 * a * b * c * (a ^ 2 + b ^ 2 + c ^ 2) - (81 * (a ^ 2 + b * c) ^ (1 / ((3))) * (b ^ 2 + a * c) ^ (1 / ((3))) * (c ^ 2 + a * b) ^ (1 / ((3))) * (a + b + c) ^ 3)
  llm_cancel_power 3
  llm_simplify (1458 * a * b * c * (a ^ 2 + b ^ 2 + c ^ 2)) ^ 3 - ((81 * (a ^ 2 + b * c) ^ (1 / 3) * (b ^ 2 + a * c) ^ (1 / 3) * (c ^ 2 + a * b) ^ (1 / 3) * (a + b + c) ^ 3) ^ 3) = (1458 * a * b * c * (a ^ 2 + b ^ 2 + c ^ 2)) ^ 3 - 81 ^ 3 * (a ^ 2 + b * c) * (b ^ 2 + a * c) * (c ^ 2 + a * b) * (a + b + c) ^ 9
  closed_by_sos

theorem P6 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) (h : a * b + b * c + c * a > 0) :
  2 / (a * b + b * c + c * a) ≤ 1 / (2 * a ^ 2 + b * c) + 1 / (2 * b ^ 2 + c * a) + 1 / (2 * c ^ 2 + a * b) := by
  intro_by_homogeneous a + b + c = 3
  llm_cancel_factor (2 / (a * b + b * c + c * a)) - (1 / (2 * a ^ 2 + b * c) + 1 / (2 * b ^ 2 + c * a) + 1 / (2 * c ^ 2 + a * b)) = (1 / (2 * a ^ 2 + b * c)) * (1 / (a * c + 2 * b ^ 2)) * (1 / (a * b + 2 * c ^ 2)) * (1 / (a * b + a * c + b * c)) * (4 * a ^ 3 * b ^ 3 + 4 * a ^ 3 * c ^ 3 + 4 * b ^ 3 * c ^ 3 + 15 * a ^ 2 * b ^ 2 * c ^ 2 - (2 * a ^ 2 * b ^ 4) - (2 * a ^ 2 * c ^ 4) - (2 * a ^ 4 * b ^ 2) - (2 * a ^ 4 * c ^ 2) - (2 * b ^ 2 * c ^ 4) - (2 * b ^ 4 * c ^ 2) - (7 * a * b ^ 2 * c ^ 3) - (7 * a * b ^ 3 * c ^ 2) - (7 * b * a ^ 2 * c ^ 3) - (7 * b * a ^ 3 * c ^ 2) - (7 * c * a ^ 2 * b ^ 3) - (7 * c * a ^ 3 * b ^ 2))
  scale AM_GM_normal_right_2vars (u := (((((7 * c) * (a ^ 3)) * (b ^ 2)) + (((7 * c) * (a ^ 2)) * (b ^ 3))) + (((7 * b) * (a ^ 3)) * (c ^ 2)))) (v := ((((7 * b) * (a ^ 2)) * (c ^ 3)) + ((((7 * a) * (b ^ 3)) * (c ^ 2)) + (((7 * a) * (b ^ 2)) * (c ^ 3))))) (k := 1) (l := ((((2 * (b ^ 4)) * (c ^ 2)) + ((2 * (b ^ 2)) * (c ^ 4))) + ((((2 * (a ^ 4)) * (c ^ 2)) + ((2 * (a ^ 4)) * (b ^ 2))) + (((2 * (a ^ 2)) * (c ^ 4)) + ((2 * (a ^ 2)) * (b ^ 4)))))) (left := 4 * a ^ 3 * b ^ 3 + 4 * a ^ 3 * c ^ 3 + 4 * b ^ 3 * c ^ 3 + 15 * a ^ 2 * b ^ 2 * c ^ 2)
  llm_factor 4 * a ^ 3 * b ^ 3 + 4 * a ^ 3 * c ^ 3 + 4 * b ^ 3 * c ^ 3 + 15 * a ^ 2 * b ^ 2 * c ^ 2 - (2 * sqrt((7 * c * a ^ 3 * b ^ 2 + 7 * c * a ^ 2 * b ^ 3 + 7 * b * a ^ 3 * c ^ 2) * (7 * b * a ^ 2 * c ^ 3 + 7 * a * b ^ 3 * c ^ 2 + 7 * a * b ^ 2 * c ^ 3)) + 2 * b ^ 4 * c ^ 2 + 2 * b ^ 2 * c ^ 4 + 2 * a ^ 4 * c ^ 2 + 2 * a ^ 4 * b ^ 2 + 2 * a ^ 2 * c ^ 4 + 2 * a ^ 2 * b ^ 4) = 4 * a ^ 3 * b ^ 3 + 4 * a ^ 3 * c ^ 3 + 4 * b ^ 3 * c ^ 3 + 15 * a ^ 2 * b ^ 2 * c ^ 2 - (14 * sqrt (a ^ 3 * b ^ 2 * c ^ 3 * (b ^ 2 + a * b + a * c) * (b ^ 2 + a * c + b * c))) - (2 * a ^ 2 * b ^ 4) - (2 * a ^ 2 * c ^ 4) - (2 * a ^ 4 * b ^ 2) - (2 * a ^ 4 * c ^ 2) - (2 * b ^ 2 * c ^ 4) - (2 * b ^ 4 * c ^ 2)
  scale AM_GM_normal_right_2vars (u := ((2 * (b ^ 4)) * (c ^ 2))) (v := ((2 * (b ^ 2)) * (c ^ 4))) (k := 1) (l := (((2 * (a ^ 4)) * (c ^ 2)) + ((((2 * (a ^ 4)) * (b ^ 2)) + ((2 * (a ^ 2)) * (c ^ 4))) + (((2 * (a ^ 2)) * (b ^ 4)) + (14 * sqrt ((((((a ^ 3) * (b ^ 2)) * (c ^ 3)) * (((b ^ 2) + (a * b)) + (a * c))) * (((b ^ 2) + (a * c)) + (b * c))))))))) (left := 4 * a ^ 3 * b ^ 3 + 4 * a ^ 3 * c ^ 3 + 4 * b ^ 3 * c ^ 3 + 15 * a ^ 2 * b ^ 2 * c ^ 2)
  llm_simplify 4 * a ^ 3 * b ^ 3 + 4 * a ^ 3 * c ^ 3 + 4 * b ^ 3 * c ^ 3 + 15 * a ^ 2 * b ^ 2 * c ^ 2 - (2 * sqrt(2 * b ^ 4 * c ^ 2 * 2 * b ^ 2 * c ^ 4) + 2 * a ^ 4 * c ^ 2 + 2 * a ^ 4 * b ^ 2 + 2 * a ^ 2 * c ^ 4 + 2 * a ^ 2 * b ^ 4 + 14 * sqrt(a ^ 3 * b ^ 2 * c ^ 3 * (b ^ 2 + a * b + a * c) * (b ^ 2 + a * c + b * c))) = 4 * a ^ 3 * b ^ 3 + 4 * a ^ 3 * c ^ 3 + 15 * a ^ 2 * b ^ 2 * c ^ 2 - (2 * a ^ 2 * b ^ 4) - (2 * a ^ 2 * c ^ 4) - (2 * a ^ 4 * b ^ 2) - (2 * a ^ 4 * c ^ 2) - (14 * b * a ^ (3 / 2) * c ^ (3 / 2) * sqrt (b ^ 4 + a * b ^ 3 + c * b ^ 3 + a ^ 2 * c ^ 2 + a * b * c ^ 2 + b * c * a ^ 2 + 3 * a * c * b ^ 2))
  llm_factor 4 * a ^ 3 * b ^ 3 + 4 * a ^ 3 * c ^ 3 + 15 * a ^ 2 * b ^ 2 * c ^ 2 - (14 * b * a ^ (3 / 2) * c ^ (3 / 2) * sqrt(b ^ 4 + a * b ^ 3 + c * b ^ 3 + a ^ 2 * c ^ 2 + a * b * c ^ 2 + b * c * a ^ 2 + 3 * a * c * b ^ 2) + 2 * a ^ 4 * c ^ 2 + 2 * a ^ 4 * b ^ 2 + 2 * a ^ 2 * c ^ 4 + 2 * a ^ 2 * b ^ 4) = 4 * a ^ 3 * b ^ 3 + 4 * a ^ 3 * c ^ 3 + 15 * a ^ 2 * b ^ 2 * c ^ 2 - (2 * a ^ 2 * b ^ 4) - (2 * a ^ 2 * c ^ 4) - (2 * a ^ 4 * b ^ 2) - (2 * a ^ 4 * c ^ 2) - (14 * b * a ^ (3 / 2) * c ^ (3 / 2) * sqrt ((b ^ 2 + a * b + a * c) * (b ^ 2 + a * c + b * c)))
  llm_exp_expand 4 * a ^ 3 * b ^ 3 + 4 * a ^ 3 * c ^ 3 + 15 * a ^ 2 * b ^ 2 * c ^ 2 - (14 * b * a ^ (3 / 2) * c ^ (3 / 2) * sqrt((b ^ 2 + a * b + a * c) * (b ^ 2 + a * c + b * c)) + 2 * a ^ 4 * c ^ 2 + 2 * a ^ 4 * b ^ 2 + 2 * a ^ 2 * c ^ 4 + 2 * a ^ 2 * b ^ 4) = 4 * a ^ 3 * b ^ 3 + 4 * a ^ 3 * c ^ 3 + 15 * a ^ 2 * b ^ 2 * c ^ 2 - (2 * a ^ 2 * b ^ 4) - (2 * a ^ 2 * c ^ 4) - (2 * a ^ 4 * b ^ 2) - (2 * a ^ 4 * c ^ 2) - (14 * b * a ^ (3 / 2) * c ^ (3 / 2) * sqrt (b ^ 2 + a * b + a * c) * sqrt (b ^ 2 + a * c + b * c))
  scale Holder_2R_right_2vars (u1 := (b ^ 2)) (u2 := (a * c)) (u3 := (a * b)) (v1 := (a * c)) (v2 := (b ^ 2)) (v3 := (b * c)) (r1 := (1 / 2)) (r2 := (1 / 2)) (k := (((14 * b) * (a ^ (3 / 2))) * (c ^ (3 / 2)))) (l := ((((2 * (a ^ 4)) * (c ^ 2)) + ((2 * (a ^ 4)) * (b ^ 2))) + (((2 * (a ^ 2)) * (c ^ 4)) + ((2 * (a ^ 2)) * (b ^ 4))))) (left := 4 * a ^ 3 * b ^ 3 + 4 * a ^ 3 * c ^ 3 + 15 * a ^ 2 * b ^ 2 * c ^ 2)
  llm_simplify 4 * a ^ 3 * b ^ 3 + 4 * a ^ 3 * c ^ 3 + 15 * a ^ 2 * b ^ 2 * c ^ 2 - (14 * b * a ^ (3 / 2) * c ^ (3 / 2) * ((b ^ 2) ^ (1 / 2) * (a * c) ^ (1 / 2) + (a * c) ^ (1 / 2) * (b ^ 2) ^ (1 / 2) + (a * b) ^ (1 / 2) * (b * c) ^ (1 / 2)) + 2 * a ^ 4 * c ^ 2 + 2 * a ^ 4 * b ^ 2 + 2 * a ^ 2 * c ^ 4 + 2 * a ^ 2 * b ^ 4) = a ^ 2 * (4 * a * b ^ 3 + 4 * a * c ^ 3 - (2 * b ^ 4) - (2 * c ^ 4) - (27 * b ^ 2 * c ^ 2) - (2 * a ^ 2 * b ^ 2) - (2 * a ^ 2 * c ^ 2))
  llm_cancel_factor (a ^ 2 * (4 * a * b ^ 3 + 4 * a * c ^ 3 - 2 * b ^ 4 - 2 * c ^ 4 - 27 * b ^ 2 * c ^ 2 - 2 * a ^ 2 * b ^ 2 - 2 * a ^ 2 * c ^ 2)) - (0) = (a ^ 2) * (4 * a * b ^ 3 + 4 * a * c ^ 3 - (2 * b ^ 4) - (2 * c ^ 4) - (27 * b ^ 2 * c ^ 2) - (2 * a ^ 2 * b ^ 2) - (2 * a ^ 2 * c ^ 2))
  scale AM_GM_square_right_2vars (u := (a * c)) (v := (c ^ 2)) (k := 2) (l := ((((2 * (a ^ 2)) * (b ^ 2)) + ((27 * (b ^ 2)) * (c ^ 2))) + (2 * (b ^ 4)))) (left := 4 * a * b ^ 3 + 4 * a * c ^ 3)
  scale AM_GM_square_right_2vars (u := (a * b)) (v := (b ^ 2)) (k := 2) (l := (((27 * (b ^ 2)) * (c ^ 2)) + (((4 * a) * c) * (c ^ 2)))) (left := 4 * a * b ^ 3 + 4 * a * c ^ 3)
  try close

theorem P7 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) (h : a * b + b * c + c * a > 0) :
  12 / ((a + b + c) ^ 2) ≤ 1 / (2 * a ^ 2 + b * c) + 1 / (2 * b ^ 2 + c * a) + 1 / (2 * c ^ 2 + a * b) + 1 / (a * b + b * c + c * a) := by
  intro_by_homogeneous a + b + c = 3
  llm_cancel_denom (12 / (a + b + c) ^ 2) - (1 / (2 * a ^ 2 + b * c) + 1 / (2 * b ^ 2 + c * a) + 1 / (2 * c ^ 2 + a * b) + 1 / (a * b + b * c + c * a)) = (12 * (2 * a ^ 2 + b * c) * (2 * b ^ 2 + a * c) * (2 * c ^ 2 + a * b) * (a * b + a * c + b * c) - ((a + b + c) ^ 2 * ((2 * a ^ 2 + b * c) * (2 * b ^ 2 + a * c) * (2 * c ^ 2 + a * b) + (2 * a ^ 2 + b * c) * (2 * b ^ 2 + a * c) * (a * b + a * c + b * c) + (2 * a ^ 2 + b * c) * (2 * c ^ 2 + a * b) * (a * b + a * c + b * c) + (2 * b ^ 2 + a * c) * (2 * c ^ 2 + a * b) * (a * b + a * c + b * c)))) / ((a + b + c) ^ 2 * (2 * a ^ 2 + b * c) * (2 * b ^ 2 + a * c) * (2 * c ^ 2 + a * b) * (a * b + a * c + b * c))
  closed_by_sos

theorem P8 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) (h : 16 * (a + b + c) ≥ 1 / a + 1 / b + 1 / c) :
  (1 / (a + b + sqrt (2 * (a + c))) ^ 3 + 1 / (b + c + sqrt (2 * (b + a))) ^ 3 + 1 / (c + a + sqrt (2 * (c + b))) ^ 3) ≤ 8 / 9 := by
  sorry

theorem P9 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) (h : a * b * c = 1) :
  sqrt (a * b + b * c + c * a) ≤ (a ^ 3 + 1) / sqrt (a ^ 4 + b + c) + (b ^ 3 + 1) / sqrt (b ^ 4 + c + a) + (c ^ 3 + 1) / sqrt (c ^ 4 + a + b) := by
  make_homogeneous sqrt (a * b + a * c + b * c) - ((c ^ 3 + a * b * c) / (sqrt (a ^ 2 * b * c + a * b ^ 2 * c + c ^ 4))) - ((b ^ 3 + a * b * c) / (sqrt (a ^ 2 * b * c + a * b * c ^ 2 + b ^ 4))) - ((a ^ 3 + a * b * c) / (sqrt (a ^ 4 + a * b ^ 2 * c + a * b * c ^ 2))) ≤ 0
  scale Holder_2R_div_variant1_right_3vars (u1 := ((a ^ 3) + ((a * b) * c))) (u2 := ((b ^ 3) + ((a * b) * c))) (u3 := ((c ^ 3) + ((a * b) * c))) (v1 := sqrt ((((a ^ 4) + ((a * (b ^ 2)) * c)) + ((a * b) * (c ^ 2))))) (v2 := sqrt ((((((a ^ 2) * b) * c) + ((a * b) * (c ^ 2))) + (b ^ 4)))) (v3 := sqrt ((((((a ^ 2) * b) * c) + ((a * (b ^ 2)) * c)) + (c ^ 4)))) (k := 1) (l := 0) (left := sqrt(a * b + a * c + b * c))
  llm_factor sqrt(a * b + a * c + b * c) - (sqrt((a ^ 3 + a * b * c + b ^ 3 + a * b * c + c ^ 3 + a * b * c) ^ 3 / ((a ^ 3 + a * b * c) * sqrt(a ^ 4 + a * b ^ 2 * c + a * b * c ^ 2) ^ 2 + (b ^ 3 + a * b * c) * sqrt(a ^ 2 * b * c + a * b * c ^ 2 + b ^ 4) ^ 2 + (c ^ 3 + a * b * c) * sqrt(a ^ 2 * b * c + a * b ^ 2 * c + c ^ 4) ^ 2))) = sqrt (a * b + a * c + b * c) - (sqrt ((a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b * c) ^ 3 / (a ^ 7 + a ^ 5 * b * c + a ^ 4 * b ^ 2 * c + a ^ 4 * b * c ^ 2 + 2 * a ^ 3 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 4 * c + 2 * a ^ 2 * b ^ 3 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 3 + a ^ 2 * b * c ^ 4 + a * b ^ 5 * c + a * b ^ 4 * c ^ 2 + a * b ^ 2 * c ^ 4 + a * b * c ^ 5 + b ^ 7 + c ^ 7)))
  llm_cancel_power 2
  llm_cancel_denom (a * b + a * c + b * c) - ((a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b * c) ^ 3 / (a ^ 7 + a ^ 5 * b * c + a ^ 4 * b ^ 2 * c + a ^ 4 * b * c ^ 2 + 2 * a ^ 3 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 4 * c + 2 * a ^ 2 * b ^ 3 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 3 + a ^ 2 * b * c ^ 4 + a * b ^ 5 * c + a * b ^ 4 * c ^ 2 + a * b ^ 2 * c ^ 4 + a * b * c ^ 5 + b ^ 7 + c ^ 7)) = ((a * b + a * c + b * c) * (a ^ 7 + b ^ 7 + c ^ 7 + a * b * c ^ 5 + a * c * b ^ 5 + a * b ^ 2 * c ^ 4 + a * b ^ 4 * c ^ 2 + b * c * a ^ 5 + b * a ^ 2 * c ^ 4 + b * a ^ 4 * c ^ 2 + c * a ^ 2 * b ^ 4 + c * a ^ 4 * b ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 3 + 2 * a ^ 2 * b ^ 3 * c ^ 2 + 2 * a ^ 3 * b ^ 2 * c ^ 2) - ((a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b * c) ^ 3)) / (a ^ 7 + b ^ 7 + c ^ 7 + a * b * c ^ 5 + a * c * b ^ 5 + a * b ^ 2 * c ^ 4 + a * b ^ 4 * c ^ 2 + b * c * a ^ 5 + b * a ^ 2 * c ^ 4 + b * a ^ 4 * c ^ 2 + c * a ^ 2 * b ^ 4 + c * a ^ 4 * b ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 3 + 2 * a ^ 2 * b ^ 3 * c ^ 2 + 2 * a ^ 3 * b ^ 2 * c ^ 2)
  llm_mul_expand (a * b + a * c + b * c) * (a ^ 7 + b ^ 7 + c ^ 7 + a * b * c ^ 5 + a * c * b ^ 5 + a * b ^ 2 * c ^ 4 + a * b ^ 4 * c ^ 2 + b * c * a ^ 5 + b * a ^ 2 * c ^ 4 + b * a ^ 4 * c ^ 2 + c * a ^ 2 * b ^ 4 + c * a ^ 4 * b ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 3 + 2 * a ^ 2 * b ^ 3 * c ^ 2 + 2 * a ^ 3 * b ^ 2 * c ^ 2) - ((a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b * c) ^ 3) = a * b ^ 8 + a * c ^ 8 + b * a ^ 8 + b * c ^ 8 + c * a ^ 8 + c * b ^ 8 + a * b ^ 2 * c ^ 6 + a * b ^ 3 * c ^ 5 + a * b ^ 5 * c ^ 3 + a * b ^ 6 * c ^ 2 + b * a ^ 2 * c ^ 6 + b * a ^ 3 * c ^ 5 + b * a ^ 5 * c ^ 3 + b * a ^ 6 * c ^ 2 + c * a ^ 2 * b ^ 6 + c * a ^ 3 * b ^ 5 + c * a ^ 5 * b ^ 3 + c * a ^ 6 * b ^ 2 + 3 * a ^ 2 * b ^ 3 * c ^ 4 + 3 * a ^ 2 * b ^ 4 * c ^ 3 + 3 * a ^ 3 * b ^ 2 * c ^ 4 + 3 * a ^ 3 * b ^ 4 * c ^ 2 + 3 * a ^ 4 * b ^ 2 * c ^ 3 + 3 * a ^ 4 * b ^ 3 * c ^ 2 - (a ^ 9) - (b ^ 9) - (c ^ 9) - (3 * a ^ 3 * b ^ 6) - (3 * a ^ 3 * c ^ 6) - (3 * a ^ 6 * b ^ 3) - (3 * a ^ 6 * c ^ 3) - (3 * b ^ 3 * c ^ 6) - (3 * b ^ 6 * c ^ 3) - (27 * a ^ 3 * b ^ 3 * c ^ 3) - (24 * a ^ 2 * b ^ 2 * c ^ 5) - (24 * a ^ 2 * b ^ 5 * c ^ 2) - (24 * a ^ 5 * b ^ 2 * c ^ 2) - (18 * a * b ^ 4 * c ^ 4) - (18 * b * a ^ 4 * c ^ 4) - (18 * c * a ^ 4 * b ^ 4) - (8 * a * b * c ^ 7) - (8 * a * c * b ^ 7) - (8 * b * c * a ^ 7)
  scale Muirhead_normal_left_2vars (u := c) (v := b) (p := 3) (q := 2) (k := (3 * (a ^ 4))) (l := ((((((((((((((((((((((a * (b ^ 8)) + (a * (c ^ 8))) + (b * (a ^ 8))) + (b * (c ^ 8))) + (c * (a ^ 8))) + (c * (b ^ 8))) + ((a * (b ^ 2)) * (c ^ 6))) + ((a * (b ^ 3)) * (c ^ 5))) + ((a * (b ^ 5)) * (c ^ 3))) + ((a * (b ^ 6)) * (c ^ 2))) + ((b * (a ^ 2)) * (c ^ 6))) + ((b * (a ^ 3)) * (c ^ 5))) + ((b * (a ^ 5)) * (c ^ 3))) + ((b * (a ^ 6)) * (c ^ 2))) + ((c * (a ^ 2)) * (b ^ 6))) + ((c * (a ^ 3)) * (b ^ 5))) + ((c * (a ^ 5)) * (b ^ 3))) + ((c * (a ^ 6)) * (b ^ 2))) + (((3 * (a ^ 2)) * (b ^ 3)) * (c ^ 4))) + (((3 * (a ^ 2)) * (b ^ 4)) * (c ^ 3))) + (((3 * (a ^ 3)) * (b ^ 2)) * (c ^ 4))) + (((3 * (a ^ 3)) * (b ^ 4)) * (c ^ 2)))) (right := 8 * b * c * a ^ 7 + 8 * a * c * b ^ 7 + 8 * a * b * c ^ 7 + 18 * c * a ^ 4 * b ^ 4 + 18 * b * a ^ 4 * c ^ 4 + 18 * a * b ^ 4 * c ^ 4 + 24 * a ^ 5 * b ^ 2 * c ^ 2 + 24 * a ^ 2 * b ^ 5 * c ^ 2 + 24 * a ^ 2 * b ^ 2 * c ^ 5 + 27 * a ^ 3 * b ^ 3 * c ^ 3 + 3 * b ^ 6 * c ^ 3 + 3 * b ^ 3 * c ^ 6 + 3 * a ^ 6 * c ^ 3 + 3 * a ^ 6 * b ^ 3 + 3 * a ^ 3 * c ^ 6 + 3 * a ^ 3 * b ^ 6 + c ^ 9 + b ^ 9 + a ^ 9)
  scale weighted_AM_GM_normal_left_2vars (u := b) (v := c) (i1 := 2) (i2 := 4) (k := (3 * (a ^ 3))) (l := ((((3 * (a ^ 3)) * (b ^ 4)) * (c ^ 2)) + ((((((((((((((((((((((3 * (a ^ 4)) * ((c ^ 5) + (b ^ 5))) + (a * (b ^ 8))) + (a * (c ^ 8))) + (b * (a ^ 8))) + (b * (c ^ 8))) + (c * (a ^ 8))) + (c * (b ^ 8))) + ((a * (b ^ 2)) * (c ^ 6))) + ((a * (b ^ 3)) * (c ^ 5))) + ((a * (b ^ 5)) * (c ^ 3))) + ((a * (b ^ 6)) * (c ^ 2))) + ((b * (a ^ 2)) * (c ^ 6))) + ((b * (a ^ 3)) * (c ^ 5))) + ((b * (a ^ 5)) * (c ^ 3))) + ((b * (a ^ 6)) * (c ^ 2))) + ((c * (a ^ 2)) * (b ^ 6))) + ((c * (a ^ 3)) * (b ^ 5))) + ((c * (a ^ 5)) * (b ^ 3))) + ((c * (a ^ 6)) * (b ^ 2))) + (((3 * (a ^ 2)) * (b ^ 3)) * (c ^ 4))) + (((3 * (a ^ 2)) * (b ^ 4)) * (c ^ 3))))) (right := 8 * b * c * a ^ 7 + 8 * a * c * b ^ 7 + 8 * a * b * c ^ 7 + 18 * c * a ^ 4 * b ^ 4 + 18 * b * a ^ 4 * c ^ 4 + 18 * a * b ^ 4 * c ^ 4 + 24 * a ^ 5 * b ^ 2 * c ^ 2 + 24 * a ^ 2 * b ^ 5 * c ^ 2 + 24 * a ^ 2 * b ^ 2 * c ^ 5 + 27 * a ^ 3 * b ^ 3 * c ^ 3 + 3 * b ^ 6 * c ^ 3 + 3 * b ^ 3 * c ^ 6 + 3 * a ^ 6 * c ^ 3 + 3 * a ^ 6 * b ^ 3 + 3 * a ^ 3 * c ^ 6 + 3 * a ^ 3 * b ^ 6 + c ^ 9 + b ^ 9 + a ^ 9)
  scale weighted_AM_GM_normal_left_2vars (u := b) (v := c) (i1 := 3) (i2 := 4) (k := (3 * (a ^ 2))) (l := ((((3 * (a ^ 2)) * (b ^ 4)) * (c ^ 3)) + ((((((((((((((((((((((3 * (a ^ 3)) * ((((2 * b) + (4 * c)) / 6) ^ 6)) + (((3 * (a ^ 3)) * (b ^ 4)) * (c ^ 2))) + ((3 * (a ^ 4)) * ((c ^ 5) + (b ^ 5)))) + (a * (b ^ 8))) + (a * (c ^ 8))) + (b * (a ^ 8))) + (b * (c ^ 8))) + (c * (a ^ 8))) + (c * (b ^ 8))) + ((a * (b ^ 2)) * (c ^ 6))) + ((a * (b ^ 3)) * (c ^ 5))) + ((a * (b ^ 5)) * (c ^ 3))) + ((a * (b ^ 6)) * (c ^ 2))) + ((b * (a ^ 2)) * (c ^ 6))) + ((b * (a ^ 3)) * (c ^ 5))) + ((b * (a ^ 5)) * (c ^ 3))) + ((b * (a ^ 6)) * (c ^ 2))) + ((c * (a ^ 2)) * (b ^ 6))) + ((c * (a ^ 3)) * (b ^ 5))) + ((c * (a ^ 5)) * (b ^ 3))) + ((c * (a ^ 6)) * (b ^ 2))))) (right := 8 * b * c * a ^ 7 + 8 * a * c * b ^ 7 + 8 * a * b * c ^ 7 + 18 * c * a ^ 4 * b ^ 4 + 18 * b * a ^ 4 * c ^ 4 + 18 * a * b ^ 4 * c ^ 4 + 24 * a ^ 5 * b ^ 2 * c ^ 2 + 24 * a ^ 2 * b ^ 5 * c ^ 2 + 24 * a ^ 2 * b ^ 2 * c ^ 5 + 27 * a ^ 3 * b ^ 3 * c ^ 3 + 3 * b ^ 6 * c ^ 3 + 3 * b ^ 3 * c ^ 6 + 3 * a ^ 6 * c ^ 3 + 3 * a ^ 6 * b ^ 3 + 3 * a ^ 3 * c ^ 6 + 3 * a ^ 3 * b ^ 6 + c ^ 9 + b ^ 9 + a ^ 9)
  scale Muirhead_normal_left_2vars (u := a) (v := b) (p := 3) (q := 5) (k := c) (l := (((c * (a ^ 6)) * (b ^ 2)) + (((((((((((((((((((((3 * (a ^ 2)) * ((((3 * b) + (4 * c)) / 7) ^ 7)) + (((3 * (a ^ 2)) * (b ^ 4)) * (c ^ 3))) + ((3 * (a ^ 3)) * ((((2 * b) + (4 * c)) / 6) ^ 6))) + (((3 * (a ^ 3)) * (b ^ 4)) * (c ^ 2))) + ((3 * (a ^ 4)) * ((c ^ 5) + (b ^ 5)))) + (a * (b ^ 8))) + (a * (c ^ 8))) + (b * (a ^ 8))) + (b * (c ^ 8))) + (c * (a ^ 8))) + (c * (b ^ 8))) + ((a * (b ^ 2)) * (c ^ 6))) + ((a * (b ^ 3)) * (c ^ 5))) + ((a * (b ^ 5)) * (c ^ 3))) + ((a * (b ^ 6)) * (c ^ 2))) + ((b * (a ^ 2)) * (c ^ 6))) + ((b * (a ^ 3)) * (c ^ 5))) + ((b * (a ^ 5)) * (c ^ 3))) + ((b * (a ^ 6)) * (c ^ 2))) + ((c * (a ^ 2)) * (b ^ 6))))) (right := 8 * b * c * a ^ 7 + 8 * a * c * b ^ 7 + 8 * a * b * c ^ 7 + 18 * c * a ^ 4 * b ^ 4 + 18 * b * a ^ 4 * c ^ 4 + 18 * a * b ^ 4 * c ^ 4 + 24 * a ^ 5 * b ^ 2 * c ^ 2 + 24 * a ^ 2 * b ^ 5 * c ^ 2 + 24 * a ^ 2 * b ^ 2 * c ^ 5 + 27 * a ^ 3 * b ^ 3 * c ^ 3 + 3 * b ^ 6 * c ^ 3 + 3 * b ^ 3 * c ^ 6 + 3 * a ^ 6 * c ^ 3 + 3 * a ^ 6 * b ^ 3 + 3 * a ^ 3 * c ^ 6 + 3 * a ^ 3 * b ^ 6 + c ^ 9 + b ^ 9 + a ^ 9)
  scale weighted_AM_GM_normal_left_2vars (u := a) (v := c) (i1 := 6) (i2 := 2) (k := b) (l := (((((((((((((((((((((c * ((a ^ 8) + (b ^ 8))) + ((c * (a ^ 6)) * (b ^ 2))) + ((3 * (a ^ 2)) * ((((3 * b) + (4 * c)) / 7) ^ 7))) + (((3 * (a ^ 2)) * (b ^ 4)) * (c ^ 3))) + ((3 * (a ^ 3)) * ((((2 * b) + (4 * c)) / 6) ^ 6))) + (((3 * (a ^ 3)) * (b ^ 4)) * (c ^ 2))) + ((3 * (a ^ 4)) * ((c ^ 5) + (b ^ 5)))) + (a * (b ^ 8))) + (a * (c ^ 8))) + (b * (a ^ 8))) + (b * (c ^ 8))) + (c * (a ^ 8))) + (c * (b ^ 8))) + ((a * (b ^ 2)) * (c ^ 6))) + ((a * (b ^ 3)) * (c ^ 5))) + ((a * (b ^ 5)) * (c ^ 3))) + ((a * (b ^ 6)) * (c ^ 2))) + ((b * (a ^ 2)) * (c ^ 6))) + ((b * (a ^ 3)) * (c ^ 5))) + ((b * (a ^ 5)) * (c ^ 3))) + ((c * (a ^ 2)) * (b ^ 6)))) (right := 8 * b * c * a ^ 7 + 8 * a * c * b ^ 7 + 8 * a * b * c ^ 7 + 18 * c * a ^ 4 * b ^ 4 + 18 * b * a ^ 4 * c ^ 4 + 18 * a * b ^ 4 * c ^ 4 + 24 * a ^ 5 * b ^ 2 * c ^ 2 + 24 * a ^ 2 * b ^ 5 * c ^ 2 + 24 * a ^ 2 * b ^ 2 * c ^ 5 + 27 * a ^ 3 * b ^ 3 * c ^ 3 + 3 * b ^ 6 * c ^ 3 + 3 * b ^ 3 * c ^ 6 + 3 * a ^ 6 * c ^ 3 + 3 * a ^ 6 * b ^ 3 + 3 * a ^ 3 * c ^ 6 + 3 * a ^ 3 * b ^ 6 + c ^ 9 + b ^ 9 + a ^ 9)
  scale Muirhead_normal_Qeq1_left_2vars (u := b) (v := c) (p := 6) (k := (a ^ 2)) (l := (((((((((((((((((((b * ((((6 * a) + (2 * c)) / 8) ^ 8)) + (c * ((a ^ 8) + (b ^ 8)))) + ((c * (a ^ 6)) * (b ^ 2))) + ((3 * (a ^ 2)) * ((((3 * b) + (4 * c)) / 7) ^ 7))) + (((3 * (a ^ 2)) * (b ^ 4)) * (c ^ 3))) + ((3 * (a ^ 3)) * ((((2 * b) + (4 * c)) / 6) ^ 6))) + (((3 * (a ^ 3)) * (b ^ 4)) * (c ^ 2))) + ((3 * (a ^ 4)) * ((c ^ 5) + (b ^ 5)))) + (a * (b ^ 8))) + (a * (c ^ 8))) + (b * (a ^ 8))) + (b * (c ^ 8))) + (c * (a ^ 8))) + (c * (b ^ 8))) + ((a * (b ^ 2)) * (c ^ 6))) + ((a * (b ^ 3)) * (c ^ 5))) + ((a * (b ^ 5)) * (c ^ 3))) + ((a * (b ^ 6)) * (c ^ 2))) + (((b * (a ^ 3)) * (c ^ 5)) + ((b * (a ^ 5)) * (c ^ 3))))) (right := 8 * b * c * a ^ 7 + 8 * a * c * b ^ 7 + 8 * a * b * c ^ 7 + 18 * c * a ^ 4 * b ^ 4 + 18 * b * a ^ 4 * c ^ 4 + 18 * a * b ^ 4 * c ^ 4 + 24 * a ^ 5 * b ^ 2 * c ^ 2 + 24 * a ^ 2 * b ^ 5 * c ^ 2 + 24 * a ^ 2 * b ^ 2 * c ^ 5 + 27 * a ^ 3 * b ^ 3 * c ^ 3 + 3 * b ^ 6 * c ^ 3 + 3 * b ^ 3 * c ^ 6 + 3 * a ^ 6 * c ^ 3 + 3 * a ^ 6 * b ^ 3 + 3 * a ^ 3 * c ^ 6 + 3 * a ^ 3 * b ^ 6 + c ^ 9 + b ^ 9 + a ^ 9)
  scale AM_GM_cubic_left_3vars (u := c) (v := c) (w := a) (k := (b ^ 6)) (l := ((((((((((((((((((((a ^ 2) * ((b ^ 7) + (c ^ 7))) + (b * ((((6 * a) + (2 * c)) / 8) ^ 8))) + (c * ((a ^ 8) + (b ^ 8)))) + ((c * (a ^ 6)) * (b ^ 2))) + ((3 * (a ^ 2)) * ((((3 * b) + (4 * c)) / 7) ^ 7))) + (((3 * (a ^ 2)) * (b ^ 4)) * (c ^ 3))) + ((3 * (a ^ 3)) * ((((2 * b) + (4 * c)) / 6) ^ 6))) + (((3 * (a ^ 3)) * (b ^ 4)) * (c ^ 2))) + ((3 * (a ^ 4)) * ((c ^ 5) + (b ^ 5)))) + (a * (b ^ 8))) + (a * (c ^ 8))) + (b * (a ^ 8))) + (b * (c ^ 8))) + (c * (a ^ 8))) + (c * (b ^ 8))) + ((a * (b ^ 2)) * (c ^ 6))) + ((a * (b ^ 3)) * (c ^ 5))) + ((a * (b ^ 5)) * (c ^ 3))) + (((b * (a ^ 3)) * (c ^ 5)) + ((b * (a ^ 5)) * (c ^ 3))))) (right := 8 * b * c * a ^ 7 + 8 * a * c * b ^ 7 + 8 * a * b * c ^ 7 + 18 * c * a ^ 4 * b ^ 4 + 18 * b * a ^ 4 * c ^ 4 + 18 * a * b ^ 4 * c ^ 4 + 24 * a ^ 5 * b ^ 2 * c ^ 2 + 24 * a ^ 2 * b ^ 5 * c ^ 2 + 24 * a ^ 2 * b ^ 2 * c ^ 5 + 27 * a ^ 3 * b ^ 3 * c ^ 3 + 3 * b ^ 6 * c ^ 3 + 3 * b ^ 3 * c ^ 6 + 3 * a ^ 6 * c ^ 3 + 3 * a ^ 6 * b ^ 3 + 3 * a ^ 3 * c ^ 6 + 3 * a ^ 3 * b ^ 6 + c ^ 9 + b ^ 9 + a ^ 9)
  scale Muirhead_normal_left_2vars (u := a) (v := c) (p := 3) (q := 5) (k := b) (l := (((((((((((((((((((((b ^ 6) * (((c ^ 3) + (c ^ 3)) + (a ^ 3))) / 3) + ((a ^ 2) * ((b ^ 7) + (c ^ 7)))) + (b * ((((6 * a) + (2 * c)) / 8) ^ 8))) + (c * ((a ^ 8) + (b ^ 8)))) + ((c * (a ^ 6)) * (b ^ 2))) + ((3 * (a ^ 2)) * ((((3 * b) + (4 * c)) / 7) ^ 7))) + (((3 * (a ^ 2)) * (b ^ 4)) * (c ^ 3))) + ((3 * (a ^ 3)) * ((((2 * b) + (4 * c)) / 6) ^ 6))) + (((3 * (a ^ 3)) * (b ^ 4)) * (c ^ 2))) + ((3 * (a ^ 4)) * ((c ^ 5) + (b ^ 5)))) + (a * (b ^ 8))) + (a * (c ^ 8))) + (b * (a ^ 8))) + (b * (c ^ 8))) + (c * (a ^ 8))) + (c * (b ^ 8))) + ((a * (b ^ 2)) * (c ^ 6))) + ((a * (b ^ 3)) * (c ^ 5))) + ((a * (b ^ 5)) * (c ^ 3)))) (right := 8 * b * c * a ^ 7 + 8 * a * c * b ^ 7 + 8 * a * b * c ^ 7 + 18 * c * a ^ 4 * b ^ 4 + 18 * b * a ^ 4 * c ^ 4 + 18 * a * b ^ 4 * c ^ 4 + 24 * a ^ 5 * b ^ 2 * c ^ 2 + 24 * a ^ 2 * b ^ 5 * c ^ 2 + 24 * a ^ 2 * b ^ 2 * c ^ 5 + 27 * a ^ 3 * b ^ 3 * c ^ 3 + 3 * b ^ 6 * c ^ 3 + 3 * b ^ 3 * c ^ 6 + 3 * a ^ 6 * c ^ 3 + 3 * a ^ 6 * b ^ 3 + 3 * a ^ 3 * c ^ 6 + 3 * a ^ 3 * b ^ 6 + c ^ 9 + b ^ 9 + a ^ 9)
  llm_frac_together b * (a ^ 8 + c ^ 8) + b ^ 6 * (c ^ 3 + c ^ 3 + a ^ 3) / 3 + a ^ 2 * (b ^ 7 + c ^ 7) + b * ((6 * a + 2 * c) / 8) ^ 8 + c * (a ^ 8 + b ^ 8) + c * a ^ 6 * b ^ 2 + 3 * a ^ 2 * ((3 * b + 4 * c) / 7) ^ 7 + 3 * a ^ 2 * b ^ 4 * c ^ 3 + 3 * a ^ 3 * ((2 * b + 4 * c) / 6) ^ 6 + 3 * a ^ 3 * b ^ 4 * c ^ 2 + 3 * a ^ 4 * (c ^ 5 + b ^ 5) + a * b ^ 8 + a * c ^ 8 + b * a ^ 8 + b * c ^ 8 + c * a ^ 8 + c * b ^ 8 + a * b ^ 2 * c ^ 6 + a * b ^ 3 * c ^ 5 + a * b ^ 5 * c ^ 3 - (8 * b * c * a ^ 7 + 8 * a * c * b ^ 7 + 8 * a * b * c ^ 7 + 18 * c * a ^ 4 * b ^ 4 + 18 * b * a ^ 4 * c ^ 4 + 18 * a * b ^ 4 * c ^ 4 + 24 * a ^ 5 * b ^ 2 * c ^ 2 + 24 * a ^ 2 * b ^ 5 * c ^ 2 + 24 * a ^ 2 * b ^ 2 * c ^ 5 + 27 * a ^ 3 * b ^ 3 * c ^ 3 + 3 * b ^ 6 * c ^ 3 + 3 * b ^ 3 * c ^ 6 + 3 * a ^ 6 * c ^ 3 + 3 * a ^ 6 * b ^ 3 + 3 * a ^ 3 * c ^ 6 + 3 * a ^ 3 * b ^ 6 + c ^ 9 + b ^ 9 + a ^ 9) = a * b ^ 8 + a * c ^ 8 + b * a ^ 8 + b * c ^ 8 + b * (a ^ 8 + c ^ 8) + c * a ^ 8 + c * b ^ 8 + c * (a ^ 8 + b ^ 8) + a ^ 2 * (b ^ 7 + c ^ 7) + 3 * a ^ 4 * (b ^ 5 + c ^ 5) + b ^ 6 * (a ^ 3 + 2 * c ^ 3) / 3 + a ^ 3 * (b + 2 * c) ^ 6 / 243 + b * (c + 3 * a) ^ 8 / 65536 + 3 * a ^ 2 * (3 * b + 4 * c) ^ 7 / 823543 + a * b ^ 2 * c ^ 6 + a * b ^ 3 * c ^ 5 + a * b ^ 5 * c ^ 3 + c * a ^ 6 * b ^ 2 + 3 * a ^ 2 * b ^ 4 * c ^ 3 + 3 * a ^ 3 * b ^ 4 * c ^ 2 - (a ^ 9) - (b ^ 9) - (c ^ 9) - (3 * a ^ 3 * b ^ 6) - (3 * a ^ 3 * c ^ 6) - (3 * a ^ 6 * b ^ 3) - (3 * a ^ 6 * c ^ 3) - (3 * b ^ 3 * c ^ 6) - (3 * b ^ 6 * c ^ 3) - (27 * a ^ 3 * b ^ 3 * c ^ 3) - (24 * a ^ 2 * b ^ 2 * c ^ 5) - (24 * a ^ 2 * b ^ 5 * c ^ 2) - (24 * a ^ 5 * b ^ 2 * c ^ 2) - (18 * a * b ^ 4 * c ^ 4) - (18 * b * a ^ 4 * c ^ 4) - (18 * c * a ^ 4 * b ^ 4) - (8 * a * b * c ^ 7) - (8 * a * c * b ^ 7) - (8 * b * c * a ^ 7)
  scale weighted_AM_GM_normal_left_2vars (u := b) (v := a) (i1 := 2) (i2 := 6) (k := c) (l := ((((((((((((((((((a * (b ^ 8)) + (a * (c ^ 8))) + (b * (a ^ 8))) + (b * (c ^ 8))) + (b * ((a ^ 8) + (c ^ 8)))) + (c * (a ^ 8))) + (c * (b ^ 8))) + (c * ((a ^ 8) + (b ^ 8)))) + ((a ^ 2) * ((b ^ 7) + (c ^ 7)))) + ((3 * (a ^ 4)) * ((b ^ 5) + (c ^ 5)))) + (((b ^ 6) * ((a ^ 3) + (2 * (c ^ 3)))) / 3)) + (((a ^ 3) * ((b + (2 * c)) ^ 6)) / 243)) + ((b * ((c + (3 * a)) ^ 8)) / 65536)) + (((3 * (a ^ 2)) * (((3 * b) + (4 * c)) ^ 7)) / 823543)) + ((a * (b ^ 2)) * (c ^ 6))) + ((a * (b ^ 3)) * (c ^ 5))) + ((a * (b ^ 5)) * (c ^ 3))) + ((((3 * (a ^ 2)) * (b ^ 4)) * (c ^ 3)) + (((3 * (a ^ 3)) * (b ^ 4)) * (c ^ 2))))) (right := 8 * b * c * a ^ 7 + 8 * a * c * b ^ 7 + 8 * a * b * c ^ 7 + 18 * c * a ^ 4 * b ^ 4 + 18 * b * a ^ 4 * c ^ 4 + 18 * a * b ^ 4 * c ^ 4 + 24 * a ^ 5 * b ^ 2 * c ^ 2 + 24 * a ^ 2 * b ^ 5 * c ^ 2 + 24 * a ^ 2 * b ^ 2 * c ^ 5 + 27 * a ^ 3 * b ^ 3 * c ^ 3 + 3 * b ^ 6 * c ^ 3 + 3 * b ^ 3 * c ^ 6 + 3 * a ^ 6 * c ^ 3 + 3 * a ^ 6 * b ^ 3 + 3 * a ^ 3 * c ^ 6 + 3 * a ^ 3 * b ^ 6 + c ^ 9 + b ^ 9 + a ^ 9)
  llm_simplify c * ((2 * b + 6 * a) / 8) ^ 8 + a * b ^ 8 + a * c ^ 8 + b * a ^ 8 + b * c ^ 8 + b * (a ^ 8 + c ^ 8) + c * a ^ 8 + c * b ^ 8 + c * (a ^ 8 + b ^ 8) + a ^ 2 * (b ^ 7 + c ^ 7) + 3 * a ^ 4 * (b ^ 5 + c ^ 5) + b ^ 6 * (a ^ 3 + 2 * c ^ 3) / 3 + a ^ 3 * (b + 2 * c) ^ 6 / 243 + b * (c + 3 * a) ^ 8 / 65536 + 3 * a ^ 2 * (3 * b + 4 * c) ^ 7 / 823543 + a * b ^ 2 * c ^ 6 + a * b ^ 3 * c ^ 5 + a * b ^ 5 * c ^ 3 + 3 * a ^ 2 * b ^ 4 * c ^ 3 + 3 * a ^ 3 * b ^ 4 * c ^ 2 - (8 * b * c * a ^ 7 + 8 * a * c * b ^ 7 + 8 * a * b * c ^ 7 + 18 * c * a ^ 4 * b ^ 4 + 18 * b * a ^ 4 * c ^ 4 + 18 * a * b ^ 4 * c ^ 4 + 24 * a ^ 5 * b ^ 2 * c ^ 2 + 24 * a ^ 2 * b ^ 5 * c ^ 2 + 24 * a ^ 2 * b ^ 2 * c ^ 5 + 27 * a ^ 3 * b ^ 3 * c ^ 3 + 3 * b ^ 6 * c ^ 3 + 3 * b ^ 3 * c ^ 6 + 3 * a ^ 6 * c ^ 3 + 3 * a ^ 6 * b ^ 3 + 3 * a ^ 3 * c ^ 6 + 3 * a ^ 3 * b ^ 6 + c ^ 9 + b ^ 9 + a ^ 9) = a * b ^ 8 + a * c ^ 8 + a ^ 2 * b ^ 7 + a ^ 2 * c ^ 7 + 2 * b * a ^ 8 + 2 * b * c ^ 8 + 2 * c * a ^ 8 + 2 * c * b ^ 8 + 3 * a ^ 4 * b ^ 5 + 3 * a ^ 4 * c ^ 5 + a ^ 3 * (b + 2 * c) ^ 6 / 243 + b * (c + 3 * a) ^ 8 / 65536 + c * (b + 3 * a) ^ 8 / 65536 + 3 * a ^ 2 * (3 * b + 4 * c) ^ 7 / 823543 + a * b ^ 2 * c ^ 6 + a * b ^ 3 * c ^ 5 + a * b ^ 5 * c ^ 3 + 3 * a ^ 2 * b ^ 4 * c ^ 3 + 3 * a ^ 3 * b ^ 4 * c ^ 2 - (a ^ 9) - (b ^ 9) - (c ^ 9) - (3 * a ^ 3 * c ^ 6) - (3 * a ^ 6 * b ^ 3) - (3 * a ^ 6 * c ^ 3) - (3 * b ^ 3 * c ^ 6) - (8 * a ^ 3 * b ^ 6 / 3) - (7 * b ^ 6 * c ^ 3 / 3) - (27 * a ^ 3 * b ^ 3 * c ^ 3) - (24 * a ^ 2 * b ^ 2 * c ^ 5) - (24 * a ^ 2 * b ^ 5 * c ^ 2) - (24 * a ^ 5 * b ^ 2 * c ^ 2) - (18 * a * b ^ 4 * c ^ 4) - (18 * b * a ^ 4 * c ^ 4) - (18 * c * a ^ 4 * b ^ 4) - (8 * a * b * c ^ 7) - (8 * a * c * b ^ 7) - (8 * b * c * a ^ 7)
  scale weighted_AM_GM_normal_left_2vars (u := b) (v := c) (i1 := 5) (i2 := 3) (k := a) (l := (((((((((((((((((a * (b ^ 8)) + (a * (c ^ 8))) + ((a ^ 2) * (b ^ 7))) + ((a ^ 2) * (c ^ 7))) + ((2 * b) * (a ^ 8))) + ((2 * b) * (c ^ 8))) + ((2 * c) * (a ^ 8))) + ((2 * c) * (b ^ 8))) + ((3 * (a ^ 4)) * (b ^ 5))) + ((3 * (a ^ 4)) * (c ^ 5))) + (((a ^ 3) * ((b + (2 * c)) ^ 6)) / 243)) + ((b * ((c + (3 * a)) ^ 8)) / 65536)) + ((c * ((b + (3 * a)) ^ 8)) / 65536)) + (((3 * (a ^ 2)) * (((3 * b) + (4 * c)) ^ 7)) / 823543)) + ((a * (b ^ 2)) * (c ^ 6))) + ((a * (b ^ 3)) * (c ^ 5))) + ((((3 * (a ^ 2)) * (b ^ 4)) * (c ^ 3)) + (((3 * (a ^ 3)) * (b ^ 4)) * (c ^ 2))))) (right := 8 * b * c * a ^ 7 + 8 * a * c * b ^ 7 + 8 * a * b * c ^ 7 + 18 * c * a ^ 4 * b ^ 4 + 18 * b * a ^ 4 * c ^ 4 + 18 * a * b ^ 4 * c ^ 4 + 24 * a ^ 5 * b ^ 2 * c ^ 2 + 24 * a ^ 2 * b ^ 5 * c ^ 2 + 24 * a ^ 2 * b ^ 2 * c ^ 5 + 27 * a ^ 3 * b ^ 3 * c ^ 3 + 7 * b ^ 6 * c ^ 3 / 3 + 8 * a ^ 3 * b ^ 6 / 3 + 3 * b ^ 3 * c ^ 6 + 3 * a ^ 6 * c ^ 3 + 3 * a ^ 6 * b ^ 3 + 3 * a ^ 3 * c ^ 6 + c ^ 9 + b ^ 9 + a ^ 9)
  scale weighted_AM_GM_normal_left_2vars (u := a) (v := b) (i1 := 2) (i2 := 4) (k := ((c ^ 3) * 3)) (l := ((((((((((((((((((a * ((((5 * b) + (3 * c)) / 8) ^ 8)) + (a * (b ^ 8))) + (a * (c ^ 8))) + ((a ^ 2) * (b ^ 7))) + ((a ^ 2) * (c ^ 7))) + ((2 * b) * (a ^ 8))) + ((2 * b) * (c ^ 8))) + ((2 * c) * (a ^ 8))) + ((2 * c) * (b ^ 8))) + ((3 * (a ^ 4)) * (b ^ 5))) + ((3 * (a ^ 4)) * (c ^ 5))) + (((a ^ 3) * ((b + (2 * c)) ^ 6)) / 243)) + ((b * ((c + (3 * a)) ^ 8)) / 65536)) + ((c * ((b + (3 * a)) ^ 8)) / 65536)) + (((3 * (a ^ 2)) * (((3 * b) + (4 * c)) ^ 7)) / 823543)) + ((a * (b ^ 2)) * (c ^ 6))) + ((a * (b ^ 3)) * (c ^ 5))) + (((3 * (a ^ 3)) * (b ^ 4)) * (c ^ 2)))) (right := 8 * b * c * a ^ 7 + 8 * a * c * b ^ 7 + 8 * a * b * c ^ 7 + 18 * c * a ^ 4 * b ^ 4 + 18 * b * a ^ 4 * c ^ 4 + 18 * a * b ^ 4 * c ^ 4 + 24 * a ^ 5 * b ^ 2 * c ^ 2 + 24 * a ^ 2 * b ^ 5 * c ^ 2 + 24 * a ^ 2 * b ^ 2 * c ^ 5 + 27 * a ^ 3 * b ^ 3 * c ^ 3 + 7 * b ^ 6 * c ^ 3 / 3 + 8 * a ^ 3 * b ^ 6 / 3 + 3 * b ^ 3 * c ^ 6 + 3 * a ^ 6 * c ^ 3 + 3 * a ^ 6 * b ^ 3 + 3 * a ^ 3 * c ^ 6 + c ^ 9 + b ^ 9 + a ^ 9)
  llm_frac_apart c ^ 3 * 3 * ((2 * a + 4 * b) / 6) ^ 6 + a * ((5 * b + 3 * c) / 8) ^ 8 + a * b ^ 8 + a * c ^ 8 + a ^ 2 * b ^ 7 + a ^ 2 * c ^ 7 + 2 * b * a ^ 8 + 2 * b * c ^ 8 + 2 * c * a ^ 8 + 2 * c * b ^ 8 + 3 * a ^ 4 * b ^ 5 + 3 * a ^ 4 * c ^ 5 + a ^ 3 * (b + 2 * c) ^ 6 / 243 + b * (c + 3 * a) ^ 8 / 65536 + c * (b + 3 * a) ^ 8 / 65536 + 3 * a ^ 2 * (3 * b + 4 * c) ^ 7 / 823543 + a * b ^ 2 * c ^ 6 + a * b ^ 3 * c ^ 5 + 3 * a ^ 3 * b ^ 4 * c ^ 2 - (8 * b * c * a ^ 7 + 8 * a * c * b ^ 7 + 8 * a * b * c ^ 7 + 18 * c * a ^ 4 * b ^ 4 + 18 * b * a ^ 4 * c ^ 4 + 18 * a * b ^ 4 * c ^ 4 + 24 * a ^ 5 * b ^ 2 * c ^ 2 + 24 * a ^ 2 * b ^ 5 * c ^ 2 + 24 * a ^ 2 * b ^ 2 * c ^ 5 + 27 * a ^ 3 * b ^ 3 * c ^ 3 + 7 * b ^ 6 * c ^ 3 / 3 + 8 * a ^ 3 * b ^ 6 / 3 + 3 * b ^ 3 * c ^ 6 + 3 * a ^ 6 * c ^ 3 + 3 * a ^ 6 * b ^ 3 + 3 * a ^ 3 * c ^ 6 + c ^ 9 + b ^ 9 + a ^ 9) = a * b ^ 8 + a * c ^ 8 + a ^ 2 * b ^ 7 + a ^ 2 * c ^ 7 + 2 * b * a ^ 8 + 2 * b * c ^ 8 + 2 * c * a ^ 8 + 2 * c * b ^ 8 + 3 * a ^ 4 * b ^ 5 + 3 * a ^ 4 * c ^ 5 + a ^ 3 * (b + 2 * c) ^ 6 / 243 + c ^ 3 * (a + 2 * b) ^ 6 / 243 + b * (c + 3 * a) ^ 8 / 65536 + c * (b + 3 * a) ^ 8 / 65536 + a * (3 * c + 5 * b) ^ 8 / 16777216 + 3 * a ^ 2 * (3 * b + 4 * c) ^ 7 / 823543 + a * b ^ 2 * c ^ 6 + a * b ^ 3 * c ^ 5 + 3 * a ^ 3 * b ^ 4 * c ^ 2 - (a ^ 9) - (b ^ 9) - (c ^ 9) - (3 * a ^ 3 * c ^ 6) - (3 * a ^ 6 * b ^ 3) - (3 * a ^ 6 * c ^ 3) - (3 * b ^ 3 * c ^ 6) - (8 * a ^ 3 * b ^ 6 / 3) - (7 * b ^ 6 * c ^ 3 / 3) - (27 * a ^ 3 * b ^ 3 * c ^ 3) - (24 * a ^ 2 * b ^ 2 * c ^ 5) - (24 * a ^ 2 * b ^ 5 * c ^ 2) - (24 * a ^ 5 * b ^ 2 * c ^ 2) - (18 * a * b ^ 4 * c ^ 4) - (18 * b * a ^ 4 * c ^ 4) - (18 * c * a ^ 4 * b ^ 4) - (8 * a * b * c ^ 7) - (8 * a * c * b ^ 7) - (8 * b * c * a ^ 7)
  closed_by_sos

theorem P10 {a b c : ℝ} (ha : a ≥ 0) (hb : b ≥ 0) (hc : c ≥ 0) (h : a + b + c = sqrt 5) :
  (a ^ 2 - b ^ 2) * (b ^ 2 - c ^ 2) * (c ^ 2 - a ^ 2) ≤ sqrt 5 := by
  make_homogeneous (a ^ 2 - (b ^ 2)) * (b ^ 2 - (c ^ 2)) * (c ^ 2 - (a ^ 2)) - (sqrt (5) * (a + b + c) ^ 6 / 125) ≤ 0
  llm_simplify (a ^ 2 - b ^ 2) * (b ^ 2 - c ^ 2) * (c ^ 2 - a ^ 2) - (sqrt 5 * (a + b + c) ^ 6 / 125) = (a - (b)) * (b - (c)) * (c - (a)) * (a + b) * (b + c) * (c + a) - (sqrt (5))
  llm_factor (a - b) * (b - c) * (c - a) * (a + b) * (b + c) * (c + a) - (sqrt 5) = -(sqrt (5)) - ((a + b) * (a + c) * (a - (b)) * (a - (c)) * (b + c) * (b - (c)))
  try cycle_close a - b ≥ 0 ∧ b - c ≥ 0 ∧ a - c ≥ 0

theorem P11 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) (h : a + b + c = 3) :
  1 / (3 + a ^ 2 + b ^ 2) + 1 / (3 + b ^ 2 + c ^ 2) + 1 / (3 + c ^ 2 + a ^ 2) ≤ 3 / 5 := by
  make_homogeneous (a / 3 + b / 3 + c / 3) ^ 2 / (a ^ 2 + b ^ 2 + 3 * (a / 3 + b / 3 + c / 3) ^ 2) + (a / 3 + b / 3 + c / 3) ^ 2 / (a ^ 2 + c ^ 2 + 3 * (a / 3 + b / 3 + c / 3) ^ 2) + (a / 3 + b / 3 + c / 3) ^ 2 / (b ^ 2 + c ^ 2 + 3 * (a / 3 + b / 3 + c / 3) ^ 2) - (3 / 5) ≤ 0
  llm_frac_apart (a / 3 + b / 3 + c / 3) ^ 2 / (a ^ 2 + b ^ 2 + 3 * (a / 3 + b / 3 + c / 3) ^ 2) + (a / 3 + b / 3 + c / 3) ^ 2 / (a ^ 2 + c ^ 2 + 3 * (a / 3 + b / 3 + c / 3) ^ 2) + (a / 3 + b / 3 + c / 3) ^ 2 / (b ^ 2 + c ^ 2 + 3 * (a / 3 + b / 3 + c / 3) ^ 2) - (3 / 5) = 9 * (a + b + c) ^ 2 / (81 * a ^ 2 + 81 * b ^ 2 + 27 * (a + b + c) ^ 2) + 9 * (a + b + c) ^ 2 / (81 * a ^ 2 + 81 * c ^ 2 + 27 * (a + b + c) ^ 2) + 9 * (a + b + c) ^ 2 / (81 * b ^ 2 + 81 * c ^ 2 + 27 * (a + b + c) ^ 2) - (3 / 5)
  llm_cancel_numer (9 * (a + b + c) ^ 2 / (81 * a ^ 2 + 81 * b ^ 2 + 27 * (a + b + c) ^ 2) + 9 * (a + b + c) ^ 2 / (81 * a ^ 2 + 81 * c ^ 2 + 27 * (a + b + c) ^ 2) + 9 * (a + b + c) ^ 2 / (81 * b ^ 2 + 81 * c ^ 2 + 27 * (a + b + c) ^ 2)) - (3 / 5) = 0.4 - ((81 * a ^ 2 + 81 * b ^ 2) / (243 * a ^ 2 + 243 * b ^ 2 + 81 * (a + b + c) ^ 2)) - ((81 * a ^ 2 + 81 * c ^ 2) / (243 * a ^ 2 + 243 * c ^ 2 + 81 * (a + b + c) ^ 2)) - ((81 * b ^ 2 + 81 * c ^ 2) / (243 * b ^ 2 + 243 * c ^ 2 + 81 * (a + b + c) ^ 2))
  scale Titu_variant1_right_3vars (u1 := ((81 * (b ^ 2)) + (81 * (c ^ 2)))) (u2 := ((81 * (a ^ 2)) + (81 * (c ^ 2)))) (u3 := ((81 * (a ^ 2)) + (81 * (b ^ 2)))) (v1 := (((243 * (b ^ 2)) + (243 * (c ^ 2))) + (81 * (((a + b) + c) ^ 2)))) (v2 := (((243 * (a ^ 2)) + (243 * (c ^ 2))) + (81 * (((a + b) + c) ^ 2)))) (v3 := (((243 * (a ^ 2)) + (243 * (b ^ 2))) + (81 * (((a + b) + c) ^ 2)))) (k := 1) (l := 0) (left := 2 / 5)
  llm_cancel_factor 2 / 5 - ((81 * b ^ 2 + 81 * c ^ 2 + 81 * a ^ 2 + 81 * c ^ 2 + 81 * a ^ 2 + 81 * b ^ 2) ^ 2 / ((81 * b ^ 2 + 81 * c ^ 2) * (243 * b ^ 2 + 243 * c ^ 2 + 81 * (a + b + c) ^ 2) + (81 * a ^ 2 + 81 * c ^ 2) * (243 * a ^ 2 + 243 * c ^ 2 + 81 * (a + b + c) ^ 2) + (81 * a ^ 2 + 81 * b ^ 2) * (243 * a ^ 2 + 243 * b ^ 2 + 81 * (a + b + c) ^ 2))) = 2 / (5) - (324 * (a ^ 2 + b ^ 2 + c ^ 2) ^ 2 / (81 * (a + b + c) ^ 2 * (a ^ 2 + a ^ 2 + b ^ 2 + b ^ 2 + c ^ 2 + c ^ 2) + 243 * ((a ^ 2 + b ^ 2) ^ 2 + (a ^ 2 + c ^ 2) ^ 2 + (b ^ 2 + c ^ 2) ^ 2)))
  llm_cancel_denom 2 / 5 - (324 * (a ^ 2 + b ^ 2 + c ^ 2) ^ 2 / (81 * (a + b + c) ^ 2 * (a ^ 2 + a ^ 2 + b ^ 2 + b ^ 2 + c ^ 2 + c ^ 2) + 243 * ((a ^ 2 + b ^ 2) ^ 2 + (a ^ 2 + c ^ 2) ^ 2 + (b ^ 2 + c ^ 2) ^ 2))) = (324 * (a + b + c) ^ 2 * (a ^ 2 + b ^ 2 + c ^ 2) + 486 * ((a ^ 2 + b ^ 2) ^ 2 + (a ^ 2 + c ^ 2) ^ 2 + (b ^ 2 + c ^ 2) ^ 2) - (5 * 324 * (a ^ 2 + b ^ 2 + c ^ 2) ^ 2)) / (5 * (81 * (a + b + c) ^ 2 * 2 * (a ^ 2 + b ^ 2 + c ^ 2) + 243 * ((a ^ 2 + b ^ 2) ^ 2 + (a ^ 2 + c ^ 2) ^ 2 + (b ^ 2 + c ^ 2) ^ 2)))
  llm_cancel_factor (324 * (a + b + c) ^ 2 * (a ^ 2 + b ^ 2 + c ^ 2) + 486 * ((a ^ 2 + b ^ 2) ^ 2 + (a ^ 2 + c ^ 2) ^ 2 + (b ^ 2 + c ^ 2) ^ 2)) - (1620 * (a ^ 2 + b ^ 2 + c ^ 2) ^ 2) = (324) * (2 * a * b ^ 3 + 2 * a * c ^ 3 + 2 * b * a ^ 3 + 2 * b * c ^ 3 + 2 * c * a ^ 3 + 2 * c * b ^ 3 + 2 * a * b * c ^ 2 + 2 * a * c * b ^ 2 + 2 * b * c * a ^ 2 - (a ^ 4) - (b ^ 4) - (c ^ 4) - (5 * a ^ 2 * b ^ 2) - (5 * a ^ 2 * c ^ 2) - (5 * b ^ 2 * c ^ 2))
  scale Muirhead_Req0_onestep_right_3vars (u := a) (v := c) (w := b) (p := 2) (q := 2) (k := 5) (l := ((c ^ 4) + ((b ^ 4) + (a ^ 4)))) (left := 2 * a * b ^ 3 + 2 * a * c ^ 3 + 2 * b * a ^ 3 + 2 * b * c ^ 3 + 2 * c * a ^ 3 + 2 * c * b ^ 3 + 2 * a * b * c ^ 2 + 2 * a * c * b ^ 2 + 2 * b * c * a ^ 2)
  llm_mul_expand 2 * a * b ^ 3 + 2 * a * c ^ 3 + 2 * b * a ^ 3 + 2 * b * c ^ 3 + 2 * c * a ^ 3 + 2 * c * b ^ 3 + 2 * a * b * c ^ 2 + 2 * a * c * b ^ 2 + 2 * b * c * a ^ 2 - (5 * (a * c ^ 3 + c * b ^ 3 + b * a ^ 3) + c ^ 4 + b ^ 4 + a ^ 4) = 2 * a * b ^ 3 + 2 * b * c ^ 3 + 2 * c * a ^ 3 + 2 * a * b * c ^ 2 + 2 * a * c * b ^ 2 + 2 * b * c * a ^ 2 - (3 * a * c ^ 3) - (3 * b * a ^ 3) - (3 * c * b ^ 3) - (c ^ 4) - (b ^ 4) - (a ^ 4)
  llm_mul_expand 2 * a * b ^ 3 + 2 * b * c ^ 3 + 2 * c * a ^ 3 + 2 * a * b * c ^ 2 + 2 * a * c * b ^ 2 + 2 * b * c * a ^ 2 - (a ^ 4 + b ^ 4 + c ^ 4 + 3 * c * b ^ 3 + 3 * b * a ^ 3 + 3 * a * c ^ 3) = 2 * a * b * c ^ 2 + 2 * a * c * b ^ 2 + 2 * b * c * a ^ 2 - (a ^ 4) - (b ^ 4) - (c ^ 4) - (a ^ 3 * (3 * b - (2 * c))) - (b ^ 3 * (3 * c - (2 * a))) - (c ^ 3 * (3 * a - (2 * b)))
  llm_factor 2 * a * b * c ^ 2 + 2 * a * c * b ^ 2 + 2 * b * c * a ^ 2 - (c ^ 3 * (3 * a - 2 * b) + b ^ 3 * (3 * c - 2 * a) + a ^ 3 * (3 * b - 2 * c) + c ^ 4 + b ^ 4 + a ^ 4) = b ^ 3 * (2 * a - (3 * c)) + 2 * a * b * c ^ 2 + 2 * a * c * b ^ 2 + 2 * b * c * a ^ 2 - (a ^ 4) - (b ^ 4) - (c ^ 4) - (a ^ 3 * (3 * b - (2 * c))) - (c ^ 3 * (3 * a - (2 * b)))
  scale Muirhead_QReq1_left_3vars (u := a) (v := b) (w := c) (p := 2) (k := 2) (l := ((b ^ 3) * ((2 * a) - (3 * c)))) (right := c ^ 3 * (3 * a - 2 * b) + a ^ 3 * (3 * b - 2 * c) + c ^ 4 + b ^ 4 + a ^ 4)
  llm_simplify 2 * (a ^ 3 * b + b ^ 3 * c + c ^ 3 * a) + b ^ 3 * (2 * a - 3 * c) - (c ^ 3 * (3 * a - 2 * b) + a ^ 3 * (3 * b - 2 * c) + c ^ 4 + b ^ 4 + a ^ 4) = 2 * a * b ^ 3 + 2 * b * c ^ 3 + 2 * c * a ^ 3 - (a ^ 4) - (b ^ 4) - (c ^ 4) - (a * c ^ 3) - (b * a ^ 3) - (c * b ^ 3)
  scale Vasc_left_3vars (u := c) (v := b) (w := a) (k := 2) (l := 0) (right := c * b ^ 3 + b * a ^ 3 + a * c ^ 3 + c ^ 4 + b ^ 4 + a ^ 4)
  llm_simplify 2 * (c ^ 2 + b ^ 2 + a ^ 2) ^ 2 / 3 - (c * b ^ 3 + b * a ^ 3 + a * c ^ 3 + c ^ 4 + b ^ 4 + a ^ 4) = 4 * a ^ 2 * b ^ 2 / (3) + 4 * a ^ 2 * c ^ 2 / (3) + 4 * b ^ 2 * c ^ 2 / (3) - (c ^ 4 / 3) - (a * c ^ 3) - (b * a ^ 3) - (c * b ^ 3) - (a ^ 4 / (3)) - (b ^ 4 / (3))
  llm_cancel_factor (4 * a ^ 2 * b ^ 2 / 3 + 4 * a ^ 2 * c ^ 2 / 3 + 4 * b ^ 2 * c ^ 2 / 3) - (b ^ 4 / 3 + a ^ 4 / 3 + c * b ^ 3 + b * a ^ 3 + a * c ^ 3 + c ^ 4 / 3) = (1 / 3) * (4 * a ^ 2 * b ^ 2 + 4 * a ^ 2 * c ^ 2 + 4 * b ^ 2 * c ^ 2 - (a ^ 4) - (b ^ 4) - (c ^ 4) - (3 * a * c ^ 3) - (3 * b * a ^ 3) - (3 * c * b ^ 3))
  scale Muirhead_Req0_onestep_left_3vars (u := c) (v := a) (w := b) (p := 2) (q := 2) (k := 4) (l := 0) (right := 3 * c * b ^ 3 + 3 * b * a ^ 3 + 3 * a * c ^ 3 + c ^ 4 + b ^ 4 + a ^ 4)
  llm_exp_expand 4 * (c ^ 3 * a + a ^ 3 * b + b ^ 3 * c) - (3 * c * b ^ 3 + 3 * b * a ^ 3 + 3 * a * c ^ 3 + c ^ 4 + b ^ 4 + a ^ 4) = c ^ 3 * a + a ^ 3 * b + b ^ 3 * c - (c ^ 4) - (b ^ 4) - (a ^ 4)
  scale Muirhead_Qeq1Req0_left_3vars (u := c) (v := a) (w := b) (p := 3) (k := 1) (l := 0) (right := a ^ 4 + b ^ 4 + c ^ 4)
  try close

theorem P12 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) (h : a * b + b * c + c * a = 1) :
  1 ≤ 1 / (4 * a ^ 2 - b * c + 1) + 1 / (4 * b ^ 2 - c * a + 1) + 1 / (4 * c ^ 2 - a * b + 1) := by
  make_homogeneous 1 - ((a * b + b * c + c * a) / (4 * a ^ 2 + a * b + a * c)) - ((a * b + b * c + c * a) / (a * b + a * c + 4 * b ^ 2 + b * c - (a * c))) - ((a * b + b * c + c * a) / (a * c + b * c + 4 * c ^ 2)) ≤ 0
  llm_cancel_factor (1) - ((a * b + b * c + c * a) / (a * c + b * c + 4 * c ^ 2) + (a * b + b * c + c * a) / (a * b + a * c + 4 * b ^ 2 + b * c - a * c) + (a * b + b * c + c * a) / (4 * a ^ 2 + a * b + a * c)) = (1 / (a)) * (1 / (b)) * (1 / (c)) * (1 / (a + b + 4 * c)) * (1 / (a + 4 * b + c)) * (1 / (4 * a + b + c)) * (45 * a ^ 2 * b ^ 2 * c ^ 2 - (17 * a ^ 3 * b ^ 3) - (17 * a ^ 3 * c ^ 3) - (17 * b ^ 3 * c ^ 3) - (4 * a ^ 2 * b ^ 4) - (4 * a ^ 2 * c ^ 4) - (4 * a ^ 4 * b ^ 2) - (4 * a ^ 4 * c ^ 2) - (4 * b ^ 2 * c ^ 4) - (4 * b ^ 4 * c ^ 2) - (11 * a * b ^ 2 * c ^ 3) - (11 * a * b ^ 3 * c ^ 2) - (11 * b * a ^ 2 * c ^ 3) - (11 * b * a ^ 3 * c ^ 2) - (11 * c * a ^ 2 * b ^ 3) - (11 * c * a ^ 3 * b ^ 2) - (4 * a * b * c ^ 4) - (4 * a * c * b ^ 4) - (4 * b * c * a ^ 4))
  scale weighted_AM_GM_normal_left_2vars (u := b) (v := c) (i1 := 2) (i2 := 2) (k := (45 * (a ^ 2))) (l := 0) (right := 4 * b * c * a ^ 4 + 4 * a * c * b ^ 4 + 4 * a * b * c ^ 4 + 11 * c * a ^ 3 * b ^ 2 + 11 * c * a ^ 2 * b ^ 3 + 11 * b * a ^ 3 * c ^ 2 + 11 * b * a ^ 2 * c ^ 3 + 11 * a * b ^ 3 * c ^ 2 + 11 * a * b ^ 2 * c ^ 3 + 4 * b ^ 4 * c ^ 2 + 4 * b ^ 2 * c ^ 4 + 4 * a ^ 4 * c ^ 2 + 4 * a ^ 4 * b ^ 2 + 4 * a ^ 2 * c ^ 4 + 4 * a ^ 2 * b ^ 4 + 17 * b ^ 3 * c ^ 3 + 17 * a ^ 3 * c ^ 3 + 17 * a ^ 3 * b ^ 3)
  llm_cancel_factor (45 * a ^ 2 * ((2 * b + 2 * c) / 4) ^ 4) - (4 * b * c * a ^ 4 + 4 * a * c * b ^ 4 + 4 * a * b * c ^ 4 + 11 * c * a ^ 3 * b ^ 2 + 11 * c * a ^ 2 * b ^ 3 + 11 * b * a ^ 3 * c ^ 2 + 11 * b * a ^ 2 * c ^ 3 + 11 * a * b ^ 3 * c ^ 2 + 11 * a * b ^ 2 * c ^ 3 + 4 * b ^ 4 * c ^ 2 + 4 * b ^ 2 * c ^ 4 + 4 * a ^ 4 * c ^ 2 + 4 * a ^ 4 * b ^ 2 + 4 * a ^ 2 * c ^ 4 + 4 * a ^ 2 * b ^ 4 + 17 * b ^ 3 * c ^ 3 + 17 * a ^ 3 * c ^ 3 + 17 * a ^ 3 * b ^ 3) = (1 / 16) * (4 * b * a ^ 2 * c ^ 3 + 4 * c * a ^ 2 * b ^ 3 + 270 * a ^ 2 * b ^ 2 * c ^ 2 - (272 * a ^ 3 * b ^ 3) - (272 * a ^ 3 * c ^ 3) - (272 * b ^ 3 * c ^ 3) - (64 * a ^ 4 * b ^ 2) - (64 * a ^ 4 * c ^ 2) - (64 * b ^ 2 * c ^ 4) - (64 * b ^ 4 * c ^ 2) - (19 * a ^ 2 * b ^ 4) - (19 * a ^ 2 * c ^ 4) - (176 * a * b ^ 2 * c ^ 3) - (176 * a * b ^ 3 * c ^ 2) - (176 * b * a ^ 3 * c ^ 2) - (176 * c * a ^ 3 * b ^ 2) - (64 * a * b * c ^ 4) - (64 * a * c * b ^ 4) - (64 * b * c * a ^ 4))
  scale weighted_AM_GM_normal_left_2vars (u := a) (v := c) (i1 := 2) (i2 := 2) (k := (270 * (b ^ 2))) (l := ((((4 * b) * (a ^ 2)) * (c ^ 3)) + (((4 * c) * (a ^ 2)) * (b ^ 3)))) (right := 64 * b * c * a ^ 4 + 64 * a * c * b ^ 4 + 64 * a * b * c ^ 4 + 176 * c * a ^ 3 * b ^ 2 + 176 * b * a ^ 3 * c ^ 2 + 176 * a * b ^ 3 * c ^ 2 + 176 * a * b ^ 2 * c ^ 3 + 19 * a ^ 2 * c ^ 4 + 19 * a ^ 2 * b ^ 4 + 64 * b ^ 4 * c ^ 2 + 64 * b ^ 2 * c ^ 4 + 64 * a ^ 4 * c ^ 2 + 64 * a ^ 4 * b ^ 2 + 272 * b ^ 3 * c ^ 3 + 272 * a ^ 3 * c ^ 3 + 272 * a ^ 3 * b ^ 3)
  llm_cancel_factor (270 * b ^ 2 * ((2 * a + 2 * c) / 4) ^ 4 + 4 * b * a ^ 2 * c ^ 3 + 4 * c * a ^ 2 * b ^ 3) - (64 * b * c * a ^ 4 + 64 * a * c * b ^ 4 + 64 * a * b * c ^ 4 + 176 * c * a ^ 3 * b ^ 2 + 176 * b * a ^ 3 * c ^ 2 + 176 * a * b ^ 3 * c ^ 2 + 176 * a * b ^ 2 * c ^ 3 + 19 * a ^ 2 * c ^ 4 + 19 * a ^ 2 * b ^ 4 + 64 * b ^ 4 * c ^ 2 + 64 * b ^ 2 * c ^ 4 + 64 * a ^ 4 * c ^ 2 + 64 * a ^ 4 * b ^ 2 + 272 * b ^ 3 * c ^ 3 + 272 * a ^ 3 * c ^ 3 + 272 * a ^ 3 * b ^ 3) = (1 / 8) * (32 * b * a ^ 2 * c ^ 3 + 32 * c * a ^ 2 * b ^ 3 + 810 * a ^ 2 * b ^ 2 * c ^ 2 - (2176 * a ^ 3 * b ^ 3) - (2176 * a ^ 3 * c ^ 3) - (2176 * b ^ 3 * c ^ 3) - (512 * a ^ 4 * c ^ 2) - (512 * b ^ 4 * c ^ 2) - (377 * a ^ 4 * b ^ 2) - (377 * b ^ 2 * c ^ 4) - (152 * a ^ 2 * b ^ 4) - (152 * a ^ 2 * c ^ 4) - (1408 * a * b ^ 3 * c ^ 2) - (1408 * b * a ^ 3 * c ^ 2) - (868 * a * b ^ 2 * c ^ 3) - (868 * c * a ^ 3 * b ^ 2) - (512 * a * b * c ^ 4) - (512 * a * c * b ^ 4) - (512 * b * c * a ^ 4))
  scale weighted_Power_Mean_Rgt1_right_2vars (u := b) (v := a) (i1 := 1) (i2 := 1) (r := 3) (k := ((c ^ 3) * 2176)) (l := (((2176 * (a ^ 3)) * (b ^ 3)) + (((((((((((((((512 * b) * c) * (a ^ 4)) + (((512 * a) * c) * (b ^ 4))) + (((512 * a) * b) * (c ^ 4))) + (((868 * c) * (a ^ 3)) * (b ^ 2))) + (((868 * a) * (b ^ 2)) * (c ^ 3))) + (((1408 * b) * (a ^ 3)) * (c ^ 2))) + (((1408 * a) * (b ^ 3)) * (c ^ 2))) + ((152 * (a ^ 2)) * (c ^ 4))) + ((152 * (a ^ 2)) * (b ^ 4))) + ((377 * (b ^ 2)) * (c ^ 4))) + ((377 * (a ^ 4)) * (b ^ 2))) + ((512 * (b ^ 4)) * (c ^ 2))) + ((512 * (a ^ 4)) * (c ^ 2))))) (left := 32 * b * a ^ 2 * c ^ 3 + 32 * c * a ^ 2 * b ^ 3 + 810 * a ^ 2 * b ^ 2 * c ^ 2)
  scale AM_GM_square_right_2vars (u := (b ^ 2)) (v := (a ^ 2)) (k := (512 * (c ^ 2))) (l := (((((((((((((((c ^ 3) * 2176) * (((b + a) ^ 3) / 4)) + ((2176 * (a ^ 3)) * (b ^ 3))) + (((512 * b) * c) * (a ^ 4))) + (((512 * a) * c) * (b ^ 4))) + (((512 * a) * b) * (c ^ 4))) + (((868 * c) * (a ^ 3)) * (b ^ 2))) + (((868 * a) * (b ^ 2)) * (c ^ 3))) + (((1408 * b) * (a ^ 3)) * (c ^ 2))) + (((1408 * a) * (b ^ 3)) * (c ^ 2))) + ((152 * (a ^ 2)) * (c ^ 4))) + ((152 * (a ^ 2)) * (b ^ 4))) + ((377 * (b ^ 2)) * (c ^ 4))) + ((377 * (a ^ 4)) * (b ^ 2)))) (left := 32 * b * a ^ 2 * c ^ 3 + 32 * c * a ^ 2 * b ^ 3 + 810 * a ^ 2 * b ^ 2 * c ^ 2)
  scale weighted_Power_Mean_Rgt1_right_2vars (u := c) (v := a) (i1 := 1) (i2 := 1) (r := 4) (k := (377 * (b ^ 2))) (l := ((((((((((((((1024 * (c ^ 2)) * (b ^ 2)) * (a ^ 2)) + (((c ^ 3) * 2176) * (((b + a) ^ 3) / 4))) + ((2176 * (a ^ 3)) * (b ^ 3))) + (((512 * b) * c) * (a ^ 4))) + (((512 * a) * c) * (b ^ 4))) + (((512 * a) * b) * (c ^ 4))) + (((868 * c) * (a ^ 3)) * (b ^ 2))) + (((868 * a) * (b ^ 2)) * (c ^ 3))) + (((1408 * b) * (a ^ 3)) * (c ^ 2))) + (((1408 * a) * (b ^ 3)) * (c ^ 2))) + ((152 * (a ^ 2)) * (c ^ 4))) + ((152 * (a ^ 2)) * (b ^ 4)))) (left := 32 * b * a ^ 2 * c ^ 3 + 32 * c * a ^ 2 * b ^ 3 + 810 * a ^ 2 * b ^ 2 * c ^ 2)
  llm_simplify 32 * b * a ^ 2 * c ^ 3 + 32 * c * a ^ 2 * b ^ 3 + 810 * a ^ 2 * b ^ 2 * c ^ 2 - (377 * b ^ 2 * ((c + a) ^ 4 / 8) + 1024 * c ^ 2 * b ^ 2 * a ^ 2 + c ^ 3 * 2176 * ((b + a) ^ 3 / 4) + 2176 * a ^ 3 * b ^ 3 + 512 * b * c * a ^ 4 + 512 * a * c * b ^ 4 + 512 * a * b * c ^ 4 + 868 * c * a ^ 3 * b ^ 2 + 868 * a * b ^ 2 * c ^ 3 + 1408 * b * a ^ 3 * c ^ 2 + 1408 * a * b ^ 3 * c ^ 2 + 152 * a ^ 2 * c ^ 4 + 152 * a ^ 2 * b ^ 4) = 32 * b * a ^ 2 * c ^ 3 + 32 * c * a ^ 2 * b ^ 3 - (2176 * a ^ 3 * b ^ 3) - (544 * c ^ 3 * (a + b) ^ 3) - (152 * a ^ 2 * b ^ 4) - (152 * a ^ 2 * c ^ 4) - (377 * b ^ 2 * (a + c) ^ 4 / 8) - (1408 * a * b ^ 3 * c ^ 2) - (1408 * b * a ^ 3 * c ^ 2) - (868 * a * b ^ 2 * c ^ 3) - (868 * c * a ^ 3 * b ^ 2) - (512 * a * b * c ^ 4) - (512 * a * c * b ^ 4) - (512 * b * c * a ^ 4) - (214 * a ^ 2 * b ^ 2 * c ^ 2)
  scale Muirhead_normal_Qeq1_left_2vars (u := c) (v := b) (p := 3) (k := (32 * (a ^ 2))) (l := 0) (right := 214 * a ^ 2 * b ^ 2 * c ^ 2 + 512 * b * c * a ^ 4 + 512 * a * c * b ^ 4 + 512 * a * b * c ^ 4 + 868 * c * a ^ 3 * b ^ 2 + 868 * a * b ^ 2 * c ^ 3 + 1408 * b * a ^ 3 * c ^ 2 + 1408 * a * b ^ 3 * c ^ 2 + 377 * b ^ 2 * (a + c) ^ 4 / 8 + 152 * a ^ 2 * c ^ 4 + 152 * a ^ 2 * b ^ 4 + 544 * c ^ 3 * (a + b) ^ 3 + 2176 * a ^ 3 * b ^ 3)
  llm_mul_expand 32 * a ^ 2 * (c ^ 4 + b ^ 4) - (214 * a ^ 2 * b ^ 2 * c ^ 2 + 512 * b * c * a ^ 4 + 512 * a * c * b ^ 4 + 512 * a * b * c ^ 4 + 868 * c * a ^ 3 * b ^ 2 + 868 * a * b ^ 2 * c ^ 3 + 1408 * b * a ^ 3 * c ^ 2 + 1408 * a * b ^ 3 * c ^ 2 + 377 * b ^ 2 * (a + c) ^ 4 / 8 + 152 * a ^ 2 * c ^ 4 + 152 * a ^ 2 * b ^ 4 + 544 * c ^ 3 * (a + b) ^ 3 + 2176 * a ^ 3 * b ^ 3) = -(2176 * a ^ 3 * b ^ 3) - (544 * a ^ 3 * c ^ 3) - (544 * b ^ 3 * c ^ 3) - (120 * a ^ 2 * b ^ 4) - (120 * a ^ 2 * c ^ 4) - (377 * a ^ 4 * b ^ 2 / 8) - (377 * b ^ 2 * c ^ 4 / 8) - (1632 * b * a ^ 2 * c ^ 3) - (1408 * a * b ^ 3 * c ^ 2) - (1408 * b * a ^ 3 * c ^ 2) - (512 * a * b * c ^ 4) - (512 * a * c * b ^ 4) - (512 * b * c * a ^ 4) - (5377 * a * b ^ 2 * c ^ 3 / 2) - (2113 * c * a ^ 3 * b ^ 2 / 2) - (1987 * a ^ 2 * b ^ 2 * c ^ 2 / 4)
  scale AM_GM_normal_right_2vars (u := (((((((((2176 * (a ^ 3)) * (b ^ 3)) + ((((1987 * (a ^ 2)) * (b ^ 2)) * (c ^ 2)) / 4)) + ((((2113 * c) * (a ^ 3)) * (b ^ 2)) / 2)) + ((((5377 * a) * (b ^ 2)) * (c ^ 3)) / 2)) + (((512 * b) * c) * (a ^ 4))) + (((512 * a) * c) * (b ^ 4))) + (((512 * a) * b) * (c ^ 4))) + (((1408 * b) * (a ^ 3)) * (c ^ 2)))) (v := (((((1408 * a) * (b ^ 3)) * (c ^ 2)) + (((1632 * b) * (a ^ 2)) * (c ^ 3))) + ((((377 * (b ^ 2)) * (c ^ 4)) / 8) + (((377 * (a ^ 4)) * (b ^ 2)) / 8)))) (k := 1) (l := ((((120 * (a ^ 2)) * (c ^ 4)) + ((120 * (a ^ 2)) * (b ^ 4))) + (((544 * (b ^ 3)) * (c ^ 3)) + ((544 * (a ^ 3)) * (c ^ 3))))) (left := 0)

theorem P13 {a b c : ℝ} (ha : a ≥ 0) (hb : b ≥ 0) (hc : c ≥ 0) (h : a * b + b * c + c * a = 1) :
  1 ≤ 1 / (4 * a ^ 2 - b * c + 1) + 1 / (4 * b ^ 2 - c * a + 1) + 1 / (4 * c ^ 2 - a * b + 1) := by
  make_homogeneous 1 - ((a * b + b * c + c * a) / (4 * a ^ 2 + a * b + a * c)) - ((a * b + b * c + c * a) / (a * b + a * c + 4 * b ^ 2 + b * c - (a * c))) - ((a * b + b * c + c * a) / (a * c + b * c + 4 * c ^ 2)) ≤ 0
  llm_cancel_denom (1) - ((a * b + b * c + c * a) / (a * c + b * c + 4 * c ^ 2) + (a * b + b * c + c * a) / (a * b + a * c + 4 * b ^ 2 + b * c - a * c) + (a * b + b * c + c * a) / (4 * a ^ 2 + a * b + a * c)) = ((4 * a ^ 2 + a * b + a * c) * (4 * b ^ 2 + a * b + b * c) * (4 * c ^ 2 + a * c + b * c) - ((4 * a ^ 2 + a * b + a * c) * (4 * b ^ 2 + a * b + b * c) * (a * b + a * c + b * c)) - ((4 * a ^ 2 + a * b + a * c) * (4 * c ^ 2 + a * c + b * c) * (a * b + a * c + b * c)) - ((4 * b ^ 2 + a * b + b * c) * (4 * c ^ 2 + a * c + b * c) * (a * b + a * c + b * c))) / ((4 * a ^ 2 + a * b + a * c) * (4 * b ^ 2 + a * b + b * c) * (4 * c ^ 2 + a * c + b * c))
  llm_mul_expand (4 * a ^ 2 + a * b + a * c) * (4 * b ^ 2 + a * b + b * c) * (4 * c ^ 2 + a * c + b * c) - ((4 * b ^ 2 + a * b + b * c) * (4 * c ^ 2 + a * c + b * c) * (a * b + a * c + b * c) + (4 * a ^ 2 + a * b + a * c) * (4 * c ^ 2 + a * c + b * c) * (a * b + a * c + b * c) + (4 * a ^ 2 + a * b + a * c) * (4 * b ^ 2 + a * b + b * c) * (a * b + a * c + b * c)) = 45 * a ^ 2 * b ^ 2 * c ^ 2 - (17 * a ^ 3 * b ^ 3) - (17 * a ^ 3 * c ^ 3) - (17 * b ^ 3 * c ^ 3) - (4 * a ^ 2 * b ^ 4) - (4 * a ^ 2 * c ^ 4) - (4 * a ^ 4 * b ^ 2) - (4 * a ^ 4 * c ^ 2) - (4 * b ^ 2 * c ^ 4) - (4 * b ^ 4 * c ^ 2) - (11 * a * b ^ 2 * c ^ 3) - (11 * a * b ^ 3 * c ^ 2) - (11 * b * a ^ 2 * c ^ 3) - (11 * b * a ^ 3 * c ^ 2) - (11 * c * a ^ 2 * b ^ 3) - (11 * c * a ^ 3 * b ^ 2) - (4 * a * b * c ^ 4) - (4 * a * c * b ^ 4) - (4 * b * c * a ^ 4)
  scale Muirhead_Req0_onestep_right_3vars (u := b) (v := c) (w := a) (p := 3) (q := 3) (k := 17) (l := (((((((((((((((((4 * b) * c) * (a ^ 4)) + (((4 * a) * c) * (b ^ 4))) + (((4 * a) * b) * (c ^ 4))) + (((11 * c) * (a ^ 3)) * (b ^ 2))) + (((11 * c) * (a ^ 2)) * (b ^ 3))) + (((11 * b) * (a ^ 3)) * (c ^ 2))) + (((11 * b) * (a ^ 2)) * (c ^ 3))) + (((11 * a) * (b ^ 3)) * (c ^ 2))) + (((11 * a) * (b ^ 2)) * (c ^ 3))) + ((4 * (b ^ 4)) * (c ^ 2))) + ((4 * (b ^ 2)) * (c ^ 4))) + ((4 * (a ^ 4)) * (c ^ 2))) + ((4 * (a ^ 4)) * (b ^ 2))) + ((4 * (a ^ 2)) * (c ^ 4))) + ((4 * (a ^ 2)) * (b ^ 4)))) (left := 45 * a ^ 2 * b ^ 2 * c ^ 2)
  scale AM_GM_square_right_2vars (u := (c ^ 2)) (v := (b ^ 2)) (k := (4 * (a ^ 2))) (l := ((((((((((((((17 * ((((b ^ 2) * (c ^ 4)) + ((c ^ 2) * (a ^ 4))) + ((a ^ 2) * (b ^ 4)))) + (((4 * b) * c) * (a ^ 4))) + (((4 * a) * c) * (b ^ 4))) + (((4 * a) * b) * (c ^ 4))) + (((11 * c) * (a ^ 3)) * (b ^ 2))) + (((11 * c) * (a ^ 2)) * (b ^ 3))) + (((11 * b) * (a ^ 3)) * (c ^ 2))) + (((11 * b) * (a ^ 2)) * (c ^ 3))) + (((11 * a) * (b ^ 3)) * (c ^ 2))) + (((11 * a) * (b ^ 2)) * (c ^ 3))) + ((4 * (b ^ 4)) * (c ^ 2))) + ((4 * (b ^ 2)) * (c ^ 4))) + ((4 * (a ^ 4)) * (c ^ 2))) + ((4 * (a ^ 4)) * (b ^ 2)))) (left := 45 * a ^ 2 * b ^ 2 * c ^ 2)
  llm_frac_reduce 45 * a ^ 2 * b ^ 2 * c ^ 2 - (8 * a ^ 2 * c ^ 2 * b ^ 2 + 17 * (b ^ 2 * c ^ 4 + c ^ 2 * a ^ 4 + a ^ 2 * b ^ 4) + 4 * b * c * a ^ 4 + 4 * a * c * b ^ 4 + 4 * a * b * c ^ 4 + 11 * c * a ^ 3 * b ^ 2 + 11 * c * a ^ 2 * b ^ 3 + 11 * b * a ^ 3 * c ^ 2 + 11 * b * a ^ 2 * c ^ 3 + 11 * a * b ^ 3 * c ^ 2 + 11 * a * b ^ 2 * c ^ 3 + 4 * b ^ 4 * c ^ 2 + 4 * b ^ 2 * c ^ 4 + 4 * a ^ 4 * c ^ 2 + 4 * a ^ 4 * b ^ 2) = 37 * a ^ 2 * b ^ 2 * c ^ 2 - (21 * a ^ 4 * c ^ 2) - (21 * b ^ 2 * c ^ 4) - (17 * a ^ 2 * b ^ 4) - (4 * a ^ 4 * b ^ 2) - (4 * b ^ 4 * c ^ 2) - (11 * a * b ^ 2 * c ^ 3) - (11 * a * b ^ 3 * c ^ 2) - (11 * b * a ^ 2 * c ^ 3) - (11 * b * a ^ 3 * c ^ 2) - (11 * c * a ^ 2 * b ^ 3) - (11 * c * a ^ 3 * b ^ 2) - (4 * a * b * c ^ 4) - (4 * a * c * b ^ 4) - (4 * b * c * a ^ 4)
  scale AM_GM_normal_right_2vars (u := (((4 * (a ^ 4)) * (b ^ 2)) + ((17 * (a ^ 2)) * (b ^ 4)))) (v := (((21 * (b ^ 2)) * (c ^ 4)) + ((((((((((((4 * b) * c) * (a ^ 4)) + (((4 * a) * c) * (b ^ 4))) + (((4 * a) * b) * (c ^ 4))) + (((11 * c) * (a ^ 3)) * (b ^ 2))) + (((11 * c) * (a ^ 2)) * (b ^ 3))) + (((11 * b) * (a ^ 3)) * (c ^ 2))) + (((11 * b) * (a ^ 2)) * (c ^ 3))) + (((11 * a) * (b ^ 3)) * (c ^ 2))) + (((11 * a) * (b ^ 2)) * (c ^ 3))) + ((4 * (b ^ 4)) * (c ^ 2))))) (k := 1) (l := ((21 * (a ^ 4)) * (c ^ 2))) (left := 37 * a ^ 2 * b ^ 2 * c ^ 2)
  llm_factor 37 * a ^ 2 * b ^ 2 * c ^ 2 - (2 * sqrt((4 * a ^ 4 * b ^ 2 + 17 * a ^ 2 * b ^ 4) * (21 * b ^ 2 * c ^ 4 + 4 * b * c * a ^ 4 + 4 * a * c * b ^ 4 + 4 * a * b * c ^ 4 + 11 * c * a ^ 3 * b ^ 2 + 11 * c * a ^ 2 * b ^ 3 + 11 * b * a ^ 3 * c ^ 2 + 11 * b * a ^ 2 * c ^ 3 + 11 * a * b ^ 3 * c ^ 2 + 11 * a * b ^ 2 * c ^ 3 + 4 * b ^ 4 * c ^ 2)) + 21 * a ^ 4 * c ^ 2) = 37 * a ^ 2 * b ^ 2 * c ^ 2 - (2 * sqrt (c * a ^ 2 * b ^ 3 * (4 * a ^ 2 + 17 * b ^ 2) * (4 * a ^ 4 + 4 * a * b ^ 3 + 4 * a * c ^ 3 + 4 * c * b ^ 3 + 11 * b * a ^ 3 + 11 * c * a ^ 3 + 11 * a ^ 2 * b ^ 2 + 11 * a ^ 2 * c ^ 2 + 21 * b * c ^ 3 + 11 * a * b * c ^ 2 + 11 * a * c * b ^ 2))) - (21 * a ^ 4 * c ^ 2)
  scale weighted_AM_GM_normal_right_2vars (u := ((21 * (a ^ 4)) * (c ^ 2))) (v := sqrt (((((c * (a ^ 2)) * (b ^ 3)) * ((4 * (a ^ 2)) + (17 * (b ^ 2)))) * (((((((((((4 * (a ^ 4)) + ((4 * a) * (b ^ 3))) + ((4 * a) * (c ^ 3))) + ((4 * c) * (b ^ 3))) + ((11 * b) * (a ^ 3))) + ((11 * c) * (a ^ 3))) + ((11 * (a ^ 2)) * (b ^ 2))) + ((11 * (a ^ 2)) * (c ^ 2))) + ((21 * b) * (c ^ 3))) + (((11 * a) * b) * (c ^ 2))) + (((11 * a) * c) * (b ^ 2)))))) (i1 := 1) (i2 := 2) (k := 1) (l := 0) (left := 37 * a ^ 2 * b ^ 2 * c ^ 2)
  llm_cancel_power 3
  llm_cancel_factor ((37 * a ^ 2 * b ^ 2 * c ^ 2) ^ 3) - ((3 * (21 * a ^ 4 * c ^ 2 * c * a ^ 2 * b ^ 3 * (4 * a ^ 2 + 17 * b ^ 2) * (4 * a ^ 4 + 4 * a * b ^ 3 + 4 * a * c ^ 3 + 4 * c * b ^ 3 + 11 * b * a ^ 3 + 11 * c * a ^ 3 + 11 * a ^ 2 * b ^ 2 + 11 * a ^ 2 * c ^ 2 + 21 * b * c ^ 3 + 11 * a * b * c ^ 2 + 11 * a * c * b ^ 2)) ^ (1 / 3)) ^ 3) = (a ^ 6) * (b ^ 3) * (c ^ 3) * (-(9072 * a ^ 6) - (151766 * b ^ 3 * c ^ 3) - (115101 * a ^ 3 * b ^ 3) - (106029 * a ^ 2 * b ^ 4) - (63504 * a ^ 4 * b ^ 2) - (38556 * a * b ^ 5) - (38556 * c * b ^ 5) - (24948 * b * a ^ 5) - (24948 * c * a ^ 5) - (24948 * a ^ 4 * c ^ 2) - (9072 * a ^ 3 * c ^ 3) - (130977 * c * a ^ 3 * b ^ 2) - (106029 * a * c * b ^ 4) - (106029 * a * b ^ 3 * c ^ 2) - (106029 * a ^ 2 * b ^ 2 * c ^ 2) - (47628 * b * a ^ 2 * c ^ 3) - (38556 * a * b ^ 2 * c ^ 3) - (24948 * b * a ^ 3 * c ^ 2) - (9072 * c * a ^ 2 * b ^ 3))
  scale AM_GM_normal_right_2vars (u := (((((((((((9072 * (a ^ 6)) + (((9072 * c) * (a ^ 2)) * (b ^ 3))) + (((24948 * b) * (a ^ 3)) * (c ^ 2))) + (((38556 * a) * (b ^ 2)) * (c ^ 3))) + (((47628 * b) * (a ^ 2)) * (c ^ 3))) + (((106029 * (a ^ 2)) * (b ^ 2)) * (c ^ 2))) + (((106029 * a) * (b ^ 3)) * (c ^ 2))) + (((106029 * a) * c) * (b ^ 4))) + (((130977 * c) * (a ^ 3)) * (b ^ 2))) + ((9072 * (a ^ 3)) * (c ^ 3))) + ((24948 * (a ^ 4)) * (c ^ 2)))) (v := ((((24948 * c) * (a ^ 5)) + ((24948 * b) * (a ^ 5))) + (((38556 * c) * (b ^ 5)) + ((38556 * a) * (b ^ 5))))) (k := 1) (l := ((((63504 * (a ^ 4)) * (b ^ 2)) + ((106029 * (a ^ 2)) * (b ^ 4))) + (((115101 * (a ^ 3)) * (b ^ 3)) + ((151766 * (b ^ 3)) * (c ^ 3))))) (left := 0)

theorem P14 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) :
  9 / (1 + a * b * c) ≤ (1 / a + 1 / b + 1 / c) * (1 / (1 + a) + 1 / (1 + b) + 1 / (1 + c)) := by
  llm_frac_together 9 / (1 + a * b * c) - ((1 / a + 1 / b + 1 / c) * (1 / (1 + a) + 1 / (1 + b) + 1 / (1 + c))) = 9 / (a * b * c + 1) - ((a * b + a * c + b * c) * ((1 + a) * (1 + b) + (1 + a) * (1 + c) + (1 + b) * (1 + c)) / (a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 2 * c + a ^ 2 * b * c ^ 2 + a ^ 2 * b * c + a * b ^ 2 * c ^ 2 + a * b ^ 2 * c + a * b * c ^ 2 + a * b * c))
  llm_simplify 9 / (a * b * c + 1) - ((a * b + a * c + b * c) * ((1 + a) * (1 + b) + (1 + a) * (1 + c) + (1 + b) * (1 + c)) / (a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 2 * c + a ^ 2 * b * c ^ 2 + a ^ 2 * b * c + a * b ^ 2 * c ^ 2 + a * b ^ 2 * c + a * b * c ^ 2 + a * b * c)) = 9 / (a * b * c + 1) - ((a * b + a * c + b * c) * (3 + 2 * a + 2 * b + 2 * c + a * b + a * c + b * c) / (a * b * c * (a * b * c + a * b + a * c + a + b * c + b + c + 1)))
  llm_frac_together 9 / (a * b * c + 1) - ((a * b + a * c + b * c) * (3 + 2 * a + 2 * b + 2 * c + a * b + a * c + b * c) / (a * b * c * (a * b * c + a * b + a * c + a + b * c + b + c + 1))) = 9 / (a * b * c + 1) - ((a * b + a * c + b * c) * (3 + 2 * a + 2 * b + 2 * c + a * b + a * c + b * c) / (a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 2 * c + a ^ 2 * b * c ^ 2 + a ^ 2 * b * c + a * b ^ 2 * c ^ 2 + a * b ^ 2 * c + a * b * c ^ 2 + a * b * c))
  llm_simplify 9 / (a * b * c + 1) - ((a * b + a * c + b * c) * (3 + 2 * a + 2 * b + 2 * c + a * b + a * c + b * c) / (a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 2 * c + a ^ 2 * b * c ^ 2 + a ^ 2 * b * c + a * b ^ 2 * c ^ 2 + a * b ^ 2 * c + a * b * c ^ 2 + a * b * c)) = 9 / (a * b * c + 1) - ((a * b + a * c + b * c) ^ 2 / (a * b * c * (a * b * c + a * b + a * c + a + b * c + b + c + 1))) - (3 * (a * b + a * c + b * c) / (a * b * c * (a * b * c + a * b + a * c + a + b * c + b + c + 1))) - ((2 * a + 2 * b + 2 * c) * (a * b + a * c + b * c) / (a * b * c * (a * b * c + a * b + a * c + a + b * c + b + c + 1)))
  scale weighted_AM_GM_normal_right_3vars (u := 2) (v := 2) (w := 2) (i1 := a) (i2 := b) (i3 := c) (k := ((((a * b) + (a * c)) + (b * c)) * (1 / (((a * b) * c) * (((((((((a * b) * c) + (a * b)) + (a * c)) + a) + (b * c)) + b) + c) + 1))))) (l := (((3 * (((a * b) + (a * c)) + (b * c))) / (((a * b) * c) * (((((((((a * b) * c) + (a * b)) + (a * c)) + a) + (b * c)) + b) + c) + 1))) + (((((a * b) + (a * c)) + (b * c)) ^ 2) / (((a * b) * c) * (((((((((a * b) * c) + (a * b)) + (a * c)) + a) + (b * c)) + b) + c) + 1))))) (left := 9 / (a * b * c + 1))
  llm_cancel_numer 9 / (a * b * c + 1) - ((a * b + a * c + b * c) * (1 / (a * b * c * (a * b * c + a * b + a * c + a + b * c + b + c + 1))) * (a + b + c) * (2 ^ a * 2 ^ b * 2 ^ c) ^ (1 / (a + b + c)) + 3 * (a * b + a * c + b * c) / (a * b * c * (a * b * c + a * b + a * c + a + b * c + b + c + 1)) + (a * b + a * c + b * c) ^ 2 / (a * b * c * (a * b * c + a * b + a * c + a + b * c + b + c + 1))) = 9 / (a * b * c + 1) - (((a * b + a * c + b * c) ^ 2 + (3 + (2 ^ a * 2 ^ b * 2 ^ c) ^ (1 / ((a + b + c))) * (a + b + c)) * (a * b + a * c + b * c)) / (a * b * c * (a * b * c + a * b + a * c + a + b * c + b + c + 1)))
  llm_cancel_factor 9 / (a * b * c + 1) - (((a * b + a * c + b * c) ^ 2 + (3 + (2 ^ a * 2 ^ b * 2 ^ c) ^ (1 / (a + b + c)) * (a + b + c)) * (a * b + a * c + b * c)) / (a * b * c * (a * b * c + a * b + a * c + a + b * c + b + c + 1))) = 9 / (a * b * c + 1) - ((a * b + a * c + b * c) * (3 + a * b + a * c + b * c + (2 ^ a * 2 ^ b * 2 ^ c) ^ (1 / ((a + b + c))) * (a + b + c)) / (a * b * c * (a * b * c + a * b + a * c + a + b * c + b + c + 1)))
  llm_frac_together 9 / (a * b * c + 1) - ((a * b + a * c + b * c) * (3 + a * b + a * c + b * c + (2 ^ a * 2 ^ b * 2 ^ c) ^ (1 / (a + b + c)) * (a + b + c)) / (a * b * c * (a * b * c + a * b + a * c + a + b * c + b + c + 1))) = 9 / (a * b * c + 1) - ((a * b + a * c + b * c) * (3 + a * b + a * c + b * c + (2 ^ a * 2 ^ b * 2 ^ c) ^ (1 / (a + b + c)) * (a + b + c)) / (a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 2 * c + a ^ 2 * b * c ^ 2 + a ^ 2 * b * c + a * b ^ 2 * c ^ 2 + a * b ^ 2 * c + a * b * c ^ 2 + a * b * c))
  llm_cancel_denom (9 / (a * b * c + 1)) - ((a * b + a * c + b * c) * (3 + a * b + a * c + b * c + (2 ^ a * 2 ^ b * 2 ^ c) ^ (1 / (a + b + c)) * (a + b + c)) / (a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 2 * c + a ^ 2 * b * c ^ 2 + a ^ 2 * b * c + a * b ^ 2 * c ^ 2 + a * b ^ 2 * c + a * b * c ^ 2 + a * b * c)) = (9 * a * b * c + 9 * a * b * c ^ 2 + 9 * a * c * b ^ 2 + 9 * a * b ^ 2 * c ^ 2 + 9 * b * c * a ^ 2 + 9 * b * a ^ 2 * c ^ 2 + 9 * c * a ^ 2 * b ^ 2 + 9 * a ^ 2 * b ^ 2 * c ^ 2 - ((1 + a * b * c) * (a * b + a * c + b * c) * (3 + a * b + a * c + b * c + (2 ^ a * 2 ^ b * 2 ^ c) ^ (1 / (a + b + c)) * (a + b + c)))) / ((1 + a * b * c) * (a * b * c + a * b * c ^ 2 + a * c * b ^ 2 + a * b ^ 2 * c ^ 2 + b * c * a ^ 2 + b * a ^ 2 * c ^ 2 + c * a ^ 2 * b ^ 2 + a ^ 2 * b ^ 2 * c ^ 2))
  llm_simplify 9 * a * b * c + 9 * a * b * c ^ 2 + 9 * a * c * b ^ 2 + 9 * a * b ^ 2 * c ^ 2 + 9 * b * c * a ^ 2 + 9 * b * a ^ 2 * c ^ 2 + 9 * c * a ^ 2 * b ^ 2 + 9 * a ^ 2 * b ^ 2 * c ^ 2 - ((1 + a * b * c) * (a * b + a * c + b * c) * (3 + a * b + a * c + b * c + (2 ^ a * 2 ^ b * 2 ^ c) ^ (1 / (a + b + c)) * (a + b + c))) = 9 * a * b * c + 9 * a * b * c ^ 2 + 9 * a * b ^ 2 * c + 9 * a * b ^ 2 * c ^ 2 + 9 * a ^ 2 * b * c + 9 * a ^ 2 * b * c ^ 2 + 9 * a ^ 2 * b ^ 2 * c + 9 * a ^ 2 * b ^ 2 * c ^ 2 - ((a * b + a * c + b * c) ^ 2 + (a * b + a * c + b * c) * 3 + (2 ^ a * 2 ^ b * 2 ^ c) ^ (1 / ((a + b + c))) * (a + b + c) * (a * b + a * c + b * c) + a * b * c * (a * b + a * c + b * c) ^ 2 + a * b * c * (a * b + a * c + b * c) * 3 + a * b * c * (2 ^ a * 2 ^ b * 2 ^ c) ^ (1 / ((a + b + c))) * (a + b + c) * (a * b + a * c + b * c))
  scale AM_HM_normal_right_3vars (u := (a * b)) (v := (a * c)) (w := (b * c)) (k := (((((2 ^ a) * (2 ^ b)) * (2 ^ c)) ^ (1 / ((a + b) + c))) * ((a + b) + c))) (l := ((((((a * b) * c) * (((a * b) + (a * c)) + (b * c))) * 3) + (((((a * b) * c) * ((((2 ^ a) * (2 ^ b)) * (2 ^ c)) ^ (1 / ((a + b) + c)))) * ((a + b) + c)) * (((a * b) + (a * c)) + (b * c)))) + ((((a * b) * c) * ((((a * b) + (a * c)) + (b * c)) ^ 2)) + (((((a * b) + (a * c)) + (b * c)) ^ 2) + ((((a * b) + (a * c)) + (b * c)) * 3))))) (left := 9 * a * b * c + 9 * a * b * c ^ 2 + 9 * a * b ^ 2 * c + 9 * a * b ^ 2 * c ^ 2 + 9 * a ^ 2 * b * c + 9 * a ^ 2 * b * c ^ 2 + 9 * a ^ 2 * b ^ 2 * c + 9 * a ^ 2 * b ^ 2 * c ^ 2)
  llm_simplify 9 * a * b * c + 9 * a * b * c ^ 2 + 9 * a * b ^ 2 * c + 9 * a * b ^ 2 * c ^ 2 + 9 * a ^ 2 * b * c + 9 * a ^ 2 * b * c ^ 2 + 9 * a ^ 2 * b ^ 2 * c + 9 * a ^ 2 * b ^ 2 * c ^ 2 - ((2 ^ a * 2 ^ b * 2 ^ c) ^ (1 / (a + b + c)) * (a + b + c) * (9 / (1 / (a * b) + 1 / (a * c) + 1 / (b * c))) + a * b * c * (a * b + a * c + b * c) * 3 + a * b * c * (2 ^ a * 2 ^ b * 2 ^ c) ^ (1 / (a + b + c)) * (a + b + c) * (a * b + a * c + b * c) + a * b * c * (a * b + a * c + b * c) ^ 2 + (a * b + a * c + b * c) ^ 2 + (a * b + a * c + b * c) * 3) = 9 * a * b * c ^ 2 + 9 * a * c * b ^ 2 + 9 * a * b ^ 2 * c ^ 2 + 9 * b * c * a ^ 2 + 9 * b * a ^ 2 * c ^ 2 + 9 * c * a ^ 2 * b ^ 2 + 9 * a ^ 2 * b ^ 2 * c ^ 2 - ((a * b + a * c + b * c) ^ 2) - (3 * a * b) - (3 * a * c) - (3 * b * c) - (9 * a * b * c) - (a * b * c * (a * b + a * c + b * c) ^ 2) - (3 * a * b * c * (a * b + a * c + b * c)) - (2 * a * b * c * (a + b + c) * (a * b + a * c + b * c))
  llm_exp_expand 9 * a * b * c ^ 2 + 9 * a * c * b ^ 2 + 9 * a * b ^ 2 * c ^ 2 + 9 * b * c * a ^ 2 + 9 * b * a ^ 2 * c ^ 2 + 9 * c * a ^ 2 * b ^ 2 + 9 * a ^ 2 * b ^ 2 * c ^ 2 - (2 * a * b * c * (a + b + c) * (a * b + a * c + b * c) + 3 * a * b * c * (a * b + a * c + b * c) + a * b * c * (a * b + a * c + b * c) ^ 2 + 9 * a * b * c + 3 * b * c + 3 * a * c + 3 * a * b + (a * b + a * c + b * c) ^ 2) = 7 * a * b * c ^ 2 + 7 * a * c * b ^ 2 + 7 * b * c * a ^ 2 + 9 * a * b ^ 2 * c ^ 2 + 9 * b * a ^ 2 * c ^ 2 + 9 * c * a ^ 2 * b ^ 2 + 9 * a ^ 2 * b ^ 2 * c ^ 2 - (a ^ 2 * b ^ 2) - (a ^ 2 * c ^ 2) - (b ^ 2 * c ^ 2) - (3 * a * b) - (3 * a * c) - (3 * b * c) - (9 * a * b * c) - (a * b * c * (a ^ 2 * b ^ 2 + a ^ 2 * c ^ 2 + b ^ 2 * c ^ 2 + 2 * a * b * c ^ 2 + 2 * a * c * b ^ 2 + 2 * b * c * a ^ 2)) - (3 * a * b * c * (a * b + a * c + b * c)) - (2 * a * b * c * (a + b + c) * (a * b + a * c + b * c))
  scale Muirhead_Req0_onestep_right_3vars (u := c) (v := a) (w := b) (p := 2) (q := 2) (k := 1) (l := (((((((((((2 * a) * b) * c) * ((a + b) + c)) * (((a * b) + (a * c)) + (b * c))) + ((((3 * a) * b) * c) * (((a * b) + (a * c)) + (b * c)))) + (((a * b) * c) * (((((((a ^ 2) * (b ^ 2)) + ((a ^ 2) * (c ^ 2))) + ((b ^ 2) * (c ^ 2))) + (((2 * a) * b) * (c ^ 2))) + (((2 * a) * c) * (b ^ 2))) + (((2 * b) * c) * (a ^ 2))))) + (((9 * a) * b) * c)) + ((3 * b) * c)) + ((3 * a) * c)) + ((3 * a) * b))) (left := 7 * a * b * c ^ 2 + 7 * a * c * b ^ 2 + 7 * b * c * a ^ 2 + 9 * a * b ^ 2 * c ^ 2 + 9 * b * a ^ 2 * c ^ 2 + 9 * c * a ^ 2 * b ^ 2 + 9 * a ^ 2 * b ^ 2 * c ^ 2)
  llm_simplify 7 * a * b * c ^ 2 + 7 * a * c * b ^ 2 + 7 * b * c * a ^ 2 + 9 * a * b ^ 2 * c ^ 2 + 9 * b * a ^ 2 * c ^ 2 + 9 * c * a ^ 2 * b ^ 2 + 9 * a ^ 2 * b ^ 2 * c ^ 2 - (c * a ^ 3 + a * b ^ 3 + b * c ^ 3 + 2 * a * b * c * (a + b + c) * (a * b + a * c + b * c) + 3 * a * b * c * (a * b + a * c + b * c) + a * b * c * (a ^ 2 * b ^ 2 + a ^ 2 * c ^ 2 + b ^ 2 * c ^ 2 + 2 * a * b * c ^ 2 + 2 * a * c * b ^ 2 + 2 * b * c * a ^ 2) + 9 * a * b * c + 3 * b * c + 3 * a * c + 3 * a * b) = 7 * a * b * c * (a + b + c) + 6 * a * b * c * (a * b + a * c + b * c) + 9 * a ^ 2 * b ^ 2 * c ^ 2 - (c * a ^ 3 + a * b ^ 3 + b * c ^ 3 + 2 * a * b * c * (a + b + c) * (a * b + a * c + b * c) + a * b * c * (a ^ 2 * b ^ 2 + a ^ 2 * c ^ 2 + b ^ 2 * c ^ 2 + 2 * a * b * c ^ 2 + 2 * a * c * b ^ 2 + 2 * b * c * a ^ 2) + 9 * a * b * c + 3 * b * c + 3 * a * c + 3 * a * b)
  llm_factor 7 * a * b * c * (a + b + c) + 6 * a * b * c * (a * b + a * c + b * c) + 9 * a ^ 2 * b ^ 2 * c ^ 2 - (c * a ^ 3 + a * b ^ 3 + b * c ^ 3 + 2 * a * b * c * (a + b + c) * (a * b + a * c + b * c) + a * b * c * (a ^ 2 * b ^ 2 + a ^ 2 * c ^ 2 + b ^ 2 * c ^ 2 + 2 * a * b * c ^ 2 + 2 * a * c * b ^ 2 + 2 * b * c * a ^ 2) + 9 * a * b * c + 3 * b * c + 3 * a * c + 3 * a * b) = 9 * a ^ 2 * b ^ 2 * c ^ 2 + 6 * a * b * c * (a * b + a * c + b * c) + 7 * a * b * c * (a + b + c) - (a * b ^ 3) - (b * c ^ 3) - (c * a ^ 3) - (3 * a * b) - (3 * a * c) - (3 * b * c) - (9 * a * b * c) - (a * b * c * (a * b + a * c + b * c) ^ 2) - (2 * a * b * c * (a + b + c) * (a * b + a * c + b * c))
  scale AM_HM_normal_right_3vars (u := (a * b)) (v := (a * c)) (w := (b * c)) (k := ((((2 * a) * b) * c) * ((a + b) + c))) (l := ((((((a * b) * c) * ((((a * b) + (a * c)) + (b * c)) ^ 2)) + (((9 * a) * b) * c)) + (((3 * b) * c) + ((3 * a) * c))) + ((((3 * a) * b) + (c * (a ^ 3))) + ((b * (c ^ 3)) + (a * (b ^ 3)))))) (left := 9 * a ^ 2 * b ^ 2 * c ^ 2 + 6 * a * b * c * (a * b + a * c + b * c) + 7 * a * b * c * (a + b + c))
  llm_frac_apart 9 * a ^ 2 * b ^ 2 * c ^ 2 + 6 * a * b * c * (a * b + a * c + b * c) + 7 * a * b * c * (a + b + c) - (2 * a * b * c * (a + b + c) * (9 / (1 / (a * b) + 1 / (a * c) + 1 / (b * c))) + a * b * c * (a * b + a * c + b * c) ^ 2 + 9 * a * b * c + 3 * b * c + 3 * a * c + 3 * a * b + c * a ^ 3 + b * c ^ 3 + a * b ^ 3) = 9 * a ^ 2 * b ^ 2 * c ^ 2 + 6 * a * b * c * (a * b + a * c + b * c) + 7 * a * b * c * (a + b + c) - (a * b ^ 3) - (b * c ^ 3) - (c * a ^ 3) - (3 * a * b) - (3 * a * c) - (3 * b * c) - (9 * a * b * c) - (a * b * c * (a * b + a * c + b * c) ^ 2) - (18 * a ^ 3 * b ^ 3 * c ^ 3 * (a + b + c) / (a ^ 2 * b * c + a * b ^ 2 * c + a * b * c ^ 2))
  llm_exp_expand 9 * a ^ 2 * b ^ 2 * c ^ 2 + 6 * a * b * c * (a * b + a * c + b * c) + 7 * a * b * c * (a + b + c) - (18 * a ^ 3 * b ^ 3 * c ^ 3 * (a + b + c) / (a ^ 2 * b * c + a * b ^ 2 * c + a * b * c ^ 2) + a * b * c * (a * b + a * c + b * c) ^ 2 + 9 * a * b * c + 3 * b * c + 3 * a * c + 3 * a * b + c * a ^ 3 + b * c ^ 3 + a * b ^ 3) = 6 * a * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c + 7 * a * b * c ^ 2 + 7 * a * b ^ 2 * c + 7 * a ^ 2 * b * c + 9 * a ^ 2 * b ^ 2 * c ^ 2 - (a * b ^ 3) - (b * c ^ 3) - (c * a ^ 3) - (3 * a * b) - (3 * a * c) - (3 * b * c) - (9 * a * b * c) - (a * b * c * (a * b + a * c + b * c) ^ 2) - (18 * a ^ 3 * b ^ 3 * c ^ 3 * (a + b + c) / (a ^ 2 * b * c + a * b ^ 2 * c + a * b * c ^ 2))
  llm_simplify 6 * a * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c + 7 * a * b * c ^ 2 + 7 * a * b ^ 2 * c + 7 * a ^ 2 * b * c + 9 * a ^ 2 * b ^ 2 * c ^ 2 - (18 * a ^ 3 * b ^ 3 * c ^ 3 * (a + b + c) / (a ^ 2 * b * c + a * b ^ 2 * c + a * b * c ^ 2) + a * b * c * (a * b + a * c + b * c) ^ 2 + 9 * a * b * c + 3 * b * c + 3 * a * c + 3 * a * b + c * a ^ 3 + b * c ^ 3 + a * b ^ 3) = 9 * a ^ 2 * b ^ 2 * c ^ 2 + a * b * c ^ 2 * (6 * b + 7) + a * b ^ 2 * c * (6 * a + 7) + a ^ 2 * b * c * (6 * c + 7) - (a * b ^ 3) - (b * c ^ 3) - (c * a ^ 3) - (3 * a * b) - (3 * a * c) - (3 * b * c) - (9 * a * b * c) - (a * b * c * (a * b + a * c + b * c) ^ 2) - (18 * a ^ 3 * b ^ 3 * c ^ 3 * (a + b + c) / (a ^ 2 * b * c + a * b ^ 2 * c + a * b * c ^ 2))
  llm_cancel_numer 9 * a ^ 2 * b ^ 2 * c ^ 2 + a * b * c ^ 2 * (6 * b + 7) + a * b ^ 2 * c * (6 * a + 7) + a ^ 2 * b * c * (6 * c + 7) - (18 * a ^ 3 * b ^ 3 * c ^ 3 * (a + b + c) / (a ^ 2 * b * c + a * b ^ 2 * c + a * b * c ^ 2) + a * b * c * (a * b + a * c + b * c) ^ 2 + 9 * a * b * c + 3 * b * c + 3 * a * c + 3 * a * b + c * a ^ 3 + b * c ^ 3 + a * b ^ 3) = a * b * c ^ 2 * (6 * b + 7) + a * b ^ 2 * c * (6 * a + 7) + a ^ 2 * b * c * (6 * c + 7) - (9 * a ^ 2 * b ^ 2 * c ^ 2) - (a * b * c * (a * b + a * c + b * c) ^ 2 + 9 * a * b * c + 3 * b * c + 3 * a * c + 3 * a * b + c * a ^ 3 + b * c ^ 3 + a * b ^ 3)
  scale weighted_AM_GM_normal_right_2vars (u := ((((a * b) + (a * c)) + (b * c)) ^ 2)) (v := 9) (i1 := ((a * b) * c)) (i2 := ((a * b) * c)) (k := 1) (l := ((((3 * b) * c) + (((3 * a) * c) + ((3 * a) * b))) + (((c * (a ^ 3)) + (b * (c ^ 3))) + ((a * (b ^ 3)) + (((9 * (a ^ 2)) * (b ^ 2)) * (c ^ 2)))))) (left := a * b * c ^ 2 * (6 * b + 7) + a * b ^ 2 * c * (6 * a + 7) + a ^ 2 * b * c * (6 * c + 7))
  llm_simplify a * b * c ^ 2 * (6 * b + 7) + a * b ^ 2 * c * (6 * a + 7) + a ^ 2 * b * c * (6 * c + 7) - ((a * b * c + a * b * c) * (((a * b + a * c + b * c) ^ 2) ^ (a * b * c) * 9 ^ (a * b * c)) ^ (1 / (a * b * c + a * b * c)) + 3 * b * c + 3 * a * c + 3 * a * b + c * a ^ 3 + b * c ^ 3 + a * b ^ 3 + 9 * a ^ 2 * b ^ 2 * c ^ 2) = 7 * a * b * c ^ 2 + 7 * a * c * b ^ 2 + 7 * b * c * a ^ 2 - (a * b ^ 3) - (b * c ^ 3) - (c * a ^ 3) - (3 * a * b) - (3 * a * c) - (3 * b * c) - (9 * a ^ 2 * b ^ 2 * c ^ 2)
  closed_by_sos

theorem P15 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) :
  sqrt (a * (b + 1)) + sqrt (b * (c + 1)) + sqrt (c * (a + 1)) ≤ 3 / 2 * sqrt ((a + 1) * (b + 1) * (c + 1)) := by
  llm_simplify sqrt(a * (b + 1)) + sqrt(b * (c + 1)) + sqrt(c * (a + 1)) - (3 / 2 * sqrt((a + 1) * (b + 1) * (c + 1))) = sqrt (a) * sqrt (1 + b) + sqrt (b) * sqrt (1 + c) + sqrt (c) * sqrt (1 + a) - (3 * sqrt (1 + a) * sqrt (1 + b) * sqrt (1 + c) / 2)
  scale Cauchy_Schwarz_sqrt_left_2vars (u1 := sqrt (a)) (u2 := 1) (v1 := sqrt ((1 + b))) (v2 := (sqrt (b) * sqrt ((1 + c)))) (k := 1) (l := (sqrt (c) * sqrt ((1 + a)))) (right := 3 * sqrt(1 + a) * sqrt(1 + b) * sqrt(1 + c) / 2)
  llm_cancel_factor (sqrt(sqrt a ^ 2 + 1) * sqrt(sqrt(1 + b) ^ 2 + (sqrt b * sqrt(1 + c)) ^ 2) + sqrt c * sqrt(1 + a)) - (3 * sqrt(1 + a) * sqrt(1 + b) * sqrt(1 + c) / 2) = (1 / 2) * (sqrt (1 + a)) * (2 * sqrt (c) + 2 * sqrt (1 + 2 * b + b * c) - (3 * sqrt (1 + b) * sqrt (1 + c)))
  llm_cancel_power 2
  llm_mul_expand (2 * sqrt c + 2 * sqrt(1 + 2 * b + b * c)) ^ 2 - ((3 * sqrt(1 + b) * sqrt(1 + c)) ^ 2) = 8 * sqrt (c) * sqrt (1 + 2 * b + b * c) - (5) - (b) - (5 * c) - (5 * b * c)
  llm_cancel_power 2
  llm_mul_expand (8 * sqrt c * sqrt(1 + 2 * b + b * c)) ^ 2 - ((5 * b * c + 5 * c + b + 5) ^ 2) = 14 * c + 14 * b * c ^ 2 + 68 * b * c - (25) - (b ^ 2) - (25 * c ^ 2) - (10 * b) - (25 * b ^ 2 * c ^ 2) - (10 * c * b ^ 2)
  scale AM_GM_square_left_2vars (u := b) (v := 1) (k := ((c ^ 2) * 14)) (l := (((68 * b) * c) + (14 * c))) (right := 10 * c * b ^ 2 + 25 * b ^ 2 * c ^ 2 + 10 * b + 25 * c ^ 2 + b ^ 2 + 25)
  llm_mul_expand c ^ 2 * 14 * (b ^ 2 + 1) / 2 + 68 * b * c + 14 * c - (10 * c * b ^ 2 + 25 * b ^ 2 * c ^ 2 + 10 * b + 25 * c ^ 2 + b ^ 2 + 25) = 14 * c + 68 * b * c - (25) - (b ^ 2) - (18 * c ^ 2) - (10 * b) - (18 * b ^ 2 * c ^ 2) - (10 * c * b ^ 2)
  scale AM_GM_square_left_2vars (u := c) (v := 1) (k := 14) (l := ((68 * b) * c)) (right := 10 * c * b ^ 2 + 18 * b ^ 2 * c ^ 2 + 10 * b + 18 * c ^ 2 + b ^ 2 + 25)
  llm_frac_apart 14 * (c ^ 2 + 1) / 2 + 68 * b * c - (10 * c * b ^ 2 + 18 * b ^ 2 * c ^ 2 + 10 * b + 18 * c ^ 2 + b ^ 2 + 25) = 68 * b * c - (18) - (b ^ 2) - (11 * c ^ 2) - (10 * b) - (18 * b ^ 2 * c ^ 2) - (10 * c * b ^ 2)
  scale AM_GM_square_right_2vars (u := 1) (v := (c * b)) (k := 18) (l := (((11 * (c ^ 2)) + (b ^ 2)) + ((10 * b) + ((10 * c) * (b ^ 2))))) (left := 68 * b * c)
  llm_frac_apart 68 * b * c - (36 * c * b + 11 * c ^ 2 + b ^ 2 + 10 * b + 10 * c * b ^ 2) = 32 * b * c - (b ^ 2) - (11 * c ^ 2) - (10 * b) - (10 * c * b ^ 2)
  scale AM_GM_normal_right_2vars (u := (b * (10 * c))) (v := 10) (k := b) (l := ((11 * (c ^ 2)) + (b ^ 2))) (left := 32 * b * c)
  llm_simplify 32 * b * c - (2 * b * sqrt(b * 10 * c * 10) + 11 * c ^ 2 + b ^ 2) = 32 * b * c - (b ^ 2) - (11 * c ^ 2) - (20 * b ^ (3 / 2) * sqrt (c))
  scale weighted_AM_GM_normal_right_3vars (u := ((b ^ (3 / 2)) * sqrt (c))) (v := (c ^ 2)) (w := (b ^ 2)) (i1 := 20) (i2 := 11) (i3 := 1) (k := 1) (l := 0) (left := 32 * b * c)
  sym_simplify 32 * b * c  -  32 * ((b ^ (3 / 2) * sqrt c) ^ 20 * (c ^ 2) ^ 11 * b ^ 2) ^ (1 / 32) = 0
  try close

theorem P16 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) :
  10 / (a + b + c) ^ 2 ≤ 1 / (a ^ 2 + b ^ 2) + 1 / (b ^ 2 + c ^ 2) + 1 / (c ^ 2 + a ^ 2) := by
  intro_by_homogeneous a + b + c = 3
  llm_mul_expand 10 / (a + b + c) ^ 2 - (1 / (a ^ 2 + b ^ 2) + 1 / (b ^ 2 + c ^ 2) + 1 / (c ^ 2 + a ^ 2)) = 10 / (a ^ 2 + 2 * a * b + 2 * a * c + b ^ 2 + 2 * b * c + c ^ 2) - (1 / (a ^ 2 + b ^ 2)) - (1 / (a ^ 2 + c ^ 2)) - (1 / (b ^ 2 + c ^ 2))
  scale AM_HM_div_left_2vars (u := ((((2 * a) * b) + ((2 * a) * c)) + ((2 * b) * c))) (v := ((c ^ 2) + ((b ^ 2) + (a ^ 2)))) (k := 10) (l := 0) (right := 1 / (b ^ 2 + c ^ 2) + 1 / (a ^ 2 + c ^ 2) + 1 / (a ^ 2 + b ^ 2))
  llm_cancel_numer (10 * (1 / (2 * a * b + 2 * a * c + 2 * b * c) + 1 / (c ^ 2 + b ^ 2 + a ^ 2)) / 4) - (1 / (b ^ 2 + c ^ 2) + 1 / (a ^ 2 + c ^ 2) + 1 / (a ^ 2 + b ^ 2)) = 5 / (2 * (2 * a * b + 2 * a * c + 2 * b * c)) + 5 / (2 * (a ^ 2 + b ^ 2 + c ^ 2)) - (1 / (a ^ 2 + b ^ 2)) - (1 / (a ^ 2 + c ^ 2)) - (1 / (b ^ 2 + c ^ 2))
  llm_cancel_denom (5 / (2 * (2 * a * b + 2 * a * c + 2 * b * c)) + 5 / (2 * (a ^ 2 + b ^ 2 + c ^ 2))) - (1 / (b ^ 2 + c ^ 2) + 1 / (a ^ 2 + c ^ 2) + 1 / (a ^ 2 + b ^ 2)) = (5 * (a ^ 2 + b ^ 2) * (a ^ 2 + c ^ 2) * (b ^ 2 + c ^ 2) * (2 * a ^ 2 + 2 * b ^ 2 + 2 * c ^ 2) + 5 * (a ^ 2 + b ^ 2) * (a ^ 2 + c ^ 2) * (b ^ 2 + c ^ 2) * (4 * a * b + 4 * a * c + 4 * b * c) - ((2 * a ^ 2 + 2 * b ^ 2 + 2 * c ^ 2) * ((a ^ 2 + b ^ 2) * (a ^ 2 + c ^ 2) + (a ^ 2 + b ^ 2) * (b ^ 2 + c ^ 2) + (a ^ 2 + c ^ 2) * (b ^ 2 + c ^ 2)) * (4 * a * b + 4 * a * c + 4 * b * c))) / ((a ^ 2 + b ^ 2) * (a ^ 2 + c ^ 2) * (b ^ 2 + c ^ 2) * (2 * a ^ 2 + 2 * b ^ 2 + 2 * c ^ 2) * (4 * a * b + 4 * a * c + 4 * b * c))
  llm_simplify 5 * (a ^ 2 + b ^ 2) * (a ^ 2 + c ^ 2) * (b ^ 2 + c ^ 2) * (2 * a ^ 2 + 2 * b ^ 2 + 2 * c ^ 2) + 5 * (a ^ 2 + b ^ 2) * (a ^ 2 + c ^ 2) * (b ^ 2 + c ^ 2) * (4 * a * b + 4 * a * c + 4 * b * c) - ((2 * a ^ 2 + 2 * b ^ 2 + 2 * c ^ 2) * ((a ^ 2 + b ^ 2) * (a ^ 2 + c ^ 2) + (a ^ 2 + b ^ 2) * (b ^ 2 + c ^ 2) + (a ^ 2 + c ^ 2) * (b ^ 2 + c ^ 2)) * (4 * a * b + 4 * a * c + 4 * b * c)) = 10 * (a ^ 2 + b ^ 2) * (a ^ 2 + c ^ 2) * (b ^ 2 + c ^ 2) * (a ^ 2 + b ^ 2 + c ^ 2) + 20 * (a ^ 2 + b ^ 2) * (a ^ 2 + c ^ 2) * (b ^ 2 + c ^ 2) * (a * b + a * c + b * c) - (8 * (a ^ 2 + b ^ 2 + c ^ 2) * (a * b + a * c + b * c) * ((a ^ 2 + b ^ 2) * (a ^ 2 + c ^ 2) + (a ^ 2 + b ^ 2) * (b ^ 2 + c ^ 2) + (a ^ 2 + c ^ 2) * (b ^ 2 + c ^ 2)))
  closed_by_sos

theorem P17 {a b c : ℝ} (ha : a ≥ 0) (hb : b ≥ 0) (hc : c ≥ 0) (h : a * b + b * c + c * a ≠ 0) :
  a ^ 2 * (b + c) ^ 2 / (a ^ 2 + 3 * b * c) + b ^ 2 * (a + c) ^ 2 / (b ^ 2 + 3 * a * c) + c ^ 2 * (a + b) ^ 2 / (c ^ 2 + 3 * a * b) ≤ a ^ 2 + b ^ 2 + c ^ 2 := by
  intro_by_homogeneous a + b + c = 3
  llm_cancel_factor (a ^ 2 * (b + c) ^ 2 / (a ^ 2 + 3 * b * c) + b ^ 2 * (a + c) ^ 2 / (b ^ 2 + 3 * a * c) + c ^ 2 * (a + b) ^ 2 / (c ^ 2 + 3 * a * b)) - (a ^ 2 + b ^ 2 + c ^ 2) = (a) * (b) * (c) * (1 / (a ^ 2 + 3 * b * c)) * (1 / (3 * a * c + b ^ 2)) * (1 / (3 * a * b + c ^ 2)) * (6 * a ^ 2 * b ^ 3 + 6 * a ^ 2 * c ^ 3 + 6 * a ^ 3 * b ^ 2 + 6 * a ^ 3 * c ^ 2 + 6 * b ^ 2 * c ^ 3 + 6 * b ^ 3 * c ^ 2 + 5 * a * b ^ 2 * c ^ 2 + 5 * b * a ^ 2 * c ^ 2 + 5 * c * a ^ 2 * b ^ 2 - (9 * a ^ 5) - (9 * b ^ 5) - (9 * c ^ 5) - (8 * a * b * c ^ 3) - (8 * a * c * b ^ 3) - (8 * b * c * a ^ 3))
  sym_pqr_method 4 * a ^ 3 * b ^ 2 + 22 * a ^ 2 * b ^ 3 - (9 * a ^ 5) - (6 * b ^ 5) - (11 * a * b ^ 4) ≤ 0
  llm_simplify 4 * a ^ 3 * b ^ 2 + 22 * a ^ 2 * b ^ 3 - 9 * a ^ 5 - 6 * b ^ 5 - 11 * a * b ^ 4 - (0) = 4 * a ^ 3 * b ^ 2 + 22 * a ^ 2 * b ^ 3 - (9 * a ^ 5) - (6 * b ^ 5) - (11 * a * b ^ 4)
  llm_cancel_factor (4 * a ^ 3 * b ^ 2 + 22 * a ^ 2 * b ^ 3) - (11 * a * b ^ 4 + 6 * b ^ 5 + 9 * a ^ 5) = ((a - (b)) ^ 2) * (b + 3 * a) * (-(6 * b ^ 2) - (3 * a ^ 2) - (5 * a * b))
  llm_simplify 0 - (6 * b ^ 2 + 5 * a * b + 3 * a ^ 2) = 5 * b * c + 5 * c * a - (6 * b ^ 2) - (3 * a ^ 2) - (5)
  llm_simplify 5 * b * c + 5 * c * a - (5 + 3 * a ^ 2 + 6 * b ^ 2) = -(3 * a * (a + b)) - (2 * b * (a + 3 * b))
  try close

theorem P18 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) (ha' : a * b < 1) (hb' : b * c < 1) (hc' : c * a < 1) (h' : 63 - 30 * a * b - 30 * a * c - 30 * b * c > 0) (h : a ^ 2 + b ^ 2 + c ^ 2 = 1) :
  1 / 3 ≤ (1 - a * b) / (7 - 3 * a * c) + (1 - b * c) / (7 - 3 * b * a) + (1 - c * a) / (7 - 3 * c * b) := by
  make_homogeneous 1 / 3 - ((a ^ 2 + b ^ 2 + c ^ 2 - (b * c)) / (7 * a ^ 2 + 7 * b ^ 2 + 7 * c ^ 2 - (3 * a * b))) - ((a ^ 2 + b ^ 2 + c ^ 2 - (a * b)) / (7 * a ^ 2 + 7 * b ^ 2 + 7 * c ^ 2 - (3 * a * c))) - ((a ^ 2 + b ^ 2 + c ^ 2 - (a * c)) / (7 * a ^ 2 + 7 * b ^ 2 + 7 * c ^ 2 - (3 * b * c))) ≤ 0
  scale Titu_variant1_right_3vars (u1 := ((((a ^ 2) + (b ^ 2)) + (c ^ 2)) - (a * c))) (u2 := ((((a ^ 2) + (b ^ 2)) + (c ^ 2)) - (a * b))) (u3 := ((((a ^ 2) + (b ^ 2)) + (c ^ 2)) - (b * c))) (v1 := ((((7 * (a ^ 2)) + (7 * (b ^ 2))) + (7 * (c ^ 2))) - ((3 * b) * c))) (v2 := ((((7 * (a ^ 2)) + (7 * (b ^ 2))) + (7 * (c ^ 2))) - ((3 * a) * c))) (v3 := ((((7 * (a ^ 2)) + (7 * (b ^ 2))) + (7 * (c ^ 2))) - ((3 * a) * b))) (k := 1) (l := 0) (left := 1 / 3)
  llm_simplify 1 / 3 - ((a ^ 2 + b ^ 2 + c ^ 2 - a * c + (a ^ 2 + b ^ 2 + c ^ 2 - a * b) + (a ^ 2 + b ^ 2 + c ^ 2 - b * c)) ^ 2 / ((a ^ 2 + b ^ 2 + c ^ 2 - a * c) * (7 * a ^ 2 + 7 * b ^ 2 + 7 * c ^ 2 - 3 * b * c) + (a ^ 2 + b ^ 2 + c ^ 2 - a * b) * (7 * a ^ 2 + 7 * b ^ 2 + 7 * c ^ 2 - 3 * a * c) + (a ^ 2 + b ^ 2 + c ^ 2 - b * c) * (7 * a ^ 2 + 7 * b ^ 2 + 7 * c ^ 2 - 3 * a * b))) = 1 / ((3)) - ((3 - (a * b) - (b * c) - (a * c)) ^ 2 / (3 * a * b * c * c + 3 * a * a * b * c + 3 * a * b * b * c - (10 * a * b) - (10 * a * c) - (10 * b * c) + 21))
  llm_cancel_factor 1 / 3 - ((3 - a * b - b * c - a * c) ^ 2 / (3 * a * b * c * c + 3 * a * a * b * c + 3 * a * b * b * c - 10 * a * b - 10 * a * c - 10 * b * c + 21)) = 1 / ((3)) - ((3 - (a * b) - (b * c) - (a * c)) ^ 2 / (3 * a * b * c * (a + b + c) - (10 * (a * b + a * c + b * c)) + 21))
  llm_factor 1 / 3 - ((3 - a * b - b * c - a * c) ^ 2 / (3 * a * b * c * (a + b + c) - 10 * (a * b + a * c + b * c) + 21)) = 1 / 3 - ((a * b + a * c + b * c - (3)) ^ 2 / (3 * a ^ 2 * b * c + 3 * a * b ^ 2 * c + 3 * a * b * c ^ 2 - (10 * a * b) - (10 * a * c) - (10 * b * c) + 21))
  llm_cancel_denom (1 / 3) - ((a * b + a * c + b * c - 3) ^ 2 / (3 * a ^ 2 * b * c + 3 * a * b ^ 2 * c + 3 * a * b * c ^ 2 - 10 * a * b - 10 * a * c - 10 * b * c + 21)) = (21 + 3 * a * b * c ^ 2 + 3 * a * c * b ^ 2 + 3 * b * c * a ^ 2 - (3 * (a * b + a * c + b * c - (3)) ^ 2) - (10 * a * b) - (10 * a * c) - (10 * b * c)) / (63 - 30 * a * b - 30 * a * c - 30 * b * c + 9 * a * b * c ^ 2 + 9 * a * c * b ^ 2 + 9 * b * c * a ^ 2)
  scale Rearrange_cycle_mul_left_3vars (u := (b * c)) (v := (a * b)) (w := (a * c)) (i1 := 3) (j1 := 0) (i2 := 1) (j2 := 0) (k := 1) (l := 21) (right := 10 * b * c + 10 * a * c + 10 * a * b + 3 * (a * b + a * c + b * c - 3) ^ 2)
  llm_factor 3 * b * c * b * c + 3 * a * b * a * b + 3 * a * c * a * c + 21 - (10 * b * c + 10 * a * c + 10 * a * b + 3 * (a * b + a * c + b * c - 3) ^ 2) = 8 * a * b + 8 * a * c + 8 * b * c - (6) - (6 * a * b * c ^ 2) - (6 * a * c * b ^ 2) - (6 * b * c * a ^ 2)
  llm_simplify 8 * a * b + 8 * a * c + 8 * b * c - (6 * b * c * a ^ 2 + 6 * a * c * b ^ 2 + 6 * a * b * c ^ 2 + 6) = 2 * a * b + 2 * a * c + 2 * b * c + 6 * b ^ 3 * c + 6 * b * c ^ 3 + 6 * a ^ 3 * c + 6 * a * c ^ 3 + 6 * a ^ 3 * b + 6 * a * b ^ 3 - (6)
  llm_cancel_factor (2 * a * b + 2 * a * c + 2 * b * c + 6 * b ^ 3 * c + 6 * b * c ^ 3 + 6 * a ^ 3 * c + 6 * a * c ^ 3 + 6 * a ^ 3 * b + 6 * a * b ^ 3) - (6) = (2) * (a * b + a * c + b * c + 3 * a * b ^ 3 + 3 * a * c ^ 3 + 3 * b * a ^ 3 + 3 * b * c ^ 3 + 3 * c * a ^ 3 + 3 * c * b ^ 3 - (3))
  scale AM_GM_square_left_2vars (u := (((a * b) + (a * c)) + (b * c))) (v := 1) (k := 1) (l := ((((3 * a) * (b ^ 3)) + ((3 * a) * (c ^ 3))) + ((((3 * b) * (a ^ 3)) + ((3 * b) * (c ^ 3))) + (((3 * c) * (a ^ 3)) + ((3 * c) * (b ^ 3)))))) (right := 3)
  scale Vasc_left_3vars (u := c) (v := a) (w := b) (k := 3) (l := ((((((((a * b) + (a * c)) + (b * c)) ^ 2) + 1) / 2) + ((3 * a) * (b ^ 3))) + (((3 * b) * (c ^ 3)) + ((3 * c) * (a ^ 3))))) (right := 3)
  llm_simplify 3 * (c ^ 2 + a ^ 2 + b ^ 2) ^ 2 / 3 + ((a * b + a * c + b * c) ^ 2 + 1) / 2 + 3 * a * b ^ 3 + 3 * b * c ^ 3 + 3 * c * a ^ 3 - (3) = ((a * b + a * c + b * c) ^ 2 + 1) / (2) + 3 * a * b ^ 3 + 3 * b * c ^ 3 + 3 * c * a ^ 3 - (2)
  llm_simplify ((a * b + a * c + b * c) ^ 2 + 1) / 2 + 3 * a * b ^ 3 + 3 * b * c ^ 3 + 3 * c * a ^ 3 - (2) = (a * b + a * c + b * c) ^ 2 / 2 + 3 * a * b ^ 3 + 3 * b * c ^ 3 + 3 * c * a ^ 3 - (3 / 2)
  scale Vasc_left_3vars (u := a) (v := c) (w := b) (k := 3) (l := (((((a * b) + (a * c)) + (b * c)) ^ 2) / 2)) (right := 3 / 2)
  llm_simplify 3 * (a ^ 2 + c ^ 2 + b ^ 2) ^ 2 / 3 + (a * b + a * c + b * c) ^ 2 / 2 - (3 / 2) = ((a + b + c) ^ 2 - (1)) ^ 2 / (8) - (1 / (2))
  llm_frac_together ((a + b + c) ^ 2 - 1) ^ 2 / 8 - (1 / 2) = (((a + b + c) ^ 2 - (1)) ^ 2 - (4)) / (8)
  llm_cancel_factor (((a + b + c) ^ 2 - 1) ^ 2 - 4) / 8 - (0) = ((a + b + c) ^ 2 + 1) * ((a + b + c) ^ 2 - (3)) / (8)
  scale Cauchy_Schwarz_normal_left_3vars (u1 := a) (u2 := b) (u3 := c) (v1 := 1) (v2 := 1) (v3 := 1) (k := 1) (l := 0) (right := 3)

theorem P19 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) (h : a * b * c = 1) :
  3 / 4 ≤ 1 / ((1 + a ^ 2) * (1 + a ^ 7)) + 1 / ((1 + b ^ 2) * (1 + b ^ 7)) + 1 / ((1 + c ^ 2) * (1 + c ^ 7)) := by
  sorry

theorem P20 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) (h : 3 * (a ^ 2 + b ^ 2 + c ^ 2) + a * b + b * c + c * a = 12) : a / sqrt(a + b) + b / sqrt(b + c) + c / sqrt(c + a) ≤ 3 / sqrt(2) := by
  sorry

theorem P21 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) : 1 / ((a ^ 2 + b * c) * (b + c) ^ 2) + 1 / ((b ^ 2 + c * a) * (c + a) ^ 2) + 1 / ((c ^ 2 + a * b) * (a + b) ^ 2) ≤ 8 * (a + b + c) ^ 2 / (3 * (a + b) ^ 2 * (b + c) ^ 2 * (c + a) ^ 2) := by
  intro_by_homogeneous a + b + c = 3
  scale Cauchy_Schwarz_sqrt_left_3vars (u1 := 1) (u2 := 1) (u3 := 1) (v1 := (1 / (((a ^ 2) + (b * c)) * ((b + c) ^ 2)))) (v2 := (1 / (((b ^ 2) + (c * a)) * ((c + a) ^ 2)))) (v3 := (1 / (((c ^ 2) + (a * b)) * ((a + b) ^ 2)))) (k := 1) (l := 0) (right := 8 * (a + b + c) ^ 2 / (3 * (a + b) ^ 2 * (b + c) ^ 2 * (c + a) ^ 2))
  llm_simplify sqrt 3 * sqrt((1 / ((a ^ 2 + b * c) * (b + c) ^ 2)) ^ 2 + (1 / ((b ^ 2 + c * a) * (c + a) ^ 2)) ^ 2 + (1 / ((c ^ 2 + a * b) * (a + b) ^ 2)) ^ 2) - (8 * (a + b + c) ^ 2 / (3 * (a + b) ^ 2 * (b + c) ^ 2 * (c + a) ^ 2)) = sqrt (3 / (((a + b) ^ 4) * ((a * b + c ^ 2) ^ 2)) + 3 / (((a + c) ^ 4) * ((a * c + b ^ 2) ^ 2)) + 3 / (((a ^ 2 + b * c) ^ 2) * ((b + c) ^ 4))) - (8 * (a + b + c) ^ 2 / (3 * ((a + b) ^ 2) * ((a + c) ^ 2) * ((b + c) ^ 2)))
  llm_exp_expand sqrt(3 / ((a + b) ^ 4 * (a * b + c ^ 2) ^ 2) + 3 / ((a + c) ^ 4 * (a * c + b ^ 2) ^ 2) + 3 / ((a ^ 2 + b * c) ^ 2 * (b + c) ^ 4)) - (8 * (a + b + c) ^ 2 / (3 * (a + b) ^ 2 * (a + c) ^ 2 * (b + c) ^ 2)) = sqrt (3 / ((a ^ 2 * b ^ 2 + 2 * a * b * c ^ 2 + c ^ 4) * (a ^ 4 + 4 * a ^ 3 * b + 6 * a ^ 2 * b ^ 2 + 4 * a * b ^ 3 + b ^ 4)) + 3 / ((a ^ 2 * c ^ 2 + 2 * a * b ^ 2 * c + b ^ 4) * (a ^ 4 + 4 * a ^ 3 * c + 6 * a ^ 2 * c ^ 2 + 4 * a * c ^ 3 + c ^ 4)) + 3 / ((a ^ 4 + 2 * a ^ 2 * b * c + b ^ 2 * c ^ 2) * (b ^ 4 + 4 * b ^ 3 * c + 6 * b ^ 2 * c ^ 2 + 4 * b * c ^ 3 + c ^ 4))) - (8 * (a ^ 2 + b ^ 2 + c ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c) / (3 * (a ^ 2 + 2 * a * b + b ^ 2) * (a ^ 2 + 2 * a * c + c ^ 2) * (b ^ 2 + 2 * b * c + c ^ 2)))
  llm_factor sqrt(3 / ((a ^ 2 * b ^ 2 + 2 * a * b * c ^ 2 + c ^ 4) * (a ^ 4 + 4 * a ^ 3 * b + 6 * a ^ 2 * b ^ 2 + 4 * a * b ^ 3 + b ^ 4)) + 3 / ((a ^ 2 * c ^ 2 + 2 * a * b ^ 2 * c + b ^ 4) * (a ^ 4 + 4 * a ^ 3 * c + 6 * a ^ 2 * c ^ 2 + 4 * a * c ^ 3 + c ^ 4)) + 3 / ((a ^ 4 + 2 * a ^ 2 * b * c + b ^ 2 * c ^ 2) * (b ^ 4 + 4 * b ^ 3 * c + 6 * b ^ 2 * c ^ 2 + 4 * b * c ^ 3 + c ^ 4))) - (8 * (a ^ 2 + b ^ 2 + c ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c) / (3 * (a ^ 2 + 2 * a * b + b ^ 2) * (a ^ 2 + 2 * a * c + c ^ 2) * (b ^ 2 + 2 * b * c + c ^ 2))) = sqrt (3 / (((a ^ 2 + b * c) * (b ^ 2 + 2 * b * c + c ^ 2)) ^ 2) + 3 / (((a * b + c ^ 2) * (a ^ 2 + 2 * a * b + b ^ 2)) ^ 2) + 3 / (((a * c + b ^ 2) * (a ^ 2 + 2 * a * c + c ^ 2)) ^ 2)) - (8 * (a + b + c) ^ 2 / (3 * (a ^ 2 + 2 * a * b + b ^ 2) * (a ^ 2 + 2 * a * c + c ^ 2) * (b ^ 2 + 2 * b * c + c ^ 2)))
  llm_cancel_power 2
  scale Jensen_square_div_left_3vars (u := (((a ^ 2) + (b * c)) * (((b ^ 2) + ((2 * b) * c)) + (c ^ 2)))) (v := (((a * b) + (c ^ 2)) * (((a ^ 2) + ((2 * a) * b)) + (b ^ 2)))) (w := (((a * c) + (b ^ 2)) * (((a ^ 2) + ((2 * a) * c)) + (c ^ 2)))) (k := 3) (l := 0) (right := (8 * (a + b + c) ^ 2 / (3 * (a ^ 2 + 2 * a * b + b ^ 2) * (a ^ 2 + 2 * a * c + c ^ 2) * (b ^ 2 + 2 * b * c + c ^ 2))) ^ 2)
  llm_mul_expand 3 * (27 / ((a ^ 2 + b * c) * (b ^ 2 + 2 * b * c + c ^ 2) + (a * b + c ^ 2) * (a ^ 2 + 2 * a * b + b ^ 2) + (a * c + b ^ 2) * (a ^ 2 + 2 * a * c + c ^ 2)) ^ 2) - ((8 * (a + b + c) ^ 2 / (3 * (a ^ 2 + 2 * a * b + b ^ 2) * (a ^ 2 + 2 * a * c + c ^ 2) * (b ^ 2 + 2 * b * c + c ^ 2))) ^ 2) = 81 / (((a + b) ^ 2 * (a * b + c ^ 2) + (a + c) ^ 2 * (a * c + b ^ 2) + (a ^ 2 + b * c) * (b + c) ^ 2) ^ 2) - (64 * (a ^ 2 + b ^ 2 + c ^ 2 + 2 * a * b + 2 * b * c + 2 * c * a) ^ 2 / (9 * (a + b) ^ 4 * (a + c) ^ 4 * (b + c) ^ 4))
  llm_cancel_denom 81 / ((a + b) ^ 2 * (a * b + c ^ 2) + (a + c) ^ 2 * (a * c + b ^ 2) + (a ^ 2 + b * c) * (b + c) ^ 2) ^ 2 - (64 * (a ^ 2 + b ^ 2 + c ^ 2 + 2 * a * b + 2 * b * c + 2 * c * a) ^ 2 / (9 * (a + b) ^ 4 * (a + c) ^ 4 * (b + c) ^ 4)) = (81 * 9 * (a + b) ^ 4 * (a + c) ^ 4 * (b + c) ^ 4 - (64 * (a ^ 2 + b ^ 2 + c ^ 2 + 2 * a * b + 2 * b * c + 2 * c * a) ^ 2 * ((a + b) ^ 2 * (a * b + c ^ 2) + (a + c) ^ 2 * (a * c + b ^ 2) + (a ^ 2 + b * c) * (b + c) ^ 2) ^ 2)) / (((a + b) ^ 2 * (a * b + c ^ 2) + (a + c) ^ 2 * (a * c + b ^ 2) + (a ^ 2 + b * c) * (b + c) ^ 2) ^ 2 * 9 * (a + b) ^ 4 * (a + c) ^ 4 * (b + c) ^ 4)
  llm_cancel_power 1 / 2
  llm_simplify (729 * (a + b) ^ 4 * (a + c) ^ 4 * (b + c) ^ 4) ^ (1 / 2) - ((64 * (a ^ 2 + b ^ 2 + c ^ 2 + 2 * a * b + 2 * b * c + 2 * c * a) ^ 2 * ((a + b) ^ 2 * (a * b + c ^ 2) + (a + c) ^ 2 * (a * c + b ^ 2) + (a ^ 2 + b * c) * (b + c) ^ 2) ^ 2) ^ (1 / 2)) = 27 * (a + b) ^ 2 * (a + c) ^ 2 * (b + c) ^ 2 - (8 * ((a + b) ^ 2 * (c ^ 2 + a * b) + (a + c) ^ 2 * (b ^ 2 + a * c) + (b + c) ^ 2 * (a ^ 2 + b * c)) * (a ^ 2 + b ^ 2 + c ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c))
  llm_mul_expand 27 * (a + b) ^ 2 * (a + c) ^ 2 * (b + c) ^ 2 - (8 * ((a + b) ^ 2 * (c ^ 2 + a * b) + (a + c) ^ 2 * (b ^ 2 + a * c) + (b + c) ^ 2 * (a ^ 2 + b * c)) * (a ^ 2 + b ^ 2 + c ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c)) = 6 * a * b * c ^ 4 + 6 * a * c * b ^ 4 + 6 * b * c * a ^ 4 + 26 * a * b ^ 2 * c ^ 3 + 26 * a * b ^ 3 * c ^ 2 + 26 * b * a ^ 2 * c ^ 3 + 26 * b * a ^ 3 * c ^ 2 + 26 * c * a ^ 2 * b ^ 3 + 26 * c * a ^ 3 * b ^ 2 + 78 * a ^ 2 * b ^ 2 * c ^ 2 - (26 * a ^ 3 * b ^ 3) - (26 * a ^ 3 * c ^ 3) - (26 * b ^ 3 * c ^ 3) - (21 * a ^ 2 * b ^ 4) - (21 * a ^ 2 * c ^ 4) - (21 * a ^ 4 * b ^ 2) - (21 * a ^ 4 * c ^ 2) - (21 * b ^ 2 * c ^ 4) - (21 * b ^ 4 * c ^ 2) - (8 * a * b ^ 5) - (8 * a * c ^ 5) - (8 * b * a ^ 5) - (8 * b * c ^ 5) - (8 * c * a ^ 5) - (8 * c * b ^ 5)
  closed_by_sos

theorem P22 {a b c : ℝ} (ha : a ≥ 0) (hb : b ≥ 0) (hc : c ≥ 0) (h : a * b + b * c + c * a = 1) :
  9 / 4 ≤ 1 / ((8 / 5) * a ^ 2 + b * c) + 1 / ((8 / 5) * b ^ 2 + c * a) + 1 / ((8 / 5) * c ^ 2 + a * b) := by
  make_homogeneous 9 / 4 - ((a * b + b * c + c * a) / (8 * a ^ 2 / 5 + b * c)) - ((a * b + b * c + c * a) / (a * b + 8 * c ^ 2 / 5)) - ((a * b + b * c + c * a) / (a * c + 8 * b ^ 2 / 5)) ≤ 0
  llm_cancel_denom (9 / 4) - ((a * b + b * c + c * a) / (a * c + 8 * b ^ 2 / 5) + (a * b + b * c + c * a) / (a * b + 8 * c ^ 2 / 5) + (a * b + b * c + c * a) / (8 * a ^ 2 / 5 + b * c)) = (9 * (8 * a ^ 2 + 5 * b * c) * (8 * b ^ 2 + 5 * a * c) * (8 * c ^ 2 + 5 * a * b) - (4 * (8 * a ^ 2 + 5 * b * c) * (8 * b ^ 2 + 5 * a * c) * (5 * a * b + 5 * a * c + 5 * b * c)) - (4 * (8 * a ^ 2 + 5 * b * c) * (8 * c ^ 2 + 5 * a * b) * (5 * a * b + 5 * a * c + 5 * b * c)) - (4 * (8 * b ^ 2 + 5 * a * c) * (8 * c ^ 2 + 5 * a * b) * (5 * a * b + 5 * a * c + 5 * b * c))) / (4 * (8 * a ^ 2 + 5 * b * c) * (8 * b ^ 2 + 5 * a * c) * (8 * c ^ 2 + 5 * a * b))
  sym_pqr_method 7 * a * b ^ 2 * (-(680 * b ^ 3) - (200 * a ^ 3) - (361 * a * b ^ 2) - (280 * b * a ^ 2)) ≤ 0
  llm_simplify 7 * a * b ^ 2 * (-(680 * b ^ 3) - 200 * a ^ 3 - 361 * a * b ^ 2 - 280 * b * a ^ 2) - (0) = -(1400 * a ^ 4 * b ^ 2) - (7 * 280 * a ^ 3 * b ^ 3) - (7 * 361 * a ^ 2 * b ^ 4) - (7 * 680 * a * b ^ 5)
  try close

theorem P23 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) : (a + b + c) / (a * b + b * c + c * a) + (a * b * c * (a + b + c)) / ((a ^ 3 + b ^ 3 + c ^ 3) * (a * b + b * c + c * a)) ≤ a / (b ^ 2 + c ^ 2) + b / (a ^ 2 + c ^ 2) + c / (a ^ 2 + b ^ 2) := by
  intro_by_homogeneous a + b + c = 3
  scale Titu_variant1_right_3vars (u1 := a) (u2 := b) (u3 := c) (v1 := ((b ^ 2) + (c ^ 2))) (v2 := ((a ^ 2) + (c ^ 2))) (v3 := ((a ^ 2) + (b ^ 2))) (k := 1) (l := 0) (left := (a + b + c) / (a * b + b * c + c * a) + a * b * c * (a + b + c) / ((a ^ 3 + b ^ 3 + c ^ 3) * (a * b + b * c + c * a)))
  llm_simplify (a + b + c) / (a * b + b * c + c * a) + a * b * c * (a + b + c) / ((a ^ 3 + b ^ 3 + c ^ 3) * (a * b + b * c + c * a)) - ((a + b + c) ^ 2 / (a * (b ^ 2 + c ^ 2) + b * (a ^ 2 + c ^ 2) + c * (a ^ 2 + b ^ 2))) = (a + b + c) / (a * b + a * c + b * c) + a * b * c * (a + b + c) / ((a ^ 3 + b ^ 3 + c ^ 3) * (a * b + a * c + b * c)) - ((a + b + c) / (a ^ 2 + b ^ 2 + c ^ 2 - ((a ^ 3 + b ^ 3 + c ^ 3) / (a + b + c))))
  llm_cancel_factor ((a + b + c) / (a * b + a * c + b * c) + a * b * c * (a + b + c) / ((a ^ 3 + b ^ 3 + c ^ 3) * (a * b + a * c + b * c))) - ((a + b + c) / (a ^ 2 + b ^ 2 + c ^ 2 - (a ^ 3 + b ^ 3 + c ^ 3) / (a + b + c))) = (a) * (b) * (c) * (1 / (a ^ 3 + b ^ 3 + c ^ 3)) * (1 / (a * b + a * c + b * c)) * (1 / (a ^ 2 * b + a ^ 2 * c + a * b ^ 2 + a * c ^ 2 + b ^ 2 * c + b * c ^ 2)) * (a + b + c) * (a * b ^ 2 + a * c ^ 2 + b * a ^ 2 + b * c ^ 2 + c * a ^ 2 + c * b ^ 2 - (3 * a ^ 3) - (3 * b ^ 3) - (3 * c ^ 3))
  llm_frac_together a * b ^ 2 + a * c ^ 2 + b * a ^ 2 + b * c ^ 2 + c * a ^ 2 + c * b ^ 2 - (3 * c ^ 3 + 3 * b ^ 3 + 3 * a ^ 3) = a * (b ^ 2 + c ^ 2) + b * (a ^ 2 + c ^ 2) + c * (a ^ 2 + b ^ 2) - (3 * (a ^ 3 + b ^ 3 + c ^ 3))
  llm_cancel_factor a * (b ^ 2 + c ^ 2) + b * (a ^ 2 + c ^ 2) + c * (a ^ 2 + b ^ 2) - (3 * (a ^ 3 + b ^ 3 + c ^ 3)) = (a ^ 2 + b ^ 2 + c ^ 2) * (a + b + c) - (4 * (a ^ 3 + b ^ 3 + c ^ 3))
  sym_equal_value 0 ≤ 27 / 2 + 3 * c ^ 3 + 9 * c ^ 2 / 2 - (18 * c)

theorem P24 {a b c : ℝ} (ha : a ≥ 0) (hb : b ≥ 0) (hc : c ≥ 0) :
  3 / (a * b + b * c + c * a) + 81 * a ^ 2 * b ^ 2 * c ^ 2 / (2 * (a ^ 2 + b ^ 2 + c ^ 2) ^ 4) ≤ 1 / (a ^ 2 + b * c) + 1 / (b ^ 2 + c * a) + 1 / (c ^ 2 + a * b) := by
  llm_cancel_denom (3 / (a * b + b * c + c * a) + 81 * a ^ 2 * b ^ 2 * c ^ 2 / (2 * (a ^ 2 + b ^ 2 + c ^ 2) ^ 4)) - (1 / (a ^ 2 + b * c) + 1 / (b ^ 2 + c * a) + 1 / (c ^ 2 + a * b)) = (6 * (a ^ 2 + b ^ 2 + c ^ 2) ^ 4 * (a ^ 2 + b * c) * (b ^ 2 + a * c) * (c ^ 2 + a * b) + 81 * a ^ 2 * b ^ 2 * c ^ 2 * (a ^ 2 + b * c) * (b ^ 2 + a * c) * (c ^ 2 + a * b) * (a * b + a * c + b * c) - (2 * (a ^ 2 + b ^ 2 + c ^ 2) ^ 4 * (a * b + a * c + b * c) * ((a ^ 2 + b * c) * (b ^ 2 + a * c) + (a ^ 2 + b * c) * (c ^ 2 + a * b) + (b ^ 2 + a * c) * (c ^ 2 + a * b)))) / (2 * (a ^ 2 + b ^ 2 + c ^ 2) ^ 4 * (a ^ 2 + b * c) * (b ^ 2 + a * c) * (c ^ 2 + a * b) * (a * b + a * c + b * c))
  closed_by_sos

theorem P25 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0):
  2 * (a ^ 2 + b ^ 2 + c ^ 2) / (a + b + c) ≤ a ^ 2 * (b + c) / (b ^ 2 + b * c + c ^ 2) + b ^ 2 * (c + a) / (c ^ 2 + c * a + a ^ 2) + c ^ 2 * (a + b) / (a ^ 2 + a * b + b ^ 2) := by
  intro_by_homogeneous a + b + c = 3
  llm_mul_expand 2 * (a ^ 2 + b ^ 2 + c ^ 2) / (a + b + c) - (a ^ 2 * (b + c) / (b ^ 2 + b * c + c ^ 2) + b ^ 2 * (c + a) / (c ^ 2 + c * a + a ^ 2) + c ^ 2 * (a + b) / (a ^ 2 + a * b + b ^ 2)) = 2 * (a ^ 2 + b ^ 2 + c ^ 2) / (a + b + c) - ((c ^ 2 * a + c ^ 2 * b) / (a ^ 2 + a * b + b ^ 2) + (b ^ 2 * c + b ^ 2 * a) / (a ^ 2 + a * c + c ^ 2) + (a ^ 2 * b + a ^ 2 * c) / (b ^ 2 + b * c + c ^ 2))
  llm_cancel_denom (2 * (a ^ 2 + b ^ 2 + c ^ 2) / (a + b + c)) - ((c ^ 2 * a + c ^ 2 * b) / (a ^ 2 + a * b + b ^ 2) + (b ^ 2 * c + b ^ 2 * a) / (a ^ 2 + a * c + c ^ 2) + (a ^ 2 * b + a ^ 2 * c) / (b ^ 2 + b * c + c ^ 2)) = ((a ^ 2 + b ^ 2 + a * b) * (a ^ 2 + c ^ 2 + a * c) * (b ^ 2 + c ^ 2 + b * c) * (2 * a ^ 2 + 2 * b ^ 2 + 2 * c ^ 2) - ((a + b + c) * ((a * b ^ 2 + c * b ^ 2) * (a ^ 2 + b ^ 2 + a * b) * (b ^ 2 + c ^ 2 + b * c) + (a * c ^ 2 + b * c ^ 2) * (a ^ 2 + c ^ 2 + a * c) * (b ^ 2 + c ^ 2 + b * c) + (b * a ^ 2 + c * a ^ 2) * (a ^ 2 + b ^ 2 + a * b) * (a ^ 2 + c ^ 2 + a * c)))) / ((a + b + c) * (a ^ 2 + b ^ 2 + a * b) * (a ^ 2 + c ^ 2 + a * c) * (b ^ 2 + c ^ 2 + b * c))
  llm_cancel_factor ((a ^ 2 + b ^ 2 + a * b) * (a ^ 2 + c ^ 2 + a * c) * (b ^ 2 + c ^ 2 + b * c) * (2 * a ^ 2 + 2 * b ^ 2 + 2 * c ^ 2)) - ((a + b + c) * ((a * b ^ 2 + c * b ^ 2) * (a ^ 2 + b ^ 2 + a * b) * (b ^ 2 + c ^ 2 + b * c) + (a * c ^ 2 + b * c ^ 2) * (a ^ 2 + c ^ 2 + a * c) * (b ^ 2 + c ^ 2 + b * c) + (b * a ^ 2 + c * a ^ 2) * (a ^ 2 + b ^ 2 + a * b) * (a ^ 2 + c ^ 2 + a * c))) = (a ^ 2 + b ^ 2 + c ^ 2 + a * b + a * c + b * c) * (a ^ 2 * b ^ 4 + a ^ 2 * c ^ 4 + a ^ 4 * b ^ 2 + a ^ 4 * c ^ 2 + b ^ 2 * c ^ 4 + b ^ 4 * c ^ 2 - (a * b ^ 5) - (a * c ^ 5) - (b * a ^ 5) - (b * c ^ 5) - (c * a ^ 5) - (c * b ^ 5))
  llm_cancel_factor a ^ 2 * b ^ 4 + a ^ 2 * c ^ 4 + a ^ 4 * b ^ 2 + a ^ 4 * c ^ 2 + b ^ 2 * c ^ 4 + b ^ 4 * c ^ 2 - (c * b ^ 5 + c * a ^ 5 + b * c ^ 5 + b * a ^ 5 + a * c ^ 5 + a * b ^ 5) = a ^ 2 * b ^ 2 * (b ^ 2 + a ^ 2) + a ^ 2 * c ^ 2 * (c ^ 2 + a ^ 2) + b ^ 2 * c ^ 2 * (c ^ 2 + b ^ 2) - (b * c * (b ^ 4 + c ^ 4)) - (a * c * (a ^ 4 + c ^ 4)) - (a * b * (a ^ 4 + b ^ 4))
  sym_pqr_method 2 * a * b * (a * b * (a ^ 2 + b ^ 2) - (a ^ 4) - (b ^ 4)) ≤ 0
  llm_cancel_factor 2 * a * b * (a * b * (a ^ 2 + b ^ 2) - a ^ 4 - b ^ 4) - (0) = -2 * a * b * (a - (b)) ^ 2 * (b ^ 2 + a * b + a ^ 2)

theorem P26 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) :
  2 * sqrt((a ^ 3 + b ^ 3 + c ^ 3) / (a + b + c)) ≤ a ^ 2 * (b + c) / (b ^ 2 + b * c + c ^ 2) + b ^ 2 * (c + a) / (c ^ 2 + c * a + a ^ 2) + c ^ 2 * (a + b) / (a ^ 2 + a * b + b ^ 2) := by
  sorry

theorem P27 {a b c : ℝ} (ha : a ≥ 0) (hb : b ≥ 0) (hc : c ≥ 0) (h : a + b + c = 1) :
  2 * sqrt(a ^ 2 * b + b ^ 2 * c + c ^ 2 * a) + a * b + b * c + c * a ≤ 1 := by
  make_homogeneous a * b + a * c + b * c + 2 * sqrt (a + b + c) * sqrt (a * c ^ 2 + b * a ^ 2 + c * b ^ 2) - ((a + b + c) ^ 2) ≤ 0
  llm_exp_expand a * b + a * c + b * c + 2 * sqrt(a + b + c) * sqrt(a * c ^ 2 + b * a ^ 2 + c * b ^ 2) - ((a + b + c) ^ 2) = 2 * sqrt ((a + b + c) * (a * c ^ 2 + b * a ^ 2 + c * b ^ 2)) - (a * b) - (b * c) - (c * a) - (a ^ 2 + b ^ 2 + c ^ 2)
  llm_cancel_power 2
  llm_mul_expand (2 * sqrt((a + b + c) * (a * c ^ 2 + b * a ^ 2 + c * b ^ 2))) ^ 2 - ((a ^ 2 + b ^ 2 + c ^ 2 + c * a + b * c + a * b) ^ 2) = a ^ 2 * b ^ 2 + a ^ 2 * c ^ 2 + b ^ 2 * c ^ 2 + 2 * a * c ^ 3 + 2 * b * a ^ 3 + 2 * c * b ^ 3 - (a ^ 4) - (b ^ 4) - (c ^ 4) - (2 * a * b ^ 3) - (2 * b * c ^ 3) - (2 * c * a ^ 3)
  scale Muirhead_Req0_onestep_left_3vars (u := b) (v := a) (w := c) (p := 2) (q := 2) (k := 1) (l := (((2 * a) * (c ^ 3)) + (((2 * b) * (a ^ 3)) + ((2 * c) * (b ^ 3))))) (right := 2 * c * a ^ 3 + 2 * b * c ^ 3 + 2 * a * b ^ 3 + c ^ 4 + b ^ 4 + a ^ 4)
  llm_frac_reduce b ^ 3 * a + a ^ 3 * c + c ^ 3 * b + 2 * a * c ^ 3 + 2 * b * a ^ 3 + 2 * c * b ^ 3 - (2 * c * a ^ 3 + 2 * b * c ^ 3 + 2 * a * b ^ 3 + c ^ 4 + b ^ 4 + a ^ 4) = 2 * a * c ^ 3 + 2 * b * a ^ 3 + 2 * c * b ^ 3 - (a ^ 4) - (b ^ 4) - (c ^ 4) - (a * b ^ 3) - (b * c ^ 3) - (c * a ^ 3)
  scale Vasc_left_3vars (u := c) (v := a) (w := b) (k := 2) (l := 0) (right := c * a ^ 3 + b * c ^ 3 + a * b ^ 3 + c ^ 4 + b ^ 4 + a ^ 4)
  llm_cancel_denom 2 * (c ^ 2 + a ^ 2 + b ^ 2) ^ 2 / 3 - (c * a ^ 3 + b * c ^ 3 + a * b ^ 3 + c ^ 4 + b ^ 4 + a ^ 4) = (2 * (c ^ 2 + a ^ 2 + b ^ 2) ^ 2 - (3 * (c * a ^ 3 + b * c ^ 3 + a * b ^ 3 + c ^ 4 + b ^ 4 + a ^ 4))) / (3)
  llm_simplify 2 * (c ^ 2 + a ^ 2 + b ^ 2) ^ 2 - (3 * (c * a ^ 3 + b * c ^ 3 + a * b ^ 3 + c ^ 4 + b ^ 4 + a ^ 4)) = 4 * c ^ 2 * a ^ 2 + 4 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 2 - (c ^ 4) - (a ^ 4) - (b ^ 4) - (3 * c * a ^ 3) - (3 * b * c ^ 3) - (3 * a * b ^ 3)
  scale Muirhead_Req0_onestep_left_3vars (u := a) (v := c) (w := b) (p := 2) (q := 2) (k := 4) (l := 0) (right := 3 * a * b ^ 3 + 3 * b * c ^ 3 + 3 * c * a ^ 3 + b ^ 4 + a ^ 4 + c ^ 4)
  llm_mul_expand 4 * (a ^ 3 * c + c ^ 3 * b + b ^ 3 * a) - (3 * a * b ^ 3 + 3 * b * c ^ 3 + 3 * c * a ^ 3 + b ^ 4 + a ^ 4 + c ^ 4) = a ^ 3 * c + c ^ 3 * b + b ^ 3 * a - (b ^ 4) - (a ^ 4) - (c ^ 4)
  scale Muirhead_Qeq1Req0_left_3vars (u := a) (v := c) (w := b) (p := 3) (k := 1) (l := 0) (right := c ^ 4 + a ^ 4 + b ^ 4)
  try close

theorem P28 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) (h : a ^ 2 + b ^ 2 + c ^ 2 ≥ 1) :
  sqrt 3 / 2 ≤ a ^ 3 / (b ^ 2 + c ^ 2) + b ^ 3 / (a ^ 2 + c ^ 2) + c ^ 3 / (a ^ 2 + b ^ 2) := by
  make_homogeneous sqrt (3) * sqrt (a ^ 2 + b ^ 2 + c ^ 2) / 2 - (c ^ 3 / (a ^ 2 + b ^ 2)) - (b ^ 3 / (a ^ 2 + c ^ 2)) - (a ^ 3 / (b ^ 2 + c ^ 2)) ≤ 0
  scale Titu_variant2_right_3vars (u1 := a) (u2 := b) (u3 := c) (v1 := ((b ^ 2) + (c ^ 2))) (v2 := ((a ^ 2) + (c ^ 2))) (v3 := ((a ^ 2) + (b ^ 2))) (r := 3) (k := 1) (l := 0) (left := sqrt 3 * sqrt(a ^ 2 + b ^ 2 + c ^ 2) / 2)
  llm_exp_expand sqrt 3 * sqrt(a ^ 2 + b ^ 2 + c ^ 2) / 2 - ((a ^ 2 + b ^ 2 + c ^ 2) ^ 2 / (a * (b ^ 2 + c ^ 2) + b * (a ^ 2 + c ^ 2) + c * (a ^ 2 + b ^ 2))) = (3 * (a ^ 2 + b ^ 2 + c ^ 2)) ^ (1 / ((2))) / (2) - ((a ^ 2 + b ^ 2 + c ^ 2) ^ 2 / (a * (b ^ 2 + c ^ 2) + b * (a ^ 2 + c ^ 2) + c * (a ^ 2 + b ^ 2)))
  llm_cancel_denom (3 * (a ^ 2 + b ^ 2 + c ^ 2)) ^ (1 / 2) / 2 - ((a ^ 2 + b ^ 2 + c ^ 2) ^ 2 / (a * (b ^ 2 + c ^ 2) + b * (a ^ 2 + c ^ 2) + c * (a ^ 2 + b ^ 2))) = (sqrt (3 * (a ^ 2 + b ^ 2 + c ^ 2)) * (a * (b ^ 2 + c ^ 2) + b * (a ^ 2 + c ^ 2) + c * (a ^ 2 + b ^ 2)) - (2 * (a ^ 2 + b ^ 2 + c ^ 2) ^ 2)) / (2 * (a * (b ^ 2 + c ^ 2) + b * (a ^ 2 + c ^ 2) + c * (a ^ 2 + b ^ 2)))
  llm_cancel_power 2
  llm_frac_reduce (sqrt(3 * (a ^ 2 + b ^ 2 + c ^ 2)) * (a * (b ^ 2 + c ^ 2) + b * (a ^ 2 + c ^ 2) + c * (a ^ 2 + b ^ 2))) ^ 2 - ((2 * (a ^ 2 + b ^ 2 + c ^ 2) ^ 2) ^ 2) = (a ^ 2 + b ^ 2 + c ^ 2) * (3 * (a * (b ^ 2 + c ^ 2) + b * (a ^ 2 + c ^ 2) + c * (a ^ 2 + b ^ 2)) ^ 2 - (4 * (a ^ 2 + b ^ 2 + c ^ 2) ^ 3))
  llm_cancel_factor (a ^ 2 + b ^ 2 + c ^ 2) * (3 * (a * (b ^ 2 + c ^ 2) + b * (a ^ 2 + c ^ 2) + c * (a ^ 2 + b ^ 2)) ^ 2 - 4 * (a ^ 2 + b ^ 2 + c ^ 2) ^ 3) - (0) = (a ^ 2 + b ^ 2 + c ^ 2) * (3 * (a * (b ^ 2 + c ^ 2) + b * (a ^ 2 + c ^ 2) + c * (a ^ 2 + b ^ 2)) ^ 2 - (4 * (a ^ 2 + b ^ 2 + c ^ 2) ^ 3))
  scale Cauchy_Schwarz_normal_left_3vars (u1 := (a * ((b ^ 2) + (c ^ 2)))) (u2 := (b * ((a ^ 2) + (c ^ 2)))) (u3 := (c * ((a ^ 2) + (b ^ 2)))) (v1 := 1) (v2 := 1) (v3 := 1) (k := 3) (l := 0) (right := 4 * (a ^ 2 + b ^ 2 + c ^ 2) ^ 3)
  llm_cancel_factor 3 * ((a * (b ^ 2 + c ^ 2)) ^ 2 + (b * (a ^ 2 + c ^ 2)) ^ 2 + (c * (a ^ 2 + b ^ 2)) ^ 2) * 3 - (4 * (a ^ 2 + b ^ 2 + c ^ 2) ^ 3) = 30 * a ^ 2 * b ^ 2 * c ^ 2 - (4 * a ^ 6) - (4 * b ^ 6) - (4 * c ^ 6) - (3 * a ^ 4 * b ^ 2) - (3 * a ^ 4 * c ^ 2) - (3 * b ^ 4 * a ^ 2) - (3 * b ^ 4 * c ^ 2) - (3 * c ^ 4 * a ^ 2) - (3 * c ^ 4 * b ^ 2)
  scale Jensen_pow_Rgt1_right_3vars (u := c) (v := b) (w := a) (r := 6) (k := 4) (l := (((((((3 * (c ^ 4)) * (b ^ 2)) + ((3 * (c ^ 4)) * (a ^ 2))) + ((3 * (b ^ 4)) * (c ^ 2))) + ((3 * (b ^ 4)) * (a ^ 2))) + ((3 * (a ^ 4)) * (c ^ 2))) + ((3 * (a ^ 4)) * (b ^ 2)))) (left := 30 * a ^ 2 * b ^ 2 * c ^ 2)
  scale AM_GM_square_right_2vars (u := b) (v := a) (k := (3 * (c ^ 4))) (l := ((12 * ((((c + b) + a) / 3) ^ 6)) + ((((3 * (b ^ 4)) * (c ^ 2)) + ((3 * (b ^ 4)) * (a ^ 2))) + (((3 * (a ^ 4)) * (c ^ 2)) + ((3 * (a ^ 4)) * (b ^ 2)))))) (left := 30 * a ^ 2 * b ^ 2 * c ^ 2)
  scale AM_GM_square_right_2vars (u := (b ^ 2)) (v := (a ^ 2)) (k := (3 * (c ^ 2))) (l := ((((((6 * (c ^ 4)) * b) * a) + (12 * ((((c + b) + a) / 3) ^ 6))) + ((3 * (b ^ 4)) * (a ^ 2))) + ((3 * (a ^ 4)) * (b ^ 2)))) (left := 30 * a ^ 2 * b ^ 2 * c ^ 2)
  llm_cancel_denom 30 * a ^ 2 * b ^ 2 * c ^ 2 - (6 * c ^ 2 * b ^ 2 * a ^ 2 + 6 * c ^ 4 * b * a + 12 * ((c + b + a) / 3) ^ 6 + 3 * b ^ 4 * a ^ 2 + 3 * a ^ 4 * b ^ 2) = 24 * a ^ 2 * b ^ 2 * c ^ 2 - (3 * a ^ 4 * b ^ 2) - (3 * b ^ 4 * a ^ 2) - (12 * (c + b + a) ^ 6 / (3) ^ 6) - (6 * c ^ 4 * b * a)
  scale AM_GM_square_right_2vars (u := ((b ^ 2) * a)) (v := ((a ^ 2) * b)) (k := 3) (l := ((((6 * (c ^ 4)) * b) * a) + ((12 * (((c + b) + a) ^ 6)) / 729))) (left := 24 * a ^ 2 * b ^ 2 * c ^ 2)
  scale AM_GM_square_right_2vars (u := (b * a)) (v := (c ^ 2)) (k := (6 * (b * a))) (l := ((12 * (((c + b) + a) ^ 6)) / 729)) (left := 24 * a ^ 2 * b ^ 2 * c ^ 2)
  llm_frac_apart 24 * a ^ 2 * b ^ 2 * c ^ 2 - (12 * b * a * b * a * c ^ 2 + 12 * (c + b + a) ^ 6 / 729) = 12 * -((c + b + a) ^ 6 / (729)) + 12 * a ^ 2 * b ^ 2 * c ^ 2
  scale weighted_AM_GM_normal_left_3vars (u := a) (v := b) (w := c) (i1 := 2) (i2 := 2) (i3 := 2) (k := 12) (l := (12 * -(((((c + b) + a) ^ 6) / 729)))) (right := 0)
  try close

theorem P29 {a b c : ℝ} (hx : a ≥ 0) (hy : b ≥ 0) (hz : c ≥ 0) (h : a ^ 2 + b ^ 2 + c ^ 2 = 1) :
  1 ≤ a + b + c - a * b * c := by
  make_homogeneous (a ^ 2 + b ^ 2 + c ^ 2) ^ (3 / 2) + a * b * c - (a * (a ^ 2 + b ^ 2 + c ^ 2)) - (b * (a ^ 2 + b ^ 2 + c ^ 2)) - (c * (a ^ 2 + b ^ 2 + c ^ 2)) ≤ 0
  llm_simplify (a ^ 2 + b ^ 2 + c ^ 2) ^ (3 / 2) + a * b * c - (c * (a ^ 2 + b ^ 2 + c ^ 2) + b * (a ^ 2 + b ^ 2 + c ^ 2) + a * (a ^ 2 + b ^ 2 + c ^ 2)) = 1 + a * b * c - (a) - (b) - (c)
  scale AM_GM_square_left_2vars (u := b) (v := c) (k := a) (l := 1) (right := c + b + a)
  llm_simplify a * (b ^ 2 + c ^ 2) / 2 + 1 - (c + b + a) = 1 - (a * (1 + a ^ 2) / 2) - (c) - (b)
  scale AM_GM_square_right_2vars (u := 1) (v := a) (k := (a * (1 / 2))) (l := (b + c)) (left := 1)
  llm_cancel_denom 1 - (2 * a * (1 / 2) * a + b + c) = 1 - (a ^ 2) - (b) - (c)
  try close

theorem P30 {a b c : ℝ} (hx : a ≥ 0) (hy : b ≥ 0) (hz : c ≥ 0) (h : a ^ 2 + b ^ 2 + c ^ 2 = 1) :
  a + b + c - a * b * c ≤ 8 * sqrt(3) / 9 := by
  make_homogeneous a * (a ^ 2 + b ^ 2 + c ^ 2) + b * (a ^ 2 + b ^ 2 + c ^ 2) + c * (a ^ 2 + b ^ 2 + c ^ 2) - (8 * sqrt (3) * (a ^ 2 + b ^ 2 + c ^ 2) ^ (3 / 2) / 9) - (a * b * c) ≤ 0
  llm_simplify a * (a ^ 2 + b ^ 2 + c ^ 2) + b * (a ^ 2 + b ^ 2 + c ^ 2) + c * (a ^ 2 + b ^ 2 + c ^ 2) - (a * b * c + 8 * sqrt 3 * (a ^ 2 + b ^ 2 + c ^ 2) ^ (3 / 2) / 9) = a + b + c - (8 * sqrt (3) / (9)) - (a * b * c)
  llm_simplify a + b + c - (a * b * c + 8 * sqrt 3 / 9) = a * (1 - (b * c)) + b * 1 + c * 1 - (8 * sqrt (3) / (9))
  scale Cauchy_Schwarz_sqrt_left_2vars (u1 := a) (u2 := 1) (v1 := (1 - (b * c))) (v2 := (b + c)) (k := 1) (l := 0) (right := 8 * sqrt 3 / 9)
  llm_cancel_power 2
  llm_cancel_denom (sqrt(a ^ 2 + 1) * sqrt((1 - b * c) ^ 2 + (b + c) ^ 2)) ^ 2 - ((8 * sqrt 3 / 9) ^ 2) = 1 + a ^ 2 + (a ^ 2 + 1) * b ^ 2 + (a ^ 2 + 1) * c ^ 2 + (a ^ 2 + 1) * (b * c) ^ 2 - (64 / (27))
  llm_simplify 1 + a ^ 2 + (a ^ 2 + 1) * b ^ 2 + (a ^ 2 + 1) * c ^ 2 + (a ^ 2 + 1) * (b * c) ^ 2 - (64 / 27) = 2 + a ^ 2 * b ^ 2 + a ^ 2 * c ^ 2 + (a ^ 2 + 1) * (b * c) ^ 2 - (64 / (27))
  llm_mul_expand 2 + a ^ 2 * b ^ 2 + a ^ 2 * c ^ 2 + (a ^ 2 + 1) * (b * c) ^ 2 - (64 / 27) = 2 + a ^ 2 * b ^ 2 + a ^ 2 * c ^ 2 + b ^ 2 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 2 - (64 / (27))
  scale Muirhead_Req0_onestep_left_3vars (u := b) (v := a) (w := c) (p := 2) (q := 2) (k := 1) (l := ((((a ^ 2) * (b ^ 2)) * (c ^ 2)) + 2)) (right := 64 / 27)
  scale Vasc_left_3vars (u := b) (v := a) (w := c) (k := 1) (l := ((((a ^ 2) * (b ^ 2)) * (c ^ 2)) + 2)) (right := 64 / 27)
  llm_simplify (b ^ 2 + a ^ 2 + c ^ 2) ^ 2 / 3 + a ^ 2 * b ^ 2 * c ^ 2 + 2 - (64 / 27) = a ^ 2 * b ^ 2 * c ^ 2 - (1 / ((27)))
  llm_cancel_denom a ^ 2 * b ^ 2 * c ^ 2 - (1 / 27) = (27 * a ^ 2 * b ^ 2 * c ^ 2 - (1)) / (27)
  llm_simplify 27 * a ^ 2 * b ^ 2 * c ^ 2 - (1) = 27 * a ^ 2 * b ^ 2 * c ^ 2 - (a ^ 2) - (b ^ 2) - (c ^ 2)
  sym_pqr_method 15 * a ^ 2 * b ^ 4 - (a ^ 6) - (8 * b ^ 6) - (6 * a ^ 4 * b ^ 2) ≤ 0
  llm_simplify 15 * a ^ 2 * b ^ 4 - a ^ 6 - 8 * b ^ 6 - 6 * a ^ 4 * b ^ 2 - (0) = 15 * a ^ 2 * b ^ 4 - (a ^ 6) - (8 * b ^ 6) - (6 * a ^ 4 * b ^ 2)
  scale weighted_AM_GM_normal_right_3vars (u := ((a ^ 4) * (b ^ 2))) (v := (b ^ 6)) (w := (a ^ 6)) (i1 := 6) (i2 := 8) (i3 := 1) (k := 1) (l := 0) (left := 15 * a ^ 2 * b ^ 4)
  sym_simplify 15 * a ^ 2 * b ^ 4  -  15 * ((a ^ 4 * b ^ 2) ^ 6 * (b ^ 6) ^ 8 * a ^ 6) ^ (1 / 15) = 0
  try close
