import Mathlib
import Math
import Smt

open Real

set_option maxHeartbeats 0
set_option maxRecDepth 80000

set_option linter.unusedVariables false
set_option by_axiom true
#eval use_axiom

macro_rules | `($x / $y)   => `(HDiv.hDiv ($x : ℝ) ($y : ℝ))

theorem P61 {a b c d : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) (hd : d > 0) (h : a + b + c + d = 4) : 1 ≤ a ^ 2 / (b ^ 2 + 3) + b ^ 2 / (c ^ 2 + 3) + c ^ 2 / (d ^ 2 + 3) + d ^ 2 / (a ^ 2 + 3) := by
  make_homogeneous 1 - (d ^ 2 / (a ^ 2 + 3 * (a / 4 + b / 4 + c / 4 + d / 4) ^ 2)) - (a ^ 2 / (b ^ 2 + 3 * (a / 4 + b / 4 + c / 4 + d / 4) ^ 2)) - (b ^ 2 / (c ^ 2 + 3 * (a / 4 + b / 4 + c / 4 + d / 4) ^ 2)) - (c ^ 2 / (d ^ 2 + 3 * (a / 4 + b / 4 + c / 4 + d / 4) ^ 2)) ≤ 0
  scale Titu_variant1_right_4vars (u1 := (c ^ 2)) (u2 := (b ^ 2)) (u3 := (a ^ 2)) (u4 := (d ^ 2)) (v1 := ((d ^ 2) + (3 * (((((a / 4) + (b / 4)) + (c / 4)) + (d / 4)) ^ 2)))) (v2 := ((c ^ 2) + (3 * (((((a / 4) + (b / 4)) + (c / 4)) + (d / 4)) ^ 2)))) (v3 := ((b ^ 2) + (3 * (((((a / 4) + (b / 4)) + (c / 4)) + (d / 4)) ^ 2)))) (v4 := ((a ^ 2) + (3 * (((((a / 4) + (b / 4)) + (c / 4)) + (d / 4)) ^ 2)))) (k := 1) (l := 0) (left := 1)
  llm_frac_apart 1 - ((c ^ 2 + b ^ 2 + a ^ 2 + d ^ 2) ^ 2 / (c ^ 2 * (d ^ 2 + 3 * (a / 4 + b / 4 + c / 4 + d / 4) ^ 2) + b ^ 2 * (c ^ 2 + 3 * (a / 4 + b / 4 + c / 4 + d / 4) ^ 2) + a ^ 2 * (b ^ 2 + 3 * (a / 4 + b / 4 + c / 4 + d / 4) ^ 2) + d ^ 2 * (a ^ 2 + 3 * (a / 4 + b / 4 + c / 4 + d / 4) ^ 2))) = 1 - (16 * (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) ^ 2 / (a ^ 2 * (16 * b ^ 2 + 3 * (a + b + c + d) ^ 2) + b ^ 2 * (16 * c ^ 2 + 3 * (a + b + c + d) ^ 2) + c ^ 2 * (16 * d ^ 2 + 3 * (a + b + c + d) ^ 2) + d ^ 2 * (16 * a ^ 2 + 3 * (a + b + c + d) ^ 2)))
  llm_simplify 1 - (16 * (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) ^ 2 / (a ^ 2 * (16 * b ^ 2 + 3 * (a + b + c + d) ^ 2) + b ^ 2 * (16 * c ^ 2 + 3 * (a + b + c + d) ^ 2) + c ^ 2 * (16 * d ^ 2 + 3 * (a + b + c + d) ^ 2) + d ^ 2 * (16 * a ^ 2 + 3 * (a + b + c + d) ^ 2))) = (16 * (a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * d ^ 2 + d ^ 2 * a ^ 2) + 3 * (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) * (a + b + c + d) ^ 2 - (16 * (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) ^ 2)) / (3 * (a + b + c + d) ^ 2 * (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) + 16 * (a ^ 2 * b ^ 2 + a ^ 2 * d ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * d ^ 2))
  llm_frac_apart (16 * (a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * d ^ 2 + d ^ 2 * a ^ 2) + 3 * (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) * (a + b + c + d) ^ 2 - 16 * (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) ^ 2) / (3 * (a + b + c + d) ^ 2 * (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) + 16 * (a ^ 2 * b ^ 2 + a ^ 2 * d ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * d ^ 2)) - (0) = 16 * (a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * d ^ 2 + d ^ 2 * a ^ 2) / (3 * (a + b + c + d) ^ 2 * (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) + 16 * (a ^ 2 * b ^ 2 + a ^ 2 * d ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * d ^ 2)) + 3 * (a + b + c + d) ^ 2 * (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) / (3 * (a + b + c + d) ^ 2 * (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) + 16 * (a ^ 2 * b ^ 2 + a ^ 2 * d ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * d ^ 2)) - (16 * (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) ^ 2 / (3 * (a + b + c + d) ^ 2 * (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) + 16 * (a ^ 2 * b ^ 2 + a ^ 2 * d ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * d ^ 2)))
  scale Cauchy_Schwarz_normal_left_2vars (u1 := 1) (u2 := 1) (v1 := (a + c)) (v2 := (b + d)) (k := ((1 / (((3 * ((((a + b) + c) + d) ^ 2)) * ((((a ^ 2) + (b ^ 2)) + (c ^ 2)) + (d ^ 2))) + (16 * (((((a ^ 2) * (b ^ 2)) + ((a ^ 2) * (d ^ 2))) + ((b ^ 2) * (c ^ 2))) + ((c ^ 2) * (d ^ 2)))))) * (((((a ^ 2) + (b ^ 2)) + (c ^ 2)) + (d ^ 2)) * 3))) (l := ((16 * (((((a ^ 2) * (b ^ 2)) + ((b ^ 2) * (c ^ 2))) + ((c ^ 2) * (d ^ 2))) + ((d ^ 2) * (a ^ 2)))) / (((3 * ((((a + b) + c) + d) ^ 2)) * ((((a ^ 2) + (b ^ 2)) + (c ^ 2)) + (d ^ 2))) + (16 * (((((a ^ 2) * (b ^ 2)) + ((a ^ 2) * (d ^ 2))) + ((b ^ 2) * (c ^ 2))) + ((c ^ 2) * (d ^ 2))))))) (right := 16 * (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) ^ 2 / (3 * (a + b + c + d) ^ 2 * (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) + 16 * (a ^ 2 * b ^ 2 + a ^ 2 * d ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * d ^ 2)))
  llm_frac_together 1 / (3 * (a + b + c + d) ^ 2 * (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) + 16 * (a ^ 2 * b ^ 2 + a ^ 2 * d ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * d ^ 2)) * (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) * 3 * 2 * ((a + c) ^ 2 + (b + d) ^ 2) + 16 * (a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * d ^ 2 + d ^ 2 * a ^ 2) / (3 * (a + b + c + d) ^ 2 * (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) + 16 * (a ^ 2 * b ^ 2 + a ^ 2 * d ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * d ^ 2)) - (16 * (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) ^ 2 / (3 * (a + b + c + d) ^ 2 * (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) + 16 * (a ^ 2 * b ^ 2 + a ^ 2 * d ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * d ^ 2))) = (6 * (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) * ((a + c) ^ 2 + (b + d) ^ 2) + 16 * (a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * d ^ 2 + d ^ 2 * a ^ 2) - (16 * (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) ^ 2)) / (3 * (a + b + c + d) ^ 2 * (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) + 16 * (a ^ 2 * b ^ 2 + a ^ 2 * d ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * d ^ 2))
  llm_cancel_factor (6 * (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) * ((a + c) ^ 2 + (b + d) ^ 2) + 16 * (a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * d ^ 2 + d ^ 2 * a ^ 2) - 16 * (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) ^ 2) / (3 * (a + b + c + d) ^ 2 * (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) + 16 * (a ^ 2 * b ^ 2 + a ^ 2 * d ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * d ^ 2)) - (0) = (12 * (a * c + b * d) / (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) + 16 * (a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * d ^ 2 + d ^ 2 * a ^ 2) / ((a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) ^ 2) - (10)) / (3 + 6 * (a * b + a * c + a * d + b * c + b * d + c * d) / (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) + 16 * (a ^ 2 * b ^ 2 + a ^ 2 * d ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * d ^ 2) / ((a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) ^ 2))
  scale AM_GM_div_left_2vars (u := ((a ^ 2) + (c ^ 2))) (v := ((b ^ 2) + (d ^ 2))) (i := ((((a ^ 2) + (b ^ 2)) + (c ^ 2)) + (d ^ 2))) (j := 0) (k := (16 * (((((a ^ 2) * (b ^ 2)) + ((b ^ 2) * (c ^ 2))) + ((c ^ 2) * (d ^ 2))) + ((d ^ 2) * (a ^ 2))))) (l := ((12 * ((a * c) + (b * d))) / ((((a ^ 2) + (b ^ 2)) + (c ^ 2)) + (d ^ 2)))) (right := 10)
  scale AM_GM_div_left_2vars (u := ((a ^ 2) + (c ^ 2))) (v := ((b ^ 2) + (d ^ 2))) (i := (2 * sqrt ((((a ^ 2) + (c ^ 2)) * ((b ^ 2) + (d ^ 2)))))) (j := 0) (k := (16 * (((((a ^ 2) * (b ^ 2)) + ((b ^ 2) * (c ^ 2))) + ((c ^ 2) * (d ^ 2))) + ((d ^ 2) * (a ^ 2))))) (l := ((12 * ((a * c) + (b * d))) / ((((a ^ 2) + (b ^ 2)) + (c ^ 2)) + (d ^ 2)))) (right := 10)
  llm_simplify 16 * (a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * d ^ 2 + d ^ 2 * a ^ 2) * (1 / (4 * sqrt((a ^ 2 + c ^ 2) * (b ^ 2 + d ^ 2)) * sqrt((a ^ 2 + c ^ 2) * (b ^ 2 + d ^ 2)))) + 12 * (a * c + b * d) / (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) - (10) = 12 * (a * c + b * d) / (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) + 4 * a ^ 2 * b ^ 2 / ((a ^ 2 + c ^ 2) * (b ^ 2 + d ^ 2)) + 4 * a ^ 2 * d ^ 2 / ((a ^ 2 + c ^ 2) * (b ^ 2 + d ^ 2)) + 4 * b ^ 2 * c ^ 2 / ((a ^ 2 + c ^ 2) * (b ^ 2 + d ^ 2)) + 4 * c ^ 2 * d ^ 2 / ((a ^ 2 + c ^ 2) * (b ^ 2 + d ^ 2)) - (10)
  llm_frac_apart 12 * (a * c + b * d) / (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) + 4 * a ^ 2 * b ^ 2 / ((a ^ 2 + c ^ 2) * (b ^ 2 + d ^ 2)) + 4 * a ^ 2 * d ^ 2 / ((a ^ 2 + c ^ 2) * (b ^ 2 + d ^ 2)) + 4 * b ^ 2 * c ^ 2 / ((a ^ 2 + c ^ 2) * (b ^ 2 + d ^ 2)) + 4 * c ^ 2 * d ^ 2 / ((a ^ 2 + c ^ 2) * (b ^ 2 + d ^ 2)) - (10) = 4 * a ^ 2 * b ^ 2 / ((a ^ 2 + c ^ 2) * (b ^ 2 + d ^ 2)) + 4 * a ^ 2 * d ^ 2 / ((a ^ 2 + c ^ 2) * (b ^ 2 + d ^ 2)) + 4 * b ^ 2 * c ^ 2 / ((a ^ 2 + c ^ 2) * (b ^ 2 + d ^ 2)) + 4 * c ^ 2 * d ^ 2 / ((a ^ 2 + c ^ 2) * (b ^ 2 + d ^ 2)) + 12 * a * c / (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) + 12 * b * d / (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) - (10)
  llm_factor 4 * a ^ 2 * b ^ 2 / ((a ^ 2 + c ^ 2) * (b ^ 2 + d ^ 2)) + 4 * a ^ 2 * d ^ 2 / ((a ^ 2 + c ^ 2) * (b ^ 2 + d ^ 2)) + 4 * b ^ 2 * c ^ 2 / ((a ^ 2 + c ^ 2) * (b ^ 2 + d ^ 2)) + 4 * c ^ 2 * d ^ 2 / ((a ^ 2 + c ^ 2) * (b ^ 2 + d ^ 2)) + 12 * a * c / (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) + 12 * b * d / (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) - (10) = 4 * ((a * b + c * d) ^ 2 + (a * d + b * c) ^ 2 - (4 * a * b * c * d)) / ((a ^ 2 + c ^ 2) * (b ^ 2 + d ^ 2)) + 12 * (a * c + b * d) / (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) - (10)
  llm_factor 4 * ((a * b + c * d) ^ 2 + (a * d + b * c) ^ 2 - 4 * a * b * c * d) / ((a ^ 2 + c ^ 2) * (b ^ 2 + d ^ 2)) + 12 * (a * c + b * d) / (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) - (10) = -6 * (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2 - (2 * a * c) - (2 * b * d)) / (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2)
  llm_cancel_factor -6 * (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2 - 2 * a * c - 2 * b * d) / (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) - (0) = -6 * ((a - (c)) ^ 2 + (b - (d)) ^ 2) / (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2)

theorem P62 {a b c : ℝ} (ha : a ≥ 2) (hb : b ≥ 2) (hc : c ≥ 2) : 125 * (a + b) * (b + c) * (c + a) ≤ 8 * (a ^ 3 + b) * (b ^ 3 + c) * (c ^ 3 + a) := by
  scale AM_GM_cubic_left_3vars (u := (b + c)) (v := (c + a)) (w := (a + b)) (k := 125) (l := 0) (right := 8 * (a ^ 3 + b) * (b ^ 3 + c) * (c ^ 3 + a))
  llm_exp_expand 125 * ((b + c) ^ 3 + (c + a) ^ 3 + (a + b) ^ 3) / 3 - (8 * (a ^ 3 + b) * (b ^ 3 + c) * (c ^ 3 + a)) = 250 * a ^ 3 / 3 + 250 * b ^ 3 / 3 + 250 * c ^ 3 / 3 + 125 * a * b ^ 2 + 125 * a * c ^ 2 + 125 * b * a ^ 2 + 125 * b * c ^ 2 + 125 * c * a ^ 2 + 125 * c * b ^ 2 - (8 * (a ^ 3 + b) * (b ^ 3 + c) * (c ^ 3 + a))
  llm_factor 250 * a ^ 3 / 3 + 250 * b ^ 3 / 3 + 250 * c ^ 3 / 3 + 125 * a * b ^ 2 + 125 * a * c ^ 2 + 125 * b * a ^ 2 + 125 * b * c ^ 2 + 125 * c * a ^ 2 + 125 * c * b ^ 2 - (8 * (a ^ 3 + b) * (b ^ 3 + c) * (c ^ 3 + a)) = 250 * (a ^ 3 + b ^ 3 + c ^ 3) / (3) + 125 * (a + b) * a * b + 125 * (a + c) * a * c + 125 * (b + c) * b * c - (8 * (a ^ 3 + b) * (b ^ 3 + c) * (c ^ 3 + a))
  llm_simplify 250 * (a ^ 3 + b ^ 3 + c ^ 3) / 3 + 125 * (a + b) * a * b + 125 * (a + c) * a * c + 125 * (b + c) * b * c - (8 * (a ^ 3 + b) * (b ^ 3 + c) * (c ^ 3 + a)) = 250 * (a ^ 3 + b ^ 3 + c ^ 3) / (3) + 125 * a * b * (a + b) + 125 * a * c * (a + c) + 125 * b * c * (b + c) - (8 * (a ^ 3 + b) * (b ^ 3 + c) * (c ^ 3 + a))
  llm_cancel_denom 250 * (a ^ 3 + b ^ 3 + c ^ 3) / 3 + 125 * a * b * (a + b) + 125 * a * c * (a + c) + 125 * b * c * (b + c) - (8 * (a ^ 3 + b) * (b ^ 3 + c) * (c ^ 3 + a)) = (250 * (a ^ 3 + b ^ 3 + c ^ 3) + 375 * a * b * (a + b) + 375 * a * c * (a + c) + 375 * b * c * (b + c) - (24 * (a ^ 3 + b) * (b ^ 3 + c) * (c ^ 3 + a))) / (3)
  llm_cancel_denom 250 * (a ^ 3 + b ^ 3 + c ^ 3) + 375 * a * b * (a + b) + 375 * a * c * (a + c) + 375 * b * c * (b + c) - (24 * (a ^ 3 + b) * (b ^ 3 + c) * (c ^ 3 + a)) = 250 * (a ^ 3 + b ^ 3 + c ^ 3) + 375 * a ^ 2 * b + 375 * a * b ^ 2 + 375 * a ^ 2 * c + 375 * a * c ^ 2 + 375 * b ^ 2 * c + 375 * b * c ^ 2 - (24 * (a ^ 3 * b ^ 3 + a ^ 3 * c + b ^ 4 + b * c) * (c ^ 3 + a))
  scale Muirhead_Qeq1Req0_left_3vars (u := b) (v := a) (w := c) (p := 2) (k := 375) (l := (((250 * (((a ^ 3) + (b ^ 3)) + (c ^ 3))) + ((375 * (a ^ 2)) * b)) + (((375 * a) * (c ^ 2)) + ((375 * (b ^ 2)) * c)))) (right := 24 * (a ^ 3 * b ^ 3 + a ^ 3 * c + b ^ 4 + b * c) * (c ^ 3 + a))
  scale Muirhead_Qeq1Req0_left_3vars (u := b) (v := c) (w := a) (p := 2) (k := 375) (l := ((375 * (((b ^ 3) + (a ^ 3)) + (c ^ 3))) + (250 * (((a ^ 3) + (b ^ 3)) + (c ^ 3))))) (right := 24 * (a ^ 3 * b ^ 3 + a ^ 3 * c + b ^ 4 + b * c) * (c ^ 3 + a))
  llm_exp_expand 375 * (b ^ 3 + c ^ 3 + a ^ 3) + 375 * (b ^ 3 + a ^ 3 + c ^ 3) + 250 * (a ^ 3 + b ^ 3 + c ^ 3) - (24 * (a ^ 3 * b ^ 3 + a ^ 3 * c + b ^ 4 + b * c) * (c ^ 3 + a)) = 1000 * (a ^ 3 + b ^ 3 + c ^ 3) - (24 * (a ^ 3 * b ^ 3 * c ^ 3 + a ^ 4 * b ^ 3 + a ^ 3 * c ^ 4 + a ^ 4 * c + b ^ 4 * c ^ 3 + a * b ^ 4 + b * c ^ 4 + a * b * c))
  llm_cancel_factor (1000 * (a ^ 3 + b ^ 3 + c ^ 3)) - (24 * (a ^ 3 * b ^ 3 * c ^ 3 + a ^ 4 * b ^ 3 + a ^ 3 * c ^ 4 + a ^ 4 * c + b ^ 4 * c ^ 3 + a * b ^ 4 + b * c ^ 4 + a * b * c)) = (8) * (125 * a ^ 3 + 125 * b ^ 3 + 125 * c ^ 3 - (3 * a * b ^ 4) - (3 * b * c ^ 4) - (3 * c * a ^ 4) - (3 * a ^ 3 * c ^ 4) - (3 * a ^ 4 * b ^ 3) - (3 * b ^ 4 * c ^ 3) - (3 * a * b * c) - (3 * a ^ 3 * b ^ 3 * c ^ 3))
  llm_simplify 125 * a ^ 3 + 125 * b ^ 3 + 125 * c ^ 3 - (3 * a ^ 3 * b ^ 3 * c ^ 3 + 3 * a * b * c + 3 * b ^ 4 * c ^ 3 + 3 * a ^ 4 * b ^ 3 + 3 * a ^ 3 * c ^ 4 + 3 * c * a ^ 4 + 3 * b * c ^ 4 + 3 * a * b ^ 4) = 125 * (a + b + c) * (a ^ 2 + b ^ 2 + c ^ 2 - (a * b) - (b * c) - (c * a)) + 372 * a * b * c - (3 * a ^ 3 * b ^ 3 * c ^ 3) - (3 * b ^ 4 * c ^ 3) - (3 * a ^ 4 * b ^ 3) - (3 * a ^ 3 * c ^ 4) - (3 * c * a ^ 4) - (3 * b * c ^ 4) - (3 * a * b ^ 4)
  llm_simplify 125 * (a + b + c) * (a ^ 2 + b ^ 2 + c ^ 2 - a * b - b * c - c * a) + 372 * a * b * c - (3 * a * b ^ 4 + 3 * b * c ^ 4 + 3 * c * a ^ 4 + 3 * a ^ 3 * c ^ 4 + 3 * a ^ 4 * b ^ 3 + 3 * b ^ 4 * c ^ 3 + 3 * a ^ 3 * b ^ 3 * c ^ 3) = 125 * (a + b + c) * ((a - (b)) ^ 2 + (b - (c)) ^ 2 + (c - (a)) ^ 2) / (2) + 372 * a * b * c - (3 * (a * b ^ 4 + b * c ^ 4 + c * a ^ 4 + a ^ 3 * c ^ 4 + a ^ 4 * b ^ 3 + b ^ 4 * c ^ 3 + a ^ 3 * b ^ 3 * c ^ 3))
  llm_frac_reduce 125 * (a + b + c) * ((a - b) ^ 2 + (b - c) ^ 2 + (c - a) ^ 2) / 2 + 372 * a * b * c - (3 * (a * b ^ 4 + b * c ^ 4 + c * a ^ 4 + a ^ 3 * c ^ 4 + a ^ 4 * b ^ 3 + b ^ 4 * c ^ 3 + a ^ 3 * b ^ 3 * c ^ 3)) = 125 * (a ^ 3 + b ^ 3 + c ^ 3 + a * b ^ 2 + a * c ^ 2 + b * a ^ 2 + b * c ^ 2 + c * a ^ 2 + c * b ^ 2 - (3 * a * b * c) - (a ^ 2 * b) - (a ^ 2 * c) - (a * b ^ 2) - (b ^ 2 * c) - (b * c ^ 2) - (c ^ 2 * a)) + 372 * a * b * c - (3 * (a * b ^ 4 + b * c ^ 4 + c * a ^ 4 + a ^ 3 * c ^ 4 + a ^ 4 * b ^ 3 + b ^ 4 * c ^ 3 + a ^ 3 * b ^ 3 * c ^ 3))
  scale AM_GM_cubic_left_3vars (u := b) (v := c) (w := a) (k := 372) (l := (125 * ((((((((((((((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + (a * (b ^ 2))) + (a * (c ^ 2))) + (b * (a ^ 2))) + (b * (c ^ 2))) + (c * (a ^ 2))) + (c * (b ^ 2))) - (((3 * a) * b) * c)) - ((a ^ 2) * b)) - ((a ^ 2) * c)) - (a * (b ^ 2))) - ((b ^ 2) * c)) - (b * (c ^ 2))) - ((c ^ 2) * a)))) (right := 3 * (a * b ^ 4 + b * c ^ 4 + c * a ^ 4 + a ^ 3 * c ^ 4 + a ^ 4 * b ^ 3 + b ^ 4 * c ^ 3 + a ^ 3 * b ^ 3 * c ^ 3))
  llm_cancel_factor (372 * (b ^ 3 + c ^ 3 + a ^ 3) / 3 + 125 * (a ^ 3 + b ^ 3 + c ^ 3 + a * b ^ 2 + a * c ^ 2 + b * a ^ 2 + b * c ^ 2 + c * a ^ 2 + c * b ^ 2 - 3 * a * b * c - a ^ 2 * b - a ^ 2 * c - a * b ^ 2 - b ^ 2 * c - b * c ^ 2 - c ^ 2 * a)) - (3 * (a * b ^ 4 + b * c ^ 4 + c * a ^ 4 + a ^ 3 * c ^ 4 + a ^ 4 * b ^ 3 + b ^ 4 * c ^ 3 + a ^ 3 * b ^ 3 * c ^ 3)) = (3) * (83 * a ^ 3 + 83 * b ^ 3 + 83 * c ^ 3 - (a * b ^ 4) - (b * c ^ 4) - (c * a ^ 4) - (a ^ 3 * c ^ 4) - (a ^ 4 * b ^ 3) - (b ^ 4 * c ^ 3) - (a ^ 3 * b ^ 3 * c ^ 3) - (125 * a * b * c))
  llm_factor 83 * a ^ 3 + 83 * b ^ 3 + 83 * c ^ 3 - (125 * a * b * c + a ^ 3 * b ^ 3 * c ^ 3 + b ^ 4 * c ^ 3 + a ^ 4 * b ^ 3 + a ^ 3 * c ^ 4 + c * a ^ 4 + b * c ^ 4 + a * b ^ 4) = 83 * ((a + b + c) * (a ^ 2 + b ^ 2 + c ^ 2 - (a * b) - (b * c) - (c * a)) + 3 * a * b * c) - (125 * a * b * c + a ^ 3 * b ^ 3 * c ^ 3 + b ^ 4 * c ^ 3 + a ^ 4 * b ^ 3 + a ^ 3 * c ^ 4 + c * a ^ 4 + b * c ^ 4 + a * b ^ 4)
  llm_frac_apart 83 * ((a + b + c) * (a ^ 2 + b ^ 2 + c ^ 2 - a * b - b * c - c * a) + 3 * a * b * c) - (125 * a * b * c + a ^ 3 * b ^ 3 * c ^ 3 + b ^ 4 * c ^ 3 + a ^ 4 * b ^ 3 + a ^ 3 * c ^ 4 + c * a ^ 4 + b * c ^ 4 + a * b ^ 4) = 83 * (a + b + c) * (a ^ 2 + b ^ 2 + c ^ 2 - (a * b) - (a * c) - (b * c)) + 124 * a * b * c - (a * b ^ 4) - (b * c ^ 4) - (c * a ^ 4) - (a ^ 3 * c ^ 4) - (a ^ 4 * b ^ 3) - (b ^ 4 * c ^ 3) - (a ^ 3 * b ^ 3 * c ^ 3)
  llm_cancel_factor 83 * (a + b + c) * (a ^ 2 + b ^ 2 + c ^ 2 - a * b - a * c - b * c) + 124 * a * b * c - (a ^ 3 * b ^ 3 * c ^ 3 + b ^ 4 * c ^ 3 + a ^ 4 * b ^ 3 + a ^ 3 * c ^ 4 + c * a ^ 4 + b * c ^ 4 + a * b ^ 4) = 83 * (a + b + c) * ((a - (b)) ^ 2 + (b - (c)) ^ 2 + (c - (a)) ^ 2) / (2) + 124 * a * b * c - (a ^ 3 * b ^ 3 * c ^ 3 + b ^ 4 * c ^ 3 + a ^ 4 * b ^ 3 + a ^ 3 * c ^ 4 + c * a ^ 4 + b * c ^ 4 + a * b ^ 4)
  llm_simplify 83 * (a + b + c) * ((a - b) ^ 2 + (b - c) ^ 2 + (c - a) ^ 2) / 2 + 124 * a * b * c - (a ^ 3 * b ^ 3 * c ^ 3 + b ^ 4 * c ^ 3 + a ^ 4 * b ^ 3 + a ^ 3 * c ^ 4 + c * a ^ 4 + b * c ^ 4 + a * b ^ 4) = 83 * (a ^ 3 + b ^ 3 + c ^ 3 - (3 * a * b * c)) + 124 * a * b * c - (a ^ 3 * b ^ 3 * c ^ 3 + b ^ 4 * c ^ 3 + a ^ 4 * b ^ 3 + a ^ 3 * c ^ 4 + c * a ^ 4 + b * c ^ 4 + a * b ^ 4)
  scale AM_GM_cubic_left_3vars (u := a) (v := b) (w := c) (k := 124) (l := (83 * ((((a ^ 3) + (b ^ 3)) + (c ^ 3)) - (((3 * a) * b) * c)))) (right := a ^ 3 * b ^ 3 * c ^ 3 + b ^ 4 * c ^ 3 + a ^ 4 * b ^ 3 + a ^ 3 * c ^ 4 + c * a ^ 4 + b * c ^ 4 + a * b ^ 4)
  llm_exp_expand 124 * (a ^ 3 + b ^ 3 + c ^ 3) / 3 + 83 * (a ^ 3 + b ^ 3 + c ^ 3 - 3 * a * b * c) - (a ^ 3 * b ^ 3 * c ^ 3 + b ^ 4 * c ^ 3 + a ^ 4 * b ^ 3 + a ^ 3 * c ^ 4 + c * a ^ 4 + b * c ^ 4 + a * b ^ 4) = 373 * (a ^ 3 + b ^ 3 + c ^ 3) / (3) - (a * b ^ 4) - (b * c ^ 4) - (c * a ^ 4) - (a ^ 3 * c ^ 4) - (a ^ 4 * b ^ 3) - (b ^ 4 * c ^ 3) - (a ^ 3 * b ^ 3 * c ^ 3) - (249 * a * b * c)
  llm_cancel_factor 373 * (a ^ 3 + b ^ 3 + c ^ 3) / 3 - (249 * a * b * c + a ^ 3 * b ^ 3 * c ^ 3 + b ^ 4 * c ^ 3 + a ^ 4 * b ^ 3 + a ^ 3 * c ^ 4 + c * a ^ 4 + b * c ^ 4 + a * b ^ 4) = 124 * a * b * c + 373 * (a + b + c) * (a ^ 2 + b ^ 2 + c ^ 2 - (a * b) - (b * c) - (c * a)) / (3) - (a ^ 3 * b ^ 3 * c ^ 3 + b ^ 4 * c ^ 3 + a ^ 4 * b ^ 3 + a ^ 3 * c ^ 4 + c * a ^ 4 + b * c ^ 4 + a * b ^ 4)
  llm_simplify 124 * a * b * c + 373 * (a + b + c) * (a ^ 2 + b ^ 2 + c ^ 2 - a * b - b * c - c * a) / 3 - (a ^ 3 * b ^ 3 * c ^ 3 + b ^ 4 * c ^ 3 + a ^ 4 * b ^ 3 + a ^ 3 * c ^ 4 + c * a ^ 4 + b * c ^ 4 + a * b ^ 4) = 124 * a * b * c + 373 * (a + b + c) * ((a - (b)) ^ 2 + (b - (c)) ^ 2 + (c - (a)) ^ 2) / (6) - (a ^ 3 * b ^ 3 * c ^ 3 + b ^ 4 * c ^ 3 + a ^ 4 * b ^ 3 + a ^ 3 * c ^ 4 + c * a ^ 4 + b * c ^ 4 + a * b ^ 4)
  llm_frac_together 124 * a * b * c + 373 * (a + b + c) * ((a - b) ^ 2 + (b - c) ^ 2 + (c - a) ^ 2) / 6 - (a ^ 3 * b ^ 3 * c ^ 3 + b ^ 4 * c ^ 3 + a ^ 4 * b ^ 3 + a ^ 3 * c ^ 4 + c * a ^ 4 + b * c ^ 4 + a * b ^ 4) = (744 * a * b * c + 373 * (a + b + c) * ((a - (b)) ^ 2 + (b - (c)) ^ 2 + (c - (a)) ^ 2) - (6 * (a ^ 3 * b ^ 3 * c ^ 3 + b ^ 4 * c ^ 3 + a ^ 4 * b ^ 3 + a ^ 3 * c ^ 4 + c * a ^ 4 + b * c ^ 4 + a * b ^ 4))) / (6)
  llm_simplify (744 * a * b * c + 373 * (a + b + c) * ((a - b) ^ 2 + (b - c) ^ 2 + (c - a) ^ 2) - 6 * (a ^ 3 * b ^ 3 * c ^ 3 + b ^ 4 * c ^ 3 + a ^ 4 * b ^ 3 + a ^ 3 * c ^ 4 + c * a ^ 4 + b * c ^ 4 + a * b ^ 4)) / 6 - (0) = 124 * a * b * c + 746 * (a + b + c) * (a ^ 2 + b ^ 2 + c ^ 2 - (a * b) - (b * c) - (c * a)) / (6) - (a ^ 3 * b ^ 3 * c ^ 3 + b ^ 4 * c ^ 3 + a ^ 4 * b ^ 3 + a ^ 3 * c ^ 4 + c * a ^ 4 + b * c ^ 4 + a * b ^ 4)
  scale AM_GM_cubic_left_3vars (u := a) (v := b) (w := c) (k := 124) (l := (((746 * ((a + b) + c)) * ((((((a ^ 2) + (b ^ 2)) + (c ^ 2)) - (a * b)) - (b * c)) - (c * a))) / 6)) (right := a ^ 3 * b ^ 3 * c ^ 3 + b ^ 4 * c ^ 3 + a ^ 4 * b ^ 3 + a ^ 3 * c ^ 4 + c * a ^ 4 + b * c ^ 4 + a * b ^ 4)
  llm_frac_reduce 124 * (a ^ 3 + b ^ 3 + c ^ 3) / 3 + 746 * (a + b + c) * (a ^ 2 + b ^ 2 + c ^ 2 - a * b - b * c - c * a) / 6 - (a ^ 3 * b ^ 3 * c ^ 3 + b ^ 4 * c ^ 3 + a ^ 4 * b ^ 3 + a ^ 3 * c ^ 4 + c * a ^ 4 + b * c ^ 4 + a * b ^ 4) = 124 * a * b * c + 994 * (a + b + c) * (a ^ 2 + b ^ 2 + c ^ 2 - (a * b) - (b * c) - (c * a)) / (6) - (a ^ 3 * b ^ 3 * c ^ 3 + b ^ 4 * c ^ 3 + a ^ 4 * b ^ 3 + a ^ 3 * c ^ 4 + c * a ^ 4 + b * c ^ 4 + a * b ^ 4)
  llm_simplify 124 * a * b * c + 994 * (a + b + c) * (a ^ 2 + b ^ 2 + c ^ 2 - a * b - b * c - c * a) / 6 - (a ^ 3 * b ^ 3 * c ^ 3 + b ^ 4 * c ^ 3 + a ^ 4 * b ^ 3 + a ^ 3 * c ^ 4 + c * a ^ 4 + b * c ^ 4 + a * b ^ 4) = 124 * a * b * c + 994 * (a + b + c) * ((a - (b)) ^ 2 + (b - (c)) ^ 2 + (c - (a)) ^ 2) / (12) - (a ^ 3 * b ^ 3 * c ^ 3 + b ^ 4 * c ^ 3 + a ^ 4 * b ^ 3 + a ^ 3 * c ^ 4 + c * a ^ 4 + b * c ^ 4 + a * b ^ 4)
  llm_cancel_denom (124 * a * b * c + 994 * (a + b + c) * ((a - b) ^ 2 + (b - c) ^ 2 + (c - a) ^ 2) / 12) - (a ^ 3 * b ^ 3 * c ^ 3 + b ^ 4 * c ^ 3 + a ^ 4 * b ^ 3 + a ^ 3 * c ^ 4 + c * a ^ 4 + b * c ^ 4 + a * b ^ 4) = (994 * (a + b + c) * ((a - (b)) ^ 2 + (b - (c)) ^ 2 + (c - (a)) ^ 2) + 1488 * a * b * c - (12 * a * b ^ 4) - (12 * b * c ^ 4) - (12 * c * a ^ 4) - (12 * a ^ 3 * c ^ 4) - (12 * a ^ 4 * b ^ 3) - (12 * b ^ 4 * c ^ 3) - (12 * a ^ 3 * b ^ 3 * c ^ 3)) / (12)
  llm_mul_expand 994 * (a + b + c) * ((a - b) ^ 2 + (b - c) ^ 2 + (c - a) ^ 2) + 1488 * a * b * c - (12 * a ^ 3 * b ^ 3 * c ^ 3 + 12 * b ^ 4 * c ^ 3 + 12 * a ^ 4 * b ^ 3 + 12 * a ^ 3 * c ^ 4 + 12 * c * a ^ 4 + 12 * b * c ^ 4 + 12 * a * b ^ 4) = 1988 * a ^ 3 + 1988 * b ^ 3 + 1988 * c ^ 3 - (4476 * a * b * c) - (12 * a ^ 3 * b ^ 3 * c ^ 3) - (12 * b ^ 4 * c ^ 3) - (12 * a ^ 4 * b ^ 3) - (12 * a ^ 3 * c ^ 4) - (12 * c * a ^ 4) - (12 * b * c ^ 4) - (12 * a * b ^ 4)
  closed_by_sos

theorem P63 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) : 9 / (2 * (a + b + c)) ≤ 1 / sqrt(2 * a ^ 2 + a * b + b * c) + 1 / sqrt(2 * b ^ 2 + b * c + c * a) + 1 / sqrt(2 * c ^ 2 + c * a + a * b) := by
  sorry

theorem P64 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) : a / (a + 2 * b) + b / (b + 2 * c) + c / (c + 2 * a) ≤ 3 * (a ^ 2 + b ^ 2 + c ^ 2) / (a + b + c) ^ 2 := by
  intro_by_homogeneous a + b + c = 3
  llm_simplify a / (a + 2 * b) + b / (b + 2 * c) + c / (c + 2 * a) - (3 * (a ^ 2 + b ^ 2 + c ^ 2) / (a + b + c) ^ 2) = 3 - (2 * a / (2 * a + c)) - (2 * b / (a + 2 * b)) - (2 * c / (b + 2 * c)) - (3 * a ^ 2 / ((a + b + c) ^ 2)) - (3 * b ^ 2 / ((a + b + c) ^ 2)) - (3 * c ^ 2 / ((a + b + c) ^ 2))
  scale Titu_variant1_right_3vars (u1 := c) (u2 := b) (u3 := a) (v1 := (b + (2 * c))) (v2 := (a + (2 * b))) (v3 := ((2 * a) + c)) (k := 2) (l := ((((3 * (c ^ 2)) / (((a + b) + c) ^ 2)) + ((3 * (b ^ 2)) / (((a + b) + c) ^ 2))) + ((3 * (a ^ 2)) / (((a + b) + c) ^ 2)))) (left := 3)
  llm_simplify 3 - (2 * ((c + b + a) ^ 2 / (c * (b + 2 * c) + b * (a + 2 * b) + a * (2 * a + c))) + 3 * c ^ 2 / (a + b + c) ^ 2 + 3 * b ^ 2 / (a + b + c) ^ 2 + 3 * a ^ 2 / (a + b + c) ^ 2) = 3 - (18 / (2 * a ^ 2 + a * b + a * c + 2 * b ^ 2 + b * c + 2 * c ^ 2)) - ((a ^ 2 + b ^ 2 + c ^ 2) / (3))
  llm_cancel_factor 3 - ((a ^ 2 + b ^ 2 + c ^ 2) / 3 + 18 / (2 * a ^ 2 + a * b + a * c + 2 * b ^ 2 + b * c + 2 * c ^ 2)) = 3 - (18 / (a * (2 * a + b + c) + b * (2 * b + c) + 2 * c ^ 2) + (a ^ 2 + b ^ 2 + c ^ 2) / (3))
  llm_cancel_denom (3) - (18 / (a * (2 * a + b + c) + b * (2 * b + c) + 2 * c ^ 2) + (a ^ 2 + b ^ 2 + c ^ 2) / 3) = (18 * c ^ 2 + 9 * a * (b + c + 2 * a) + 9 * b * (c + 2 * b) - (54) - ((a ^ 2 + b ^ 2 + c ^ 2) * (2 * c ^ 2 + a * (b + c + 2 * a) + b * (c + 2 * b)))) / (6 * c ^ 2 + 3 * a * (b + c + 2 * a) + 3 * b * (c + 2 * b))
  sym_pqr_method 8 * a * b ^ 3 / 3 + 8 * b * a ^ 3 / 3 - (2 * a ^ 4 / 3) - (2 * b ^ 4 / 3) - (4 * a ^ 2 * b ^ 2) ≤ 0
  llm_cancel_factor 8 * a * b ^ 3 / 3 + 8 * b * a ^ 3 / 3 - 2 * a ^ 4 / 3 - 2 * b ^ 4 / 3 - 4 * a ^ 2 * b ^ 2 - (0) = (8 * a * b * (a ^ 2 + b ^ 2) - (2 * (a ^ 2 + b ^ 2) ^ 2) - (8 * a ^ 2 * b ^ 2)) / (3)
  scale AM_GM_normal_right_2vars (u := ((8 * (a ^ 2)) * (b ^ 2))) (v := (2 * (((a ^ 2) + (b ^ 2)) ^ 2))) (k := 1) (l := 0) (left := 8 * a * b * (a ^ 2 + b ^ 2))
  sym_simplify 8 * a * b * (a ^ 2 + b ^ 2)  -  2 * sqrt(8 * a ^ 2 * b ^ 2 * 2 * (a ^ 2 + b ^ 2) ^ 2) = 0
  try close

theorem P65 {a b c d : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) (hd : d > 0) : (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) / (a + b + c + d) ≤ (a ^ 4 + b ^ 4) / ((a + b) * (a ^ 2 + a * b + b ^ 2)) + (b ^ 4 + c ^ 4) / ((b + c) * (b ^ 2 + b * c + c ^ 2)) + (c ^ 4 + d ^ 4) / ((c + d) * (c ^ 2 + c * d + d ^ 2)) + (d ^ 4 + a ^ 4) / ((d + a) * (d ^ 2 + d * a + a ^ 2)) := by
  intro_by_homogeneous a + b + c + d = 4
  llm_frac_apart (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) / (a + b + c + d) - ((a ^ 4 + b ^ 4) / ((a + b) * (a ^ 2 + a * b + b ^ 2)) + (b ^ 4 + c ^ 4) / ((b + c) * (b ^ 2 + b * c + c ^ 2)) + (c ^ 4 + d ^ 4) / ((c + d) * (c ^ 2 + c * d + d ^ 2)) + (d ^ 4 + a ^ 4) / ((d + a) * (d ^ 2 + d * a + a ^ 2))) = (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) / (a + b + c + d) - a ^ 4 / ((d + a) * (d ^ 2 + d * a + a ^ 2)) - b ^ 4 / ((a + b) * (a ^ 2 + a * b + b ^ 2)) - c ^ 4 / ((b + c) * (b ^ 2 + b * c + c ^ 2)) - d ^ 4 / ((c + d) * (c ^ 2 + c * d + d ^ 2)) - (a ^ 4 / ((a + b) * (a ^ 2 + a * b + b ^ 2)) + b ^ 4 / ((b + c) * (b ^ 2 + b * c + c ^ 2)) + c ^ 4 / ((c + d) * (c ^ 2 + c * d + d ^ 2)) + d ^ 4 / ((d + a) * (d ^ 2 + d * a + a ^ 2)))
  scale Titu_normal_right_4vars (u1 := (a ^ 2)) (u2 := (b ^ 2)) (u3 := (c ^ 2)) (u4 := (d ^ 2)) (v1 := ((a + b) * (((a ^ 2) + (a * b)) + (b ^ 2)))) (v2 := ((b + c) * (((b ^ 2) + (b * c)) + (c ^ 2)))) (v3 := ((c + d) * (((c ^ 2) + (c * d)) + (d ^ 2)))) (v4 := ((d + a) * (((d ^ 2) + (d * a)) + (a ^ 2)))) (k := 1) (l := 0) (left := (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) / (a + b + c + d) - a ^ 4 / ((d + a) * (d ^ 2 + d * a + a ^ 2)) - b ^ 4 / ((a + b) * (a ^ 2 + a * b + b ^ 2)) - c ^ 4 / ((b + c) * (b ^ 2 + b * c + c ^ 2)) - d ^ 4 / ((c + d) * (c ^ 2 + c * d + d ^ 2)))
  llm_frac_apart (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) / (a + b + c + d) - a ^ 4 / ((d + a) * (d ^ 2 + d * a + a ^ 2)) - b ^ 4 / ((a + b) * (a ^ 2 + a * b + b ^ 2)) - c ^ 4 / ((b + c) * (b ^ 2 + b * c + c ^ 2)) - d ^ 4 / ((c + d) * (c ^ 2 + c * d + d ^ 2)) - ((a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) ^ 2 / ((a + b) * (a ^ 2 + a * b + b ^ 2) + (b + c) * (b ^ 2 + b * c + c ^ 2) + (c + d) * (c ^ 2 + c * d + d ^ 2) + (d + a) * (d ^ 2 + d * a + a ^ 2))) = a ^ 2 / (a + b + c + d) + b ^ 2 / (a + b + c + d) + c ^ 2 / (a + b + c + d) + d ^ 2 / (a + b + c + d) - ((a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) ^ 2 / ((a + b) * (a ^ 2 + a * b + b ^ 2) + (a + d) * (a ^ 2 + a * d + d ^ 2) + (b + c) * (b ^ 2 + b * c + c ^ 2) + (c + d) * (c ^ 2 + c * d + d ^ 2))) - (b ^ 4 / ((a + b) * (a ^ 2 + a * b + b ^ 2))) - (a ^ 4 / ((a + d) * (a ^ 2 + a * d + d ^ 2))) - (c ^ 4 / ((b + c) * (b ^ 2 + b * c + c ^ 2))) - (d ^ 4 / ((c + d) * (c ^ 2 + c * d + d ^ 2)))
  scale Titu_normal_right_4vars (u1 := (d ^ 2)) (u2 := (c ^ 2)) (u3 := (a ^ 2)) (u4 := (b ^ 2)) (v1 := ((c + d) * (((c ^ 2) + (c * d)) + (d ^ 2)))) (v2 := ((b + c) * (((b ^ 2) + (b * c)) + (c ^ 2)))) (v3 := ((a + d) * (((a ^ 2) + (a * d)) + (d ^ 2)))) (v4 := ((a + b) * (((a ^ 2) + (a * b)) + (b ^ 2)))) (k := 1) (l := ((((((a ^ 2) + (b ^ 2)) + (c ^ 2)) + (d ^ 2)) ^ 2) / (((((a + b) * (((a ^ 2) + (a * b)) + (b ^ 2))) + ((a + d) * (((a ^ 2) + (a * d)) + (d ^ 2)))) + ((b + c) * (((b ^ 2) + (b * c)) + (c ^ 2)))) + ((c + d) * (((c ^ 2) + (c * d)) + (d ^ 2)))))) (left := a ^ 2 / (a + b + c + d) + b ^ 2 / (a + b + c + d) + c ^ 2 / (a + b + c + d) + d ^ 2 / (a + b + c + d))
  llm_cancel_factor (a ^ 2 / (a + b + c + d) + b ^ 2 / (a + b + c + d) + c ^ 2 / (a + b + c + d) + d ^ 2 / (a + b + c + d)) - ((d ^ 2 + c ^ 2 + a ^ 2 + b ^ 2) ^ 2 / ((c + d) * (c ^ 2 + c * d + d ^ 2) + (b + c) * (b ^ 2 + b * c + c ^ 2) + (a + d) * (a ^ 2 + a * d + d ^ 2) + (a + b) * (a ^ 2 + a * b + b ^ 2)) + (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) ^ 2 / ((a + b) * (a ^ 2 + a * b + b ^ 2) + (a + d) * (a ^ 2 + a * d + d ^ 2) + (b + c) * (b ^ 2 + b * c + c ^ 2) + (c + d) * (c ^ 2 + c * d + d ^ 2))) = (1 / (a + b + c + d)) * (1 / (a ^ 3 + a ^ 2 * b + a ^ 2 * d + a * b ^ 2 + a * d ^ 2 + b ^ 3 + b ^ 2 * c + b * c ^ 2 + c ^ 3 + c ^ 2 * d + c * d ^ 2 + d ^ 3)) * (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) * (-(a * c ^ 2) - (b * d ^ 2) - (c * a ^ 2) - (d * b ^ 2))
  try close

theorem P66 {a b c : ℝ} (ha : a ≥ 0) (hb : b ≥ 0) (hc : c ≥ 0) : (a + b + c) ^ 2 ≤ a * sqrt(a ^ 2 + 4 * b ^ 2 + 4 * c ^ 2) + b * sqrt(b ^ 2 + 4 * c ^ 2 + 4 * a ^ 2) + c * sqrt(c ^ 2 + 4 * a ^ 2 + 4 * b ^ 2) := by
  sorry

theorem P67b {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) (h_ : a * b ^ 2 + a * c ^ 2 + b * a ^ 2 + b * c ^ 2 + c * a ^ 2 + c * b ^ 2 - 2 * a * b * c > 0) : 2 * a / (b + c) + 2 * b / (c + a) + 2 * c / (a + b) ≤ (b ^ 2 + c ^ 2) / (a ^ 2 + b * c) + (c ^ 2 + a ^ 2) / (b ^ 2 + c * a) + (a ^ 2 + b ^ 2) / (c ^ 2 + a * b) := by
  intro_by_homogeneous a + b + c = 3
  scale Titu_variant1_right_3vars (u1 := ((b ^ 2) + (c ^ 2))) (u2 := ((c ^ 2) + (a ^ 2))) (u3 := ((a ^ 2) + (b ^ 2))) (v1 := ((a ^ 2) + (b * c))) (v2 := ((b ^ 2) + (c * a))) (v3 := ((c ^ 2) + (a * b))) (k := 1) (l := 0) (left := 2 * a / (b + c) + 2 * b / (c + a) + 2 * c / (a + b))
  llm_frac_together 2 * a / (b + c) + 2 * b / (c + a) + 2 * c / (a + b) - ((b ^ 2 + c ^ 2 + c ^ 2 + a ^ 2 + a ^ 2 + b ^ 2) ^ 2 / ((b ^ 2 + c ^ 2) * (a ^ 2 + b * c) + (c ^ 2 + a ^ 2) * (b ^ 2 + c * a) + (a ^ 2 + b ^ 2) * (c ^ 2 + a * b))) = (2 * a * (c + a) * (a + b) + 2 * b * (b + c) * (a + b) + 2 * c * (b + c) * (c + a)) / ((a + b) * (a + c) * (b + c)) - (4 * (b ^ 2 + c ^ 2 + a ^ 2) ^ 2 / ((a ^ 2 + b ^ 2) * (a * b + c ^ 2) + (a ^ 2 + c ^ 2) * (a * c + b ^ 2) + (a ^ 2 + b * c) * (b ^ 2 + c ^ 2)))
  llm_cancel_denom ((2 * a * (c + a) * (a + b) + 2 * b * (b + c) * (a + b) + 2 * c * (b + c) * (c + a)) / ((a + b) * (a + c) * (b + c))) - (4 * (b ^ 2 + c ^ 2 + a ^ 2) ^ 2 / ((a ^ 2 + b ^ 2) * (a * b + c ^ 2) + (a ^ 2 + c ^ 2) * (a * c + b ^ 2) + (a ^ 2 + b * c) * (b ^ 2 + c ^ 2))) = (((a ^ 2 + b ^ 2) * (c ^ 2 + a * b) + (a ^ 2 + c ^ 2) * (b ^ 2 + a * c) + (a ^ 2 + b * c) * (b ^ 2 + c ^ 2)) * (2 * a * (a + b) * (a + c) + 2 * b * (a + b) * (b + c) + 2 * c * (a + c) * (b + c)) - (4 * (a ^ 2 + b ^ 2 + c ^ 2) ^ 2 * (a + b) * (a + c) * (b + c))) / ((a + b) * (a + c) * (b + c) * ((a ^ 2 + b ^ 2) * (c ^ 2 + a * b) + (a ^ 2 + c ^ 2) * (b ^ 2 + a * c) + (a ^ 2 + b * c) * (b ^ 2 + c ^ 2)))
  llm_cancel_factor (((a ^ 2 + b ^ 2) * (c ^ 2 + a * b) + (a ^ 2 + c ^ 2) * (b ^ 2 + a * c) + (a ^ 2 + b * c) * (b ^ 2 + c ^ 2)) * (2 * a * (a + b) * (a + c) + 2 * b * (a + b) * (b + c) + 2 * c * (a + c) * (b + c))) - (4 * (a ^ 2 + b ^ 2 + c ^ 2) ^ 2 * (a + b) * (a + c) * (b + c)) = (2) * (a ^ 2 * b ^ 5 + a ^ 2 * c ^ 5 + a ^ 5 * b ^ 2 + a ^ 5 * c ^ 2 + b ^ 2 * c ^ 5 + b ^ 5 * c ^ 2 + 2 * a * b ^ 3 * c ^ 3 + 2 * b * a ^ 3 * c ^ 3 + 2 * c * a ^ 3 * b ^ 3 - (a * b ^ 6) - (a * c ^ 6) - (b * a ^ 6) - (b * c ^ 6) - (c * a ^ 6) - (c * b ^ 6) - (2 * a * b * c ^ 5) - (2 * a * c * b ^ 5) - (2 * b * c * a ^ 5))
  llm_exp_expand a ^ 2 * b ^ 5 + a ^ 2 * c ^ 5 + a ^ 5 * b ^ 2 + a ^ 5 * c ^ 2 + b ^ 2 * c ^ 5 + b ^ 5 * c ^ 2 + 2 * a * b ^ 3 * c ^ 3 + 2 * b * a ^ 3 * c ^ 3 + 2 * c * a ^ 3 * b ^ 3 - (2 * b * c * a ^ 5 + 2 * a * c * b ^ 5 + 2 * a * b * c ^ 5 + c * b ^ 6 + c * a ^ 6 + b * c ^ 6 + b * a ^ 6 + a * c ^ 6 + a * b ^ 6) = a ^ 2 * b ^ 5 + a ^ 2 * c ^ 5 + a ^ 5 * (b - (c)) ^ 2 + b ^ 2 * c ^ 2 * (c ^ 3 + b ^ 3) + 2 * a * b * c * (b ^ 2 * c ^ 2 + a ^ 2 * c ^ 2 + a ^ 2 * b ^ 2 - (b ^ 4) - (c ^ 4)) - (c * b ^ 6 + c * a ^ 6 + b * c ^ 6 + b * a ^ 6 + a * c ^ 6 + a * b ^ 6)
  scale Muirhead_Qeq1_onestep_right_2vars (u := b) (v := c) (p := 6) (k := 1) (l := ((c * (a ^ 6)) + ((b * (a ^ 6)) + ((a * (c ^ 6)) + (a * (b ^ 6)))))) (left := a ^ 2 * b ^ 5 + a ^ 2 * c ^ 5 + a ^ 5 * (b - c) ^ 2 + b ^ 2 * c ^ 2 * (c ^ 3 + b ^ 3) + 2 * a * b * c * (b ^ 2 * c ^ 2 + a ^ 2 * c ^ 2 + a ^ 2 * b ^ 2 - b ^ 4 - c ^ 4))
  scale Muirhead_Qeq1_onestep_right_2vars (u := a) (v := b) (p := 6) (k := 1) (l := (((((b ^ 5) * (c ^ 2)) + ((c ^ 5) * (b ^ 2))) + (c * (a ^ 6))) + (a * (c ^ 6)))) (left := a ^ 2 * b ^ 5 + a ^ 2 * c ^ 5 + a ^ 5 * (b - c) ^ 2 + b ^ 2 * c ^ 2 * (c ^ 3 + b ^ 3) + 2 * a * b * c * (b ^ 2 * c ^ 2 + a ^ 2 * c ^ 2 + a ^ 2 * b ^ 2 - b ^ 4 - c ^ 4))
  llm_frac_apart a ^ 2 * b ^ 5 + a ^ 2 * c ^ 5 + a ^ 5 * (b - c) ^ 2 + b ^ 2 * c ^ 2 * (c ^ 3 + b ^ 3) + 2 * a * b * c * (b ^ 2 * c ^ 2 + a ^ 2 * c ^ 2 + a ^ 2 * b ^ 2 - b ^ 4 - c ^ 4) - (a ^ 5 * b ^ 2 + b ^ 5 * a ^ 2 + b ^ 5 * c ^ 2 + c ^ 5 * b ^ 2 + c * a ^ 6 + a * c ^ 6) = a ^ 5 * c ^ 2 + a ^ 2 * c ^ 5 + 2 * a * b ^ 3 * c ^ 3 + 2 * a ^ 3 * b * c ^ 3 + 2 * a ^ 3 * b ^ 3 * c - (2 * b * c * a ^ 5) - (2 * a * b ^ 5 * c) - (2 * a * b * c ^ 5) - (c * a ^ 6) - (a * c ^ 6)
  scale Muirhead_Qeq1_onestep_right_2vars (u := c) (v := a) (p := 6) (k := 1) (l := ((((2 * a) * b) * (c ^ 5)) + ((((2 * a) * (b ^ 5)) * c) + (((2 * b) * c) * (a ^ 5))))) (left := a ^ 5 * c ^ 2 + a ^ 2 * c ^ 5 + 2 * a * b ^ 3 * c ^ 3 + 2 * a ^ 3 * b * c ^ 3 + 2 * a ^ 3 * b ^ 3 * c)
  llm_cancel_factor (a ^ 5 * c ^ 2 + a ^ 2 * c ^ 5 + 2 * a * b ^ 3 * c ^ 3 + 2 * a ^ 3 * b * c ^ 3 + 2 * a ^ 3 * b ^ 3 * c) - (c ^ 5 * a ^ 2 + a ^ 5 * c ^ 2 + 2 * a * b * c ^ 5 + 2 * a * b ^ 5 * c + 2 * b * c * a ^ 5) = (2) * (a) * (b) * (c) * (a ^ 2 * b ^ 2 + a ^ 2 * c ^ 2 + b ^ 2 * c ^ 2 - (a ^ 4) - (b ^ 4) - (c ^ 4))
  scale Rearrange_cycle_mul_right_3vars (u := (c ^ 2)) (v := (b ^ 2)) (w := (a ^ 2)) (i1 := 1) (j1 := 0) (i2 := 1) (j2 := 0) (k := 1) (l := 0) (left := a ^ 2 * b ^ 2 + a ^ 2 * c ^ 2 + b ^ 2 * c ^ 2)

theorem P68 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) : 27 * (a + b) * (b + c) * (c + a) / (4 * (a + b + c) * (a * b + b * c + c * a)) ≤ sqrt(2 * (b + c) / a) + sqrt(2 * (c + a) / b) + sqrt(2 * (a + b) / c) := by
  sorry

theorem P69 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) : 9 / (2 * (a * b + b * c + c * a)) ≤ 1 / (a * sqrt(2 * (a ^ 2 + b * c))) + 1 / (b * sqrt(2 * (b ^ 2 + c * a))) + 1 / (c * sqrt(2 * (c ^ 2 + a * b))) := by
  sorry

theorem P70 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) : 1 ≤ (a ^ 3 + 2 * a * b * c) / (a ^ 3 + (b + c) ^ 3) + (b ^ 3 + 2 * a * b * c) / (b ^ 3 + (c + a) ^ 3) + (c ^ 3 + 2 * a * b * c) / (c ^ 3 + (a + b) ^ 3)
  intro_by_homogeneous a + b + c = 3
  llm_frac_apart 1 - ((a ^ 3 + 2 * a * b * c) / (a ^ 3 + (b + c) ^ 3) + (b ^ 3 + 2 * a * b * c) / (b ^ 3 + (c + a) ^ 3) + (c ^ 3 + 2 * a * b * c) / (c ^ 3 + (a + b) ^ 3)) = 1 - (a ^ 3 / (a ^ 3 + (b + c) ^ 3)) - (b ^ 3 / (b ^ 3 + (a + c) ^ 3)) - (c ^ 3 / (c ^ 3 + (a + b) ^ 3)) - (2 * a * b * c / (a ^ 3 + (b + c) ^ 3)) - (2 * a * b * c / (b ^ 3 + (a + c) ^ 3)) - (2 * a * b * c / (c ^ 3 + (a + b) ^ 3))
  scale Titu_variant1_right_3vars (u1 := (a * (b * c))) (u2 := (a * (b * c))) (u3 := (a * (b * c))) (v1 := ((c ^ 3) + ((a + b) ^ 3))) (v2 := ((b ^ 3) + ((a + c) ^ 3))) (v3 := ((a ^ 3) + ((b + c) ^ 3))) (k := 2) (l := (((c ^ 3) / ((c ^ 3) + ((a + b) ^ 3))) + (((b ^ 3) / ((b ^ 3) + ((a + c) ^ 3))) + ((a ^ 3) / ((a ^ 3) + ((b + c) ^ 3)))))) (left := 1)
  scale AM_GM_normal_right_3vars (u := ((a * b) * c)) (v := ((a * b) * c)) (w := ((a * b) * c)) (k := (((((a * b) * c) + ((a * b) * c)) + ((a * b) * c)) * ((1 / (((((a * b) * c) * ((c ^ 3) + ((a + b) ^ 3))) + (((a * b) * c) * ((b ^ 3) + ((a + c) ^ 3)))) + (((a * b) * c) * ((a ^ 3) + ((b + c) ^ 3))))) * 2))) (l := (((c ^ 3) / ((c ^ 3) + ((a + b) ^ 3))) + (((b ^ 3) / ((b ^ 3) + ((a + c) ^ 3))) + ((a ^ 3) / ((a ^ 3) + ((b + c) ^ 3)))))) (left := 1)
  scale AM_GM_normal_right_3vars (u := ((a * b) * c)) (v := ((a * b) * c)) (w := ((a * b) * c)) (k := (((1 / (((((a * b) * c) * ((c ^ 3) + ((a + b) ^ 3))) + (((a * b) * c) * ((b ^ 3) + ((a + c) ^ 3)))) + (((a * b) * c) * ((a ^ 3) + ((b + c) ^ 3))))) * (2 * (((((((((a * b) * c) * a) * b) * c) * a) * b) * c) ^ (1 / 3)))) * 3)) (l := (((c ^ 3) / ((c ^ 3) + ((a + b) ^ 3))) + (((b ^ 3) / ((b ^ 3) + ((a + c) ^ 3))) + ((a ^ 3) / ((a ^ 3) + ((b + c) ^ 3)))))) (left := 1)
  llm_factor 1 - (3 * (1 / (a * b * c * (c ^ 3 + (a + b) ^ 3) + a * b * c * (b ^ 3 + (a + c) ^ 3) + a * b * c * (a ^ 3 + (b + c) ^ 3))) * 2 * (a * b * c * a * b * c * a * b * c) ^ (1 / 3) * 3 * (a * b * c * a * b * c * a * b * c) ^ (1 / 3) + c ^ 3 / (c ^ 3 + (a + b) ^ 3) + b ^ 3 / (b ^ 3 + (a + c) ^ 3) + a ^ 3 / (a ^ 3 + (b + c) ^ 3)) = 1 - (c ^ 3 / ((a + b + c) * (a ^ 2 + 2 * a * b + b ^ 2 + c ^ 2 - (a * c) - (b * c)))) - (b ^ 3 / ((a + b + c) * (a ^ 2 + 2 * a * c + b ^ 2 + c ^ 2 - (a * b) - (b * c)))) - (a ^ 3 / ((a + b + c) * (a ^ 2 + b ^ 2 + 2 * b * c + c ^ 2 - (a * b) - (a * c)))) - (6 * (a ^ 3 * b ^ 3 * c ^ 3) ^ (2 / 3) / ((a + b + c) * (a) * (a ^ 2 + b ^ 2 + c ^ 2) * (b) * (c)))
  llm_exp_expand 1 - (6 * (a ^ 3 * b ^ 3 * c ^ 3) ^ (2 / 3) / ((a + b + c) * a * (a ^ 2 + b ^ 2 + c ^ 2) * b * c) + a ^ 3 / ((a + b + c) * (a ^ 2 + b ^ 2 + 2 * b * c + c ^ 2 - a * b - a * c)) + b ^ 3 / ((a + b + c) * (a ^ 2 + 2 * a * c + b ^ 2 + c ^ 2 - a * b - b * c)) + c ^ 3 / ((a + b + c) * (a ^ 2 + 2 * a * b + b ^ 2 + c ^ 2 - a * c - b * c))) = 1 - (c ^ 3 / ((a + b + c) * (a ^ 2 + 2 * a * b + b ^ 2 + c ^ 2 - (a * c) - (b * c)))) - (b ^ 3 / ((a + b + c) * (a ^ 2 + 2 * a * c + b ^ 2 + c ^ 2 - (a * b) - (b * c)))) - (a ^ 3 / ((a + b + c) * (a ^ 2 + b ^ 2 + 2 * b * c + c ^ 2 - (a * b) - (a * c)))) - (6 * (a ^ 3) ^ (2 / 3) * (b ^ 3) ^ (2 / 3) * (c ^ 3) ^ (2 / 3) / ((a + b + c) * (a) * (a ^ 2 + b ^ 2 + c ^ 2) * (b) * (c)))
  llm_mul_expand 1 - (6 * (a ^ 3) ^ (2 / 3) * (b ^ 3) ^ (2 / 3) * (c ^ 3) ^ (2 / 3) / ((a + b + c) * a * (a ^ 2 + b ^ 2 + c ^ 2) * b * c) + a ^ 3 / ((a + b + c) * (a ^ 2 + b ^ 2 + 2 * b * c + c ^ 2 - a * b - a * c)) + b ^ 3 / ((a + b + c) * (a ^ 2 + 2 * a * c + b ^ 2 + c ^ 2 - a * b - b * c)) + c ^ 3 / ((a + b + c) * (a ^ 2 + 2 * a * b + b ^ 2 + c ^ 2 - a * c - b * c))) = 1 - (c ^ 3 / (a ^ 3 + 3 * a ^ 2 * b + 3 * a * b ^ 2 + b ^ 3 + c ^ 3)) - (b ^ 3 / (a ^ 3 + 3 * a ^ 2 * c + 3 * a * c ^ 2 + b ^ 3 + c ^ 3)) - (a ^ 3 / (a ^ 3 + b ^ 3 + 3 * b ^ 2 * c + 3 * b * c ^ 2 + c ^ 3)) - (6 * (a ^ 3) ^ (2 / 3) * (b ^ 3) ^ (2 / 3) * (c ^ 3) ^ (2 / 3) / (a ^ 4 * b * c + a ^ 3 * b ^ 2 * c + a ^ 3 * b * c ^ 2 + a ^ 2 * b ^ 3 * c + a ^ 2 * b * c ^ 3 + a * b ^ 4 * c + a * b ^ 3 * c ^ 2 + a * b ^ 2 * c ^ 3 + a * b * c ^ 4))
  llm_factor 1 - (6 * (a ^ 3) ^ (2 / 3) * (b ^ 3) ^ (2 / 3) * (c ^ 3) ^ (2 / 3) / (a ^ 4 * b * c + a ^ 3 * b ^ 2 * c + a ^ 3 * b * c ^ 2 + a ^ 2 * b ^ 3 * c + a ^ 2 * b * c ^ 3 + a * b ^ 4 * c + a * b ^ 3 * c ^ 2 + a * b ^ 2 * c ^ 3 + a * b * c ^ 4) + a ^ 3 / (a ^ 3 + b ^ 3 + 3 * b ^ 2 * c + 3 * b * c ^ 2 + c ^ 3) + b ^ 3 / (a ^ 3 + 3 * a ^ 2 * c + 3 * a * c ^ 2 + b ^ 3 + c ^ 3) + c ^ 3 / (a ^ 3 + 3 * a ^ 2 * b + 3 * a * b ^ 2 + b ^ 3 + c ^ 3)) = 1 - (c ^ 3 / ((a + b + c) * (a ^ 2 + 2 * a * b + b ^ 2 + c ^ 2 - (a * c) - (b * c)))) - (b ^ 3 / ((a + b + c) * (a ^ 2 + 2 * a * c + b ^ 2 + c ^ 2 - (a * b) - (b * c)))) - (a ^ 3 / ((a + b + c) * (a ^ 2 + b ^ 2 + 2 * b * c + c ^ 2 - (a * b) - (a * c)))) - (6 * (a ^ 3) ^ (2 / 3) * (b ^ 3) ^ (2 / 3) * (c ^ 3) ^ (2 / 3) / ((a + b + c) * (a) * (a ^ 2 + b ^ 2 + c ^ 2) * (b) * (c)))
  llm_simplify 1 - (6 * (a ^ 3) ^ (2 / 3) * (b ^ 3) ^ (2 / 3) * (c ^ 3) ^ (2 / 3) / ((a + b + c) * a * (a ^ 2 + b ^ 2 + c ^ 2) * b * c) + a ^ 3 / ((a + b + c) * (a ^ 2 + b ^ 2 + 2 * b * c + c ^ 2 - a * b - a * c)) + b ^ 3 / ((a + b + c) * (a ^ 2 + 2 * a * c + b ^ 2 + c ^ 2 - a * b - b * c)) + c ^ 3 / ((a + b + c) * (a ^ 2 + 2 * a * b + b ^ 2 + c ^ 2 - a * c - b * c))) = 1 - (c ^ 3 / ((a + b + c) * (a ^ 2 + 2 * a * b + b ^ 2 + c ^ 2 - (a * c) - (b * c)))) - (b ^ 3 / ((a + b + c) * (a ^ 2 + 2 * a * c + b ^ 2 + c ^ 2 - (a * b) - (b * c)))) - (a ^ 3 / ((a + b + c) * (a ^ 2 + b ^ 2 + 2 * b * c + c ^ 2 - (a * b) - (a * c)))) - (6 * a * b * c / ((a + b + c) * (a ^ 2 + b ^ 2 + c ^ 2)))
  llm_frac_together 1 - (6 * a * b * c / ((a + b + c) * (a ^ 2 + b ^ 2 + c ^ 2)) + a ^ 3 / ((a + b + c) * (a ^ 2 + b ^ 2 + 2 * b * c + c ^ 2 - a * b - a * c)) + b ^ 3 / ((a + b + c) * (a ^ 2 + 2 * a * c + b ^ 2 + c ^ 2 - a * b - b * c)) + c ^ 3 / ((a + b + c) * (a ^ 2 + 2 * a * b + b ^ 2 + c ^ 2 - a * c - b * c))) = 1 - (c ^ 3 / (a ^ 3 + 3 * a ^ 2 * b + 3 * a * b ^ 2 + b ^ 3 + c ^ 3)) - (b ^ 3 / (a ^ 3 + 3 * a ^ 2 * c + 3 * a * c ^ 2 + b ^ 3 + c ^ 3)) - (a ^ 3 / (a ^ 3 + b ^ 3 + 3 * b ^ 2 * c + 3 * b * c ^ 2 + c ^ 3)) - (6 * a * b * c / (a ^ 3 + a ^ 2 * b + a ^ 2 * c + a * b ^ 2 + a * c ^ 2 + b ^ 3 + b ^ 2 * c + b * c ^ 2 + c ^ 3))
  llm_cancel_denom (1) - (6 * a * b * c / (a ^ 3 + a ^ 2 * b + a ^ 2 * c + a * b ^ 2 + a * c ^ 2 + b ^ 3 + b ^ 2 * c + b * c ^ 2 + c ^ 3) + a ^ 3 / (a ^ 3 + b ^ 3 + 3 * b ^ 2 * c + 3 * b * c ^ 2 + c ^ 3) + b ^ 3 / (a ^ 3 + 3 * a ^ 2 * c + 3 * a * c ^ 2 + b ^ 3 + c ^ 3) + c ^ 3 / (a ^ 3 + 3 * a ^ 2 * b + 3 * a * b ^ 2 + b ^ 3 + c ^ 3)) = ((a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * b * a ^ 2) * (a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * c * a ^ 2) * (a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * c ^ 2 + 3 * c * b ^ 2) * (a ^ 3 + b ^ 3 + c ^ 3 + a * b ^ 2 + a * c ^ 2 + b * a ^ 2 + b * c ^ 2 + c * a ^ 2 + c * b ^ 2) - (a ^ 3 * (a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * b * a ^ 2) * (a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * c * a ^ 2) * (a ^ 3 + b ^ 3 + c ^ 3 + a * b ^ 2 + a * c ^ 2 + b * a ^ 2 + b * c ^ 2 + c * a ^ 2 + c * b ^ 2)) - (b ^ 3 * (a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * b * a ^ 2) * (a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * c ^ 2 + 3 * c * b ^ 2) * (a ^ 3 + b ^ 3 + c ^ 3 + a * b ^ 2 + a * c ^ 2 + b * a ^ 2 + b * c ^ 2 + c * a ^ 2 + c * b ^ 2)) - (c ^ 3 * (a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * c * a ^ 2) * (a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * c ^ 2 + 3 * c * b ^ 2) * (a ^ 3 + b ^ 3 + c ^ 3 + a * b ^ 2 + a * c ^ 2 + b * a ^ 2 + b * c ^ 2 + c * a ^ 2 + c * b ^ 2)) - (6 * a * b * c * (a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * b * a ^ 2) * (a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * c * a ^ 2) * (a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * c ^ 2 + 3 * c * b ^ 2))) / ((a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * b * a ^ 2) * (a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * c * a ^ 2) * (a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * c ^ 2 + 3 * c * b ^ 2) * (a ^ 3 + b ^ 3 + c ^ 3 + a * b ^ 2 + a * c ^ 2 + b * a ^ 2 + b * c ^ 2 + c * a ^ 2 + c * b ^ 2))
  llm_cancel_factor ((a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * b * a ^ 2) * (a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * c * a ^ 2) * (a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * c ^ 2 + 3 * c * b ^ 2) * (a ^ 3 + b ^ 3 + c ^ 3 + a * b ^ 2 + a * c ^ 2 + b * a ^ 2 + b * c ^ 2 + c * a ^ 2 + c * b ^ 2)) - (6 * a * b * c * (a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * b * a ^ 2) * (a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * c * a ^ 2) * (a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * c ^ 2 + 3 * c * b ^ 2) + c ^ 3 * (a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * c * a ^ 2) * (a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * c ^ 2 + 3 * c * b ^ 2) * (a ^ 3 + b ^ 3 + c ^ 3 + a * b ^ 2 + a * c ^ 2 + b * a ^ 2 + b * c ^ 2 + c * a ^ 2 + c * b ^ 2) + b ^ 3 * (a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * b * a ^ 2) * (a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * c ^ 2 + 3 * c * b ^ 2) * (a ^ 3 + b ^ 3 + c ^ 3 + a * b ^ 2 + a * c ^ 2 + b * a ^ 2 + b * c ^ 2 + c * a ^ 2 + c * b ^ 2) + a ^ 3 * (a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * b * a ^ 2) * (a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * c * a ^ 2) * (a ^ 3 + b ^ 3 + c ^ 3 + a * b ^ 2 + a * c ^ 2 + b * a ^ 2 + b * c ^ 2 + c * a ^ 2 + c * b ^ 2)) = (3) * (a) * (b) * (c) * ((a + b + c) ^ 3) * (a * b ^ 5 + a * c ^ 5 + b * a ^ 5 + b * c ^ 5 + c * a ^ 5 + c * b ^ 5 + 2 * a ^ 2 * b ^ 4 + 2 * a ^ 2 * c ^ 4 + 2 * a ^ 4 * b ^ 2 + 2 * a ^ 4 * c ^ 2 + 2 * b ^ 2 * c ^ 4 + 2 * b ^ 4 * c ^ 2 + 3 * a * b ^ 2 * c ^ 3 + 3 * a * b ^ 3 * c ^ 2 + 3 * b * a ^ 2 * c ^ 3 + 3 * b * a ^ 3 * c ^ 2 + 3 * c * a ^ 2 * b ^ 3 + 3 * c * a ^ 3 * b ^ 2 - (2 * a ^ 6) - (2 * b ^ 6) - (2 * c ^ 6) - (2 * a ^ 3 * b ^ 3) - (2 * a ^ 3 * c ^ 3) - (2 * b ^ 3 * c ^ 3) - (12 * a ^ 2 * b ^ 2 * c ^ 2) - (4 * a * b * c ^ 4) - (4 * a * c * b ^ 4) - (4 * b * c * a ^ 4))
  closed_by_sos

theorem P71 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) (h : a ^ 2 + b ^ 2 + c ^ 2 + a * b + b * c + c * a = 6) : 3 / 2 ≤ (a + b) * (b + c) / (4 + (a + c) ^ 2) + (b + c) * (a + c) / (4 + (a + b) ^ 2) + (a + c) * (a + b) / (4 + (b + c) ^ 2) := by
  sorry

theorem P72 {a b c d : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) (hd : d > 0) (h : a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2 = 4) : 1 / a + 1 / b + 1 / c + 1 / d ≤ 2 + 2 / (a * b * c * d) := by
  sorry

theorem P73 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) : (a ^ 2 + a * b + b ^ 2) ^ (2 / 3) + (b ^ 2 + b * c + c ^ 2) ^ (2 / 3) + (c ^ 2 + c * a + a ^ 2) ^ (2 / 3) ≤ ((3 * ((2 * a ^ 2 + b * c) + (2 * b ^ 2 + c * a) + (2 * c ^ 2 + a * b))) ^ 2) ^ (1 / 3) := by
  intro_by_homogeneous a + b + c = 3
  scale Jensen_pow_Rlt1_left_3vars (u := (((a ^ 2) + (a * b)) + (b ^ 2))) (v := (((b ^ 2) + (b * c)) + (c ^ 2))) (w := (((c ^ 2) + (c * a)) + (a ^ 2))) (r := (2 / 3)) (k := 1) (l := 0) (right := ((3 * (2 * a ^ 2 + b * c + (2 * b ^ 2 + c * a) + (2 * c ^ 2 + a * b))) ^ 2) ^ (1 / 3))
  llm_cancel_power 3
  llm_cancel_factor ((3 * ((a ^ 2 + a * b + b ^ 2 + b ^ 2 + b * c + c ^ 2 + c ^ 2 + c * a + a ^ 2) / 3) ^ (2 / 3)) ^ 3) - ((3 * (2 * a ^ 2 + b * c + 2 * b ^ 2 + c * a + 2 * c ^ 2 + a * b)) ^ 2) = (6) * (-(2 * a ^ 2 + 2 * b ^ 2 + 2 * c ^ 2 + a * b + a * c + b * c) ^ 2)
  try close

theorem P74 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) : 1 / (a ^ 2 + 2 * b * c) + 1 / (b ^ 2 + 2 * c * a) + 1 / (c ^ 2 + 2 * a * b) + (a * b + b * c + c * a) / (2 * (a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * a ^ 2)) ≤ 1 / (a ^ 2 + b * c) + 1 / (b ^ 2 + c * a) + 1 / (c ^ 2 + a * b) := by
  intro_by_homogeneous a + b + c = 3
  llm_simplify 1 / (a ^ 2 + 2 * b * c) + 1 / (b ^ 2 + 2 * c * a) + 1 / (c ^ 2 + 2 * a * b) + (a * b + b * c + c * a) / (2 * (a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * a ^ 2)) - (1 / (a ^ 2 + b * c) + 1 / (b ^ 2 + c * a) + 1 / (c ^ 2 + a * b)) = (a * b + b * c + c * a) / (2 * (a ^ 2 * b ^ 2 + a ^ 2 * c ^ 2 + b ^ 2 * c ^ 2)) - (a * b / ((2 * a * b + c ^ 2) * (a * b + c ^ 2))) - (a * c / ((2 * a * c + b ^ 2) * (a * c + b ^ 2))) - (b * c / ((a ^ 2 + 2 * b * c) * (a ^ 2 + b * c)))
  llm_frac_together (a * b + b * c + c * a) / (2 * (a ^ 2 * b ^ 2 + a ^ 2 * c ^ 2 + b ^ 2 * c ^ 2)) - (b * c / ((a ^ 2 + 2 * b * c) * (a ^ 2 + b * c)) + a * c / ((2 * a * c + b ^ 2) * (a * c + b ^ 2)) + a * b / ((2 * a * b + c ^ 2) * (a * b + c ^ 2))) = (a * b + a * c + b * c) / (2 * a ^ 2 * b ^ 2 + 2 * a ^ 2 * c ^ 2 + 2 * b ^ 2 * c ^ 2) - (a * b / (2 * a ^ 2 * b ^ 2 + 3 * a * b * c ^ 2 + c ^ 4)) - (a * c / (2 * a ^ 2 * c ^ 2 + 3 * a * b ^ 2 * c + b ^ 4)) - (b * c / (a ^ 4 + 3 * a ^ 2 * b * c + 2 * b ^ 2 * c ^ 2))
  llm_simplify (a * b + a * c + b * c) / (2 * a ^ 2 * b ^ 2 + 2 * a ^ 2 * c ^ 2 + 2 * b ^ 2 * c ^ 2) - (b * c / (a ^ 4 + 3 * a ^ 2 * b * c + 2 * b ^ 2 * c ^ 2) + a * c / (2 * a ^ 2 * c ^ 2 + 3 * a * b ^ 2 * c + b ^ 4) + a * b / (2 * a ^ 2 * b ^ 2 + 3 * a * b * c ^ 2 + c ^ 4)) = (9 - (a ^ 2 + b ^ 2 + c ^ 2)) / (4 * (a ^ 2 * b ^ 2 + a ^ 2 * c ^ 2 + b ^ 2 * c ^ 2)) - (a * b / (2 * a ^ 2 * b ^ 2 + 3 * a * b * c ^ 2 + c ^ 4) + a * c / (2 * a ^ 2 * c ^ 2 + 3 * a * b ^ 2 * c + b ^ 4) + b * c / (a ^ 4 + 3 * a ^ 2 * b * c + 2 * b ^ 2 * c ^ 2))
  llm_factor (9 - (a ^ 2 + b ^ 2 + c ^ 2)) / (4 * (a ^ 2 * b ^ 2 + a ^ 2 * c ^ 2 + b ^ 2 * c ^ 2)) - (a * b / (2 * a ^ 2 * b ^ 2 + 3 * a * b * c ^ 2 + c ^ 4) + a * c / (2 * a ^ 2 * c ^ 2 + 3 * a * b ^ 2 * c + b ^ 4) + b * c / (a ^ 4 + 3 * a ^ 2 * b * c + 2 * b ^ 2 * c ^ 2)) = -((a ^ 2 + b ^ 2 + c ^ 2 - (9)) / (4 * (a ^ 2 * b ^ 2 + a ^ 2 * c ^ 2 + b ^ 2 * c ^ 2))) - (a * b / ((2 * a * b + c ^ 2) * (a * b + c ^ 2))) - (a * c / ((2 * a * c + b ^ 2) * (a * c + b ^ 2))) - (b * c / ((a ^ 2 + 2 * b * c) * (a ^ 2 + b * c)))
  llm_simplify 0 - ((a ^ 2 + b ^ 2 + c ^ 2 - 9) / (4 * (a ^ 2 * b ^ 2 + a ^ 2 * c ^ 2 + b ^ 2 * c ^ 2)) + b * c / ((a ^ 2 + 2 * b * c) * (a ^ 2 + b * c)) + a * c / ((2 * a * c + b ^ 2) * (a * c + b ^ 2)) + a * b / ((2 * a * b + c ^ 2) * (a * b + c ^ 2))) = -((-(a * b) - (a * c) - (b * c)) / (2 * (a ^ 2 * b ^ 2 + a ^ 2 * c ^ 2 + b ^ 2 * c ^ 2))) - (a * b / ((2 * a * b + c ^ 2) * (a * b + c ^ 2))) - (a * c / ((2 * a * c + b ^ 2) * (a * c + b ^ 2))) - (b * c / ((a ^ 2 + 2 * b * c) * (a ^ 2 + b * c)))
  scale Titu_variant1_right_4vars (u1 := ((-((a * b)) - (a * c)) - (b * c))) (u2 := (b * c)) (u3 := (a * c)) (u4 := (a * b)) (v1 := (2 * ((((a ^ 2) * (b ^ 2)) + ((a ^ 2) * (c ^ 2))) + ((b ^ 2) * (c ^ 2))))) (v2 := (((a ^ 2) + ((2 * b) * c)) * ((a ^ 2) + (b * c)))) (v3 := ((((2 * a) * c) + (b ^ 2)) * ((a * c) + (b ^ 2)))) (v4 := ((((2 * a) * b) + (c ^ 2)) * ((a * b) + (c ^ 2)))) (k := 1) (l := 0) (left := 0)
  sym_simplify 0  -  (-(a * b) - a * c - b * c + b * c + a * c + a * b) ^ 2 / ((-(a * b) - a * c - b * c) * 2 * (a ^ 2 * b ^ 2 + a ^ 2 * c ^ 2 + b ^ 2 * c ^ 2) + b * c * (a ^ 2 + 2 * b * c) * (a ^ 2 + b * c) + a * c * (2 * a * c + b ^ 2) * (a * c + b ^ 2) + a * b * (2 * a * b + c ^ 2) * (a * b + c ^ 2)) = 0
  try close

theorem P75 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) : a + b + c ≤ a ^ 2 * (b + c) / (b ^ 2 + c ^ 2) + b ^ 2 * (c + a) / (c ^ 2 + a ^ 2) + c ^ 2 * (a + b) / (a ^ 2 + b ^ 2) := by
  intro_by_homogeneous a + b + c = 3
  scale Titu_variant1_right_3vars (u1 := ((a ^ 2) * (b + c))) (u2 := ((b ^ 2) * (c + a))) (u3 := ((c ^ 2) * (a + b))) (v1 := ((b ^ 2) + (c ^ 2))) (v2 := ((c ^ 2) + (a ^ 2))) (v3 := ((a ^ 2) + (b ^ 2))) (k := 1) (l := 0) (left := a + b + c)
  llm_cancel_factor (a + b + c) - ((a ^ 2 * (b + c) + b ^ 2 * (c + a) + c ^ 2 * (a + b)) ^ 2 / (a ^ 2 * (b + c) * (b ^ 2 + c ^ 2) + b ^ 2 * (c + a) * (c ^ 2 + a ^ 2) + c ^ 2 * (a + b) * (a ^ 2 + b ^ 2))) = (a) * (b) * (c) * (1 / (a ^ 3 * b ^ 2 + a ^ 3 * c ^ 2 + a ^ 2 * b ^ 3 + 2 * a ^ 2 * b ^ 2 * c + 2 * a ^ 2 * b * c ^ 2 + a ^ 2 * c ^ 3 + 2 * a * b ^ 2 * c ^ 2 + b ^ 3 * c ^ 2 + b ^ 2 * c ^ 3)) * (a * b ^ 2 + a * c ^ 2 + b * a ^ 2 + b * c ^ 2 + c * a ^ 2 + c * b ^ 2 - (2 * a ^ 3) - (2 * b ^ 3) - (2 * c ^ 3))
  scale Muirhead_Qeq1Req0_split_right_3vars (u := c) (v := b) (w := a) (p := 3) (k := 2) (l := 0) (left := a * b ^ 2 + a * c ^ 2 + b * a ^ 2 + b * c ^ 2 + c * a ^ 2 + c * b ^ 2)
  sym_simplify a * b ^ 2 + a * c ^ 2 + b * a ^ 2 + b * c ^ 2 + c * a ^ 2 + c * b ^ 2  -  2 * (c ^ 2 * b + b ^ 2 * a + a ^ 2 * c + c ^ 2 * a + b ^ 2 * c + a ^ 2 * b) / 2 = 0
  try close

theorem P76 {a b c d : ℝ} (ha : a ≥ b) (hb : b ≥ c) (hc : c ≥ d) (hd : d ≥ 0) (h : a + b + c + d = 2) : a * b * (b + c) + b * c * (c + d) + c * d * (d + a) + d * a * (a + b) ≤ 1 := by
  make_homogeneous a * b * (b + c) + a * d * (a + b) + b * c * (c + d) + c * d * (a + d) - ((a / 2 + b / 2 + c / 2 + d / 2) ^ 3) ≤ 0
  llm_cancel_factor (a * b * (b + c) + a * d * (a + b) + b * c * (c + d) + c * d * (a + d)) - ((a / 2 + b / 2 + c / 2 + d / 2) ^ 3) = (1 / 8) * (b + d - (a) - (c)) * (a ^ 2 + c ^ 2 + 2 * a * c + 4 * a * b + 4 * c * d - (b ^ 2) - (d ^ 2) - (4 * a * d) - (4 * b * c) - (2 * b * d))
  try close

theorem P77 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) (h : a * b + b * c + c * a = 3) : 1 + 3 / (2 * (a + b + c)) ≤ 1 / (a + b) + 1 / (b + c) + 1 / (c + a) := by
  llm_cancel_denom ((2 * (a + b + c) + 3) / (2 * (a + b + c))) - (1 / (b + c) + 1 / (a + c) + 1 / (a + b)) = ((a + b) * (a + c) * (b + c) * (3 + 2 * a + 2 * b + 2 * c) - ((2 * a + 2 * b + 2 * c) * ((a + b) * (a + c) + (a + b) * (b + c) + (a + c) * (b + c)))) / ((a + b) * (a + c) * (b + c) * (2 * a + 2 * b + 2 * c))
  sym_pqr_method 2 * (a + b) * (3 * b * (a + b) * (2 * a + 4 * b + sqrt (3) * sqrt (b * (b + 2 * a))) - (sqrt (3) * sqrt (b * (b + 2 * a)) * (a + 2 * b) * (a + 5 * b))) / 3 ≤ 0
  llm_frac_together 2 * (a + b) * (3 * b * (a + b) * (2 * a + 4 * b + sqrt 3 * sqrt(b * (b + 2 * a))) - sqrt 3 * sqrt(b * (b + 2 * a)) * (a + 2 * b) * (a + 5 * b)) / 3 - (0) = 2 * (a + b) * (6 * a * b * (a + b) + 12 * b ^ 2 * (a + b) - (sqrt (3) * sqrt (b * (b + 2 * a)) * (a ^ 2 + 4 * a * b + 7 * b ^ 2))) / (3)
  llm_simplify 2 * (a + b) * (6 * a * b * (a + b) + 12 * b ^ 2 * (a + b) - sqrt 3 * sqrt(b * (b + 2 * a)) * (a ^ 2 + 4 * a * b + 7 * b ^ 2)) / 3 - (0) = 2 * (a + b) * ((a + b) * (6 * a * b + 12 * b ^ 2) - (sqrt (3) * sqrt (b * (b + 2 * a)) * (a ^ 2 + 4 * a * b + 7 * b ^ 2))) / (3)
  llm_cancel_factor 2 * (a + b) * ((a + b) * (6 * a * b + 12 * b ^ 2) - sqrt 3 * sqrt(b * (b + 2 * a)) * (a ^ 2 + 4 * a * b + 7 * b ^ 2)) / 3 - (0) = 2 * (a + b) * (6 * b * (a + b) * (a + 2 * b) - (sqrt (3) * sqrt (b * (b + 2 * a)) * ((a + 2 * b) ^ 2 + 3 * b ^ 2))) / (3)
  llm_cancel_power 2
  llm_mul_expand (6 * b * (a + b) * (a + 2 * b)) ^ 2 - ((sqrt 3 * sqrt(b * (b + 2 * a)) * ((a + 2 * b) ^ 2 + 3 * b ^ 2)) ^ 2) = 12 * a ^ 3 * b ^ 3 + 42 * a ^ 2 * b ^ 4 - (3 * b ^ 6) - (30 * a * b ^ 5) - (15 * a ^ 4 * b ^ 2) - (6 * b * a ^ 5)
  scale weighted_AM_GM_normal_left_2vars (u := a) (v := b) (i1 := 2) (i2 := 2) (k := (42 * (b ^ 2))) (l := ((12 * (a ^ 3)) * (b ^ 3))) (right := 6 * b * a ^ 5 + 15 * a ^ 4 * b ^ 2 + 30 * a * b ^ 5 + 3 * b ^ 6)
  llm_cancel_factor (42 * b ^ 2 * ((2 * a + 2 * b) / 4) ^ 4 + 12 * a ^ 3 * b ^ 3) - (6 * b * a ^ 5 + 15 * a ^ 4 * b ^ 2 + 30 * a * b ^ 5 + 3 * b ^ 6) = (3 / 8) * (b) * ((a - (b)) ^ 2) * (-(b ^ 3) - (16 * a ^ 3) - (65 * b * a ^ 2) - (54 * a * b ^ 2))
  try close

theorem P78 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) : (a + b + c) / (2 * (a * b + b * c + c * a)) + 3 / (a + b + c) ≤ 1 / (a + b) + 1 / (b + c) + 1 / (c + a):= by
  intro_by_homogeneous a + b + c = 3
  llm_frac_apart (a + b + c) / (2 * (a * b + b * c + c * a)) + 3 / (a + b + c) - (1 / (a + b) + 1 / (b + c) + 1 / (c + a)) = 3 / (a + b + c) + a / (2 * (a * b + a * c + b * c)) + b / (2 * (a * b + a * c + b * c)) + c / (2 * (a * b + a * c + b * c)) - (1 / ((a + b))) - (1 / ((a + c))) - (1 / ((b + c)))
  llm_cancel_numer 3 / (a + b + c) + a / (2 * (a * b + a * c + b * c)) + b / (2 * (a * b + a * c + b * c)) + c / (2 * (a * b + a * c + b * c)) - (1 / (b + c) + 1 / (a + c) + 1 / (a + b)) = (6 * (a * b + a * c + b * c) + (a + b + c) ^ 2) / (2 * (a + b + c) * (a * b + a * c + b * c)) - (1 / ((a + b)) + 1 / ((a + c)) + 1 / ((b + c)))
  llm_frac_together (6 * (a * b + a * c + b * c) + (a + b + c) ^ 2) / (2 * (a + b + c) * (a * b + a * c + b * c)) - (1 / (a + b) + 1 / (a + c) + 1 / (b + c)) = (a ^ 2 + b ^ 2 + c ^ 2 + 8 * (a * b + a * c + b * c)) / (2 * (a + b + c) * (a * b + a * c + b * c)) - ((a ^ 2 + b ^ 2 + c ^ 2 + 3 * (a * b + a * c + b * c)) / ((a + b) * (a + c) * (b + c)))
  llm_cancel_factor (a ^ 2 + b ^ 2 + c ^ 2 + 8 * (a * b + a * c + b * c)) / (2 * (a + b + c) * (a * b + a * c + b * c)) - ((a ^ 2 + b ^ 2 + c ^ 2 + 3 * (a * b + a * c + b * c)) / ((a + b) * (a + c) * (b + c))) = 3 / (a + b + c) + (a + b + c) / (2 * (a * b + a * c + b * c)) - ((a + b + c) ^ 2 / ((a + b) * (a + c) * (b + c)) + (a * b + a * c + b * c) / ((a + b) * (a + c) * (b + c)))
  llm_frac_apart 3 / (a + b + c) + (a + b + c) / (2 * (a * b + a * c + b * c)) - ((a + b + c) ^ 2 / ((a + b) * (a + c) * (b + c)) + (a * b + a * c + b * c) / ((a + b) * (a + c) * (b + c))) = 3 / (a + b + c) + a / (2 * (a * b + a * c + b * c)) + b / (2 * (a * b + a * c + b * c)) + c / (2 * (a * b + a * c + b * c)) - (a ^ 2 / ((a + b) * (a + c) * (b + c))) - (b ^ 2 / ((a + b) * (a + c) * (b + c))) - (c ^ 2 / ((a + b) * (a + c) * (b + c))) - (3 * (a * b + a * c + b * c) / ((a + b) * (a + c) * (b + c)))
  scale Holder_2R_div_variant1_right_3vars (u1 := (c ^ 2)) (u2 := (b ^ 2)) (u3 := (a ^ 2)) (v1 := (((a + b) * (a + c)) * (b + c))) (v2 := (((a + b) * (a + c)) * (b + c))) (v3 := (((a + b) * (a + c)) * (b + c))) (k := 1) (l := ((3 * (((a * b) + (a * c)) + (b * c))) / (((a + b) * (a + c)) * (b + c)))) (left := 3 / (a + b + c) + a / (2 * (a * b + a * c + b * c)) + b / (2 * (a * b + a * c + b * c)) + c / (2 * (a * b + a * c + b * c)))
  llm_simplify 3 / (a + b + c) + a / (2 * (a * b + a * c + b * c)) + b / (2 * (a * b + a * c + b * c)) + c / (2 * (a * b + a * c + b * c)) - (sqrt((c ^ 2 + b ^ 2 + a ^ 2) ^ 3 / (c ^ 2 * ((a + b) * (a + c) * (b + c)) ^ 2 + b ^ 2 * ((a + b) * (a + c) * (b + c)) ^ 2 + a ^ 2 * ((a + b) * (a + c) * (b + c)) ^ 2)) + 3 * (a * b + a * c + b * c) / ((a + b) * (a + c) * (b + c))) = ((a + b + c) ^ 2 * (a + b) * (a + c) * (b + c) + 6 * (a + b) * (a + c) * (b + c) * (a * b + a * c + b * c) - (6 * (a * b + a * c + b * c) ^ 2 * (a + b + c)) - (2 * (a + b + c) * (a ^ 2 + b ^ 2 + c ^ 2) * (a * b + a * c + b * c))) / (2 * (a + b + c) * (a + b) * (a + c) * (a * b + a * c + b * c) * (b + c))
  llm_cancel_denom (((a + b + c) ^ 2 * (a + b) * (a + c) * (b + c) + 6 * (a + b) * (a + c) * (b + c) * (a * b + a * c + b * c) - 6 * (a * b + a * c + b * c) ^ 2 * (a + b + c) - 2 * (a + b + c) * (a ^ 2 + b ^ 2 + c ^ 2) * (a * b + a * c + b * c)) / (2 * (a + b + c) * (a + b) * (a + c) * (a * b + a * c + b * c) * (b + c))) - (0) = ((a + b + c) ^ 2 * (a + b) * (a + c) * (b + c) + 6 * (a + b) * (a + c) * (b + c) * (a * b + a * c + b * c) - (6 * (a * b + a * c + b * c) ^ 2 * (a + b + c)) - (2 * (a + b + c) * (a ^ 2 + b ^ 2 + c ^ 2) * (a * b + a * c + b * c))) / (2 * (a + b) * (a + c) * (b + c) * (a + b + c) * (a * b + a * c + b * c))
  sym_pqr_method 2 * a * b * (a * b ^ 2 + b * a ^ 2 - (a ^ 3) - (b ^ 3)) ≤ 0
  llm_cancel_factor 2 * a * b * (a * b ^ 2 + b * a ^ 2 - a ^ 3 - b ^ 3) - (0) = -2 * a * b * (a - (b)) ^ 2 * (b + a)

theorem P79 {a b c : ℝ} (ha : a ≥ 0) (hb : b ≥ 0) (hc : c ≥ 0) (h : a + b + c = 3) : 4 * (sqrt a + sqrt b + sqrt c) + 15 ≤ 9 * (sqrt((a + b) / 2) + sqrt((b + c) / 2) + sqrt((c + a) / 2)) := by
  make_homogeneous 4 * sqrt (a) + 4 * sqrt (b) + 4 * sqrt (c) + 15 * sqrt (a / 3 + b / 3 + c / 3) - (9 * sqrt (a / 2 + b / 2)) - (9 * sqrt (a / 2 + c / 2)) - (9 * sqrt (b / 2 + c / 2)) ≤ 0
  llm_simplify 4 * sqrt a + 4 * sqrt b + 4 * sqrt c + 15 * sqrt(a / 3 + b / 3 + c / 3) - (9 * sqrt(b / 2 + c / 2) + 9 * sqrt(a / 2 + c / 2) + 9 * sqrt(a / 2 + b / 2)) = 15 + 4 * (sqrt (a) + sqrt (b) + sqrt (c)) - (9 * sqrt ((3 - (a)) / (2)) + 9 * sqrt ((3 - (b)) / (2)) + 9 * sqrt ((3 - (c)) / (2)))
  sym_equal_value 0 ≤ sqrt (6 - (2 * c)) / 2 + 9 * sqrt (3 + c) - (15) - (4 * sqrt (c))

theorem P80 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) (h : a + b + c = 3) :  1 / (4 * a ^ 2 + b ^ 2 + c ^ 2) + 1 / (4 * b ^ 2 + c ^ 2 + a ^ 2) + 1 / (4 * c ^ 2 + a ^ 2 + b ^ 2) ≤ 1 / 2 := by
  make_homogeneous (a / 3 + b / 3 + c / 3) ^ 2 / (4 * a ^ 2 + b ^ 2 + c ^ 2) + (a / 3 + b / 3 + c / 3) ^ 2 / (a ^ 2 + 4 * b ^ 2 + c ^ 2) + (a / 3 + b / 3 + c / 3) ^ 2 / (a ^ 2 + b ^ 2 + 4 * c ^ 2) - (1 / 2) ≤ 0
  llm_factor (a / 3 + b / 3 + c / 3) ^ 2 / (4 * a ^ 2 + b ^ 2 + c ^ 2) + (a / 3 + b / 3 + c / 3) ^ 2 / (a ^ 2 + 4 * b ^ 2 + c ^ 2) + (a / 3 + b / 3 + c / 3) ^ 2 / (a ^ 2 + b ^ 2 + 4 * c ^ 2) - (1 / 2) = (a + b + c) ^ 2 * (1 / ((4 * a ^ 2 + b ^ 2 + c ^ 2)) + 1 / ((a ^ 2 + 4 * b ^ 2 + c ^ 2)) + 1 / ((a ^ 2 + b ^ 2 + 4 * c ^ 2))) / (9) - (1 / ((2)))
  llm_frac_together (a + b + c) ^ 2 * (1 / (4 * a ^ 2 + b ^ 2 + c ^ 2) + 1 / (a ^ 2 + 4 * b ^ 2 + c ^ 2) + 1 / (a ^ 2 + b ^ 2 + 4 * c ^ 2)) / 9 - (1 / 2) = (a + b + c) ^ 2 * ((a ^ 2 + b ^ 2 + 4 * c ^ 2) * (a ^ 2 + c ^ 2 + 4 * b ^ 2) + (a ^ 2 + b ^ 2 + 4 * c ^ 2) * (b ^ 2 + c ^ 2 + 4 * a ^ 2) + (a ^ 2 + c ^ 2 + 4 * b ^ 2) * (b ^ 2 + c ^ 2 + 4 * a ^ 2)) / (36 * a ^ 6 + 189 * a ^ 4 * b ^ 2 + 189 * a ^ 4 * c ^ 2 + 189 * a ^ 2 * b ^ 4 + 702 * a ^ 2 * b ^ 2 * c ^ 2 + 189 * a ^ 2 * c ^ 4 + 36 * b ^ 6 + 189 * b ^ 4 * c ^ 2 + 189 * b ^ 2 * c ^ 4 + 36 * c ^ 6) - (1 / 2)
  scale Muirhead_div_onestep_left_2vars (u := c) (v := b) (p := 2) (q := 4) (i := 189) (j := ((36 * (c ^ 6)) + (((((((36 * (a ^ 6)) + ((189 * (a ^ 4)) * (b ^ 2))) + ((189 * (a ^ 4)) * (c ^ 2))) + ((189 * (a ^ 2)) * (b ^ 4))) + (((702 * (a ^ 2)) * (b ^ 2)) * (c ^ 2))) + ((189 * (a ^ 2)) * (c ^ 4))) + (36 * (b ^ 6))))) (k := ((((a + b) + c) ^ 2) * ((((((a ^ 2) + (b ^ 2)) + (4 * (c ^ 2))) * (((a ^ 2) + (c ^ 2)) + (4 * (b ^ 2)))) + ((((a ^ 2) + (b ^ 2)) + (4 * (c ^ 2))) * (((b ^ 2) + (c ^ 2)) + (4 * (a ^ 2))))) + ((((a ^ 2) + (c ^ 2)) + (4 * (b ^ 2))) * (((b ^ 2) + (c ^ 2)) + (4 * (a ^ 2))))))) (l := 0) (right := 1 / 2)
  llm_cancel_factor ((a + b + c) ^ 2 * ((a ^ 2 + b ^ 2 + 4 * c ^ 2) * (a ^ 2 + c ^ 2 + 4 * b ^ 2) + (a ^ 2 + b ^ 2 + 4 * c ^ 2) * (b ^ 2 + c ^ 2 + 4 * a ^ 2) + (a ^ 2 + c ^ 2 + 4 * b ^ 2) * (b ^ 2 + c ^ 2 + 4 * a ^ 2)) * (1 / (189 * (c * b ^ 5 + b * c ^ 5) + 36 * c ^ 6 + 36 * a ^ 6 + 189 * a ^ 4 * b ^ 2 + 189 * a ^ 4 * c ^ 2 + 189 * a ^ 2 * b ^ 4 + 702 * a ^ 2 * b ^ 2 * c ^ 2 + 189 * a ^ 2 * c ^ 4 + 36 * b ^ 6))) - (1 / 2) = (1 / 2) * (1 / (4 * a ^ 6 + 21 * a ^ 4 * b ^ 2 + 21 * a ^ 4 * c ^ 2 + 21 * a ^ 2 * b ^ 4 + 78 * a ^ 2 * b ^ 2 * c ^ 2 + 21 * a ^ 2 * c ^ 4 + 4 * b ^ 6 + 21 * b ^ 5 * c + 21 * b * c ^ 5 + 4 * c ^ 6)) * (4 * a * b ^ 5 + 4 * a * c ^ 5 + 4 * b * a ^ 5 + 4 * c * a ^ 5 + 8 * b ^ 2 * c ^ 4 + 8 * b ^ 4 * c ^ 2 + 12 * a ^ 3 * b ^ 3 + 12 * a ^ 3 * c ^ 3 + 12 * b ^ 3 * c ^ 3 + 4 * a * b * c ^ 4 + 4 * a * c * b ^ 4 + 4 * b * c * a ^ 4 + 12 * a * b ^ 2 * c ^ 3 + 12 * a * b ^ 3 * c ^ 2 + 12 * b * a ^ 2 * c ^ 3 + 12 * b * a ^ 3 * c ^ 2 + 12 * c * a ^ 2 * b ^ 3 + 12 * c * a ^ 3 * b ^ 2 - (2 * a ^ 6) - (2 * b ^ 6) - (2 * c ^ 6) - (17 * b * c ^ 5) - (17 * c * b ^ 5) - (13 * a ^ 2 * b ^ 4) - (13 * a ^ 2 * c ^ 4) - (13 * a ^ 4 * b ^ 2) - (13 * a ^ 4 * c ^ 2) - (60 * a ^ 2 * b ^ 2 * c ^ 2))
  scale Muirhead_Qeq1_onestep_right_2vars (u := b) (v := c) (p := 5) (k := 17) (l := ((((((((60 * (a ^ 2)) * (b ^ 2)) * (c ^ 2)) + ((13 * (a ^ 4)) * (c ^ 2))) + ((13 * (a ^ 4)) * (b ^ 2))) + ((13 * (a ^ 2)) * (c ^ 4))) + ((13 * (a ^ 2)) * (b ^ 4))) + ((2 * (c ^ 6)) + ((2 * (b ^ 6)) + (2 * (a ^ 6)))))) (left := 4 * a * b ^ 5 + 4 * a * c ^ 5 + 4 * b * a ^ 5 + 4 * c * a ^ 5 + 8 * b ^ 2 * c ^ 4 + 8 * b ^ 4 * c ^ 2 + 12 * a ^ 3 * b ^ 3 + 12 * a ^ 3 * c ^ 3 + 12 * b ^ 3 * c ^ 3 + 4 * a * b * c ^ 4 + 4 * a * c * b ^ 4 + 4 * b * c * a ^ 4 + 12 * a * b ^ 2 * c ^ 3 + 12 * a * b ^ 3 * c ^ 2 + 12 * b * a ^ 2 * c ^ 3 + 12 * b * a ^ 3 * c ^ 2 + 12 * c * a ^ 2 * b ^ 3 + 12 * c * a ^ 3 * b ^ 2)
  closed_by_sos

theorem P81 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) (h : a + b + c = 3) : a * b / (4 - b * c) + b * c / (4 - c * a) + c * a / (4 - a * b) ≤ 1 := by
  llm_cancel_denom (a * b / (4 * (a + b + c) ^ 2 - 9 * a * b) + a * c / (4 * (a + b + c) ^ 2 - 9 * a * c) + b * c / (4 * (a + b + c) ^ 2 - 9 * b * c)) - (1) = (a * b * (4 * (a + b + c) ^ 2 - (9 * a * c)) * (4 * (a + b + c) ^ 2 - (9 * b * c)) + a * c * (4 * (a + b + c) ^ 2 - (9 * a * b)) * (4 * (a + b + c) ^ 2 - (9 * b * c)) + b * c * (4 * (a + b + c) ^ 2 - (9 * a * b)) * (4 * (a + b + c) ^ 2 - (9 * a * c)) - ((4 * (a + b + c) ^ 2 - (9 * a * b)) * (4 * (a + b + c) ^ 2 - (9 * a * c)) * (4 * (a + b + c) ^ 2 - (9 * b * c)))) / ((4 * (a + b + c) ^ 2 - 9 * a * b) * (4 * (a + b + c) ^ 2 - 9 * a * c) * (4 * (a + b + c) ^ 2 - 9 * b * c))
  llm_cancel_factor (a * b * (4 * (a + b + c) ^ 2 - 9 * a * c) * (4 * (a + b + c) ^ 2 - 9 * b * c) + a * c * (4 * (a + b + c) ^ 2 - 9 * a * b) * (4 * (a + b + c) ^ 2 - 9 * b * c) + b * c * (4 * (a + b + c) ^ 2 - 9 * a * b) * (4 * (a + b + c) ^ 2 - 9 * a * c)) - ((4 * (a + b + c) ^ 2 - 9 * a * b) * (4 * (a + b + c) ^ 2 - 9 * a * c) * (4 * (a + b + c) ^ 2 - 9 * b * c)) = (4) * (-(16 * a ^ 6) - (16 * b ^ 6) - (16 * c ^ 6) - (80 * a ^ 2 * b ^ 4) - (80 * a ^ 2 * c ^ 4) - (80 * a ^ 3 * b ^ 3) - (80 * a ^ 3 * c ^ 3) - (80 * a ^ 4 * b ^ 2) - (80 * a ^ 4 * c ^ 2) - (80 * b ^ 2 * c ^ 4) - (80 * b ^ 3 * c ^ 3) - (80 * b ^ 4 * c ^ 2) - (56 * a * b ^ 5) - (56 * a * c ^ 5) - (56 * b * a ^ 5) - (56 * b * c ^ 5) - (56 * c * a ^ 5) - (56 * c * b ^ 5) - (377 * a * b ^ 2 * c ^ 3) - (377 * a * b ^ 3 * c ^ 2) - (377 * b * a ^ 2 * c ^ 3) - (377 * b * a ^ 3 * c ^ 2) - (377 * c * a ^ 2 * b ^ 3) - (377 * c * a ^ 3 * b ^ 2) - (351 * a ^ 2 * b ^ 2 * c ^ 2) - (219 * a * b * c ^ 4) - (219 * a * c * b ^ 4) - (219 * b * c * a ^ 4))
  try close

theorem P82 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) : a ^ 3 + b ^ 3 + c ^ 3 + 12 * a * b * c ≤ a ^ 2 * sqrt(a ^ 2 + 24 * b * c) + b ^ 2 * sqrt(b ^ 2 + 24 * c * a) + c ^ 2 * sqrt(c ^ 2 + 24 * a * b) := by
  sorry

theorem P83 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) (h : a * b + b * c + c * a = 1) : a * b / (4 * a * b + 4 * c * a + b * c) + c * a / (4 * c * a + 4 * b * c + a * b) + b * c / (4 * b * c + 4 * a * b + c * a) ≤ 1 / 3 := by
  sorry

theorem P84 {a b c d : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) (hd : d > 0) : 9 * (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) + 7 * (a + c) * (b + d) ≥ 4 * (a + b + c + d) ^ 2 := by
  intro_by_homogeneous a + b + c + d = 4
  llm_cancel_denom 4 * (a + b + c + d) ^ 2 - (9 * (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) + 7 * (a + c) * (b + d)) = a * b + 8 * a * c + a * d + b * c + 8 * b * d + c * d - (5 * a ^ 2) - (5 * b ^ 2) - (5 * c ^ 2) - (5 * d ^ 2)
  scale Rearrange_cycle_mul_left_4vars (u1 := c) (u2 := b) (u3 := a) (u4 := d) (i1 := 1) (j1 := 0) (i2 := 1) (j2 := 0) (k := 1) (l := (((8 * b) * d) + ((8 * a) * c))) (right := 5 * d ^ 2 + 5 * c ^ 2 + 5 * b ^ 2 + 5 * a ^ 2)
  scale AM_GM_square_left_2vars (u := c) (v := a) (k := 8) (l := (((((c * c) + (b * b)) + (a * a)) + (d * d)) + ((8 * b) * d))) (right := 5 * d ^ 2 + 5 * c ^ 2 + 5 * b ^ 2 + 5 * a ^ 2)
  llm_cancel_factor (8 * (c ^ 2 + a ^ 2) / 2 + c * c + b * b + a * a + d * d + 8 * b * d) - (5 * d ^ 2 + 5 * c ^ 2 + 5 * b ^ 2 + 5 * a ^ 2) = (4) * (-(b - (d)) ^ 2)
  try close

theorem P85 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) : sqrt(3 * a ^ 2 / (7 * a ^ 2 + 5 * (b + c) ^ 2)) + sqrt(3 * b ^ 2 / (7 * b ^ 2 + 5 * (c + a) ^ 2)) + sqrt(3 * c ^ 2 / (7 * c ^ 2 + 5 * (a + b) ^ 2)) ≤ 1 := by
  intro_by_homogeneous a + b + c = 3
  llm_simplify sqrt(3 * a ^ 2 / (7 * a ^ 2 + 5 * (b + c) ^ 2)) + sqrt(3 * b ^ 2 / (7 * b ^ 2 + 5 * (c + a) ^ 2)) + sqrt(3 * c ^ 2 / (7 * c ^ 2 + 5 * (a + b) ^ 2)) - (1) = sqrt (a ^ 2 / (4 * a ^ 2 - (10 * a) + 15)) + sqrt (b ^ 2 / (4 * b ^ 2 - (10 * b) + 15)) + sqrt (c ^ 2 / (4 * c ^ 2 - (10 * c) + 15)) - (1)
  sym_equal_value 0 ≤ 1 - (sqrt (c ^ 2 / (4 * c ^ 2 - (10 * c) + 15))) - (sqrt ((c - (3)) ^ 2 / (5 * c + (c - (3)) ^ 2)))

theorem P86 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) : 1 ≤ sqrt(a ^ 2 / (a ^ 2 + 2 * (b + c) ^ 2)) + sqrt(b ^ 2 / (b ^ 2 + 2 * (c + a) ^ 2)) + sqrt(c ^ 2 / (c ^ 2 + 2 * (a + b) ^ 2)) := by
  intro_by_homogeneous a + b + c = 3
  scale weighted_Jensen_sqrt_div_right_3vars (u := ((a ^ 2) + (2 * ((b + c) ^ 2)))) (v := ((b ^ 2) + (2 * ((c + a) ^ 2)))) (w := ((c ^ 2) + (2 * ((a + b) ^ 2)))) (i1 := a) (i2 := b) (i3 := c) (k := 1) (l := 0) (left := 1)
  llm_cancel_denom 1 - (sqrt(a + b + c) ^ 3 / sqrt(a * (a ^ 2 + 2 * (b + c) ^ 2) + b * (b ^ 2 + 2 * (c + a) ^ 2) + c * (c ^ 2 + 2 * (a + b) ^ 2))) = (sqrt (a * (a ^ 2 + 2 * (b + c) ^ 2) + b * (b ^ 2 + 2 * (c + a) ^ 2) + c * (c ^ 2 + 2 * (a + b) ^ 2)) - ((a + b + c) ^ (3 / (2)))) / (sqrt (a * (a ^ 2 + 2 * (b + c) ^ 2) + b * (b ^ 2 + 2 * (a + c) ^ 2) + c * (c ^ 2 + 2 * (a + b) ^ 2)))
  llm_cancel_power 2
  llm_exp_expand a * (a ^ 2 + 2 * (b + c) ^ 2) + b * (b ^ 2 + 2 * (c + a) ^ 2) + c * (c ^ 2 + 2 * (a + b) ^ 2) - (((a + b + c) ^ (3 / 2)) ^ 2) = 6 * a * b * c - (a ^ 2 * b) - (a ^ 2 * c) - (b ^ 2 * a) - (b ^ 2 * c) - (c ^ 2 * a) - (c ^ 2 * b)
  scale AM_GM_normal_right_6vars (u1 := ((c ^ 2) * b)) (u2 := ((c ^ 2) * a)) (u3 := ((b ^ 2) * c)) (u4 := ((b ^ 2) * a)) (u5 := ((a ^ 2) * c)) (u6 := ((a ^ 2) * b)) (k := 1) (l := 0) (left := 6 * a * b * c)
  sym_simplify 6 * a * b * c  -  6 * (c ^ 2 * b * c ^ 2 * a * b ^ 2 * c * b ^ 2 * a * a ^ 2 * c * a ^ 2 * b) ^ (1 / 6) = 0
  try close

theorem P87 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) : 2 * (a * b + b * c + c * a) / (a ^ 2 + b ^ 2 + c ^ 2) ≤ 1 + 3 * a * b * c / (a ^ 2 * b + b ^ 2 * c + c ^ 2 * a) := by
  intro_by_homogeneous a + b + c = 3
  llm_cancel_denom 2 * (a * b + b * c + c * a) / (a ^ 2 + b ^ 2 + c ^ 2) - (1 + 3 * a * b * c / (a ^ 2 * b + b ^ 2 * c + c ^ 2 * a)) = (2 * (a * b + b * c + c * a) * (a ^ 2 * b + b ^ 2 * c + c ^ 2 * a) - ((a ^ 2 + b ^ 2 + c ^ 2) * (a ^ 2 * b + b ^ 2 * c + c ^ 2 * a)) - (3 * a * b * c * (a ^ 2 + b ^ 2 + c ^ 2))) / ((a ^ 2 + b ^ 2 + c ^ 2) * (a ^ 2 * b + a * c ^ 2 + b ^ 2 * c))
  llm_mul_expand 2 * (a * b + b * c + c * a) * (a ^ 2 * b + b ^ 2 * c + c ^ 2 * a) - (3 * a * b * c * (a ^ 2 + b ^ 2 + c ^ 2) + (a ^ 2 + b ^ 2 + c ^ 2) * (a ^ 2 * b + b ^ 2 * c + c ^ 2 * a)) = 2 * a ^ 2 * c ^ 3 + 2 * a ^ 3 * b ^ 2 + 2 * b ^ 3 * c ^ 2 + a * b ^ 2 * c ^ 2 + b * a ^ 2 * c ^ 2 + c * a ^ 2 * b ^ 2 - (a * c ^ 4) - (b * a ^ 4) - (c * b ^ 4) - (a ^ 2 * b ^ 3) - (a ^ 3 * c ^ 2) - (b ^ 2 * c ^ 3) - (a * b * c ^ 3) - (a * c * b ^ 3) - (b * c * a ^ 3)
  llm_mul_expand 2 * a ^ 2 * c ^ 3 + 2 * a ^ 3 * b ^ 2 + 2 * b ^ 3 * c ^ 2 + a * b ^ 2 * c ^ 2 + b * a ^ 2 * c ^ 2 + c * a ^ 2 * b ^ 2 - (b * c * a ^ 3 + a * c * b ^ 3 + a * b * c ^ 3 + b ^ 2 * c ^ 3 + a ^ 3 * c ^ 2 + a ^ 2 * b ^ 3 + c * b ^ 4 + b * a ^ 4 + a * c ^ 4) = a ^ 3 * (2 * b ^ 2 - (b * c) - (c ^ 2)) + b ^ 3 * (2 * c ^ 2 - (a * c) - (a ^ 2)) + c ^ 3 * (2 * a ^ 2 - (a * b) - (b ^ 2)) + a * b ^ 2 * c ^ 2 + b * a ^ 2 * c ^ 2 + c * a ^ 2 * b ^ 2 - (b * a ^ 4) - (c * b ^ 4) - (a * c ^ 4)
  llm_factor a ^ 3 * (2 * b ^ 2 - b * c - c ^ 2) + b ^ 3 * (2 * c ^ 2 - a * c - a ^ 2) + c ^ 3 * (2 * a ^ 2 - a * b - b ^ 2) + a * b ^ 2 * c ^ 2 + b * a ^ 2 * c ^ 2 + c * a ^ 2 * b ^ 2 - (a * c ^ 4 + c * b ^ 4 + b * a ^ 4) = a * b ^ 2 * c ^ 2 + b * a ^ 2 * c ^ 2 + c * a ^ 2 * b ^ 2 + a ^ 3 * (b - (c)) * (c + 2 * b) + c ^ 3 * (a - (b)) * (b + 2 * a) - (a * c ^ 4) - (b * a ^ 4) - (c * b ^ 4) - (b ^ 3 * (a - (c)) * (a + 2 * c))
  scale Rearrange_cycle_mul_left_3vars (u := b) (v := c) (w := a) (i1 := 1) (j1 := 0) (i2 := ((b * a) * c)) (j2 := 0) (k := 1) (l := ((((a ^ 3) * (b - c)) * (c + (2 * b))) + (((c ^ 3) * (a - b)) * (b + (2 * a))))) (right := b ^ 3 * (a - c) * (a + 2 * c) + c * b ^ 4 + b * a ^ 4 + a * c ^ 4)
  llm_factor b * b * a * c * b + c * b * a * c * c + a * b * a * c * a + a ^ 3 * (b - c) * (c + 2 * b) + c ^ 3 * (a - b) * (b + 2 * a) - (b ^ 3 * (a - c) * (a + 2 * c) + c * b ^ 4 + b * a ^ 4 + a * c ^ 4) = 2 * a ^ 2 * c ^ 3 + 2 * a ^ 3 * b ^ 2 + 2 * b ^ 3 * c ^ 2 - (a * c ^ 4) - (b * a ^ 4) - (c * b ^ 4) - (a ^ 2 * b ^ 3) - (a ^ 3 * c ^ 2) - (b ^ 2 * c ^ 3)
  llm_frac_together 2 * a ^ 2 * c ^ 3 + 2 * a ^ 3 * b ^ 2 + 2 * b ^ 3 * c ^ 2 - (b ^ 2 * c ^ 3 + a ^ 3 * c ^ 2 + a ^ 2 * b ^ 3 + c * b ^ 4 + b * a ^ 4 + a * c ^ 4) = (2 * a ^ 2 - (b ^ 2)) * c ^ 3 + a ^ 3 * (2 * b ^ 2 - (c ^ 2)) + b ^ 3 * (2 * c ^ 2 - (a ^ 2)) - (c * b ^ 4 + b * a ^ 4 + a * c ^ 4)
  llm_factor (2 * a ^ 2 - b ^ 2) * c ^ 3 + a ^ 3 * (2 * b ^ 2 - c ^ 2) + b ^ 3 * (2 * c ^ 2 - a ^ 2) - (c * b ^ 4 + b * a ^ 4 + a * c ^ 4) = a ^ 3 * (2 * b ^ 2 - (c ^ 2)) + c ^ 3 * (2 * a ^ 2 - (b ^ 2)) - (a * c ^ 4) - (b * a ^ 4) - (c * b ^ 4) - (b ^ 3 * (a ^ 2 - (2 * c ^ 2)))
  llm_simplify a ^ 3 * (2 * b ^ 2 - c ^ 2) + c ^ 3 * (2 * a ^ 2 - b ^ 2) - (b ^ 3 * (a ^ 2 - 2 * c ^ 2) + c * b ^ 4 + b * a ^ 4 + a * c ^ 4) = 2 * a ^ 3 * b ^ 2 + 2 * c ^ 3 * a ^ 2 + 2 * b ^ 3 * c ^ 2 - (a ^ 3 * c ^ 2) - (c ^ 3 * b ^ 2) - (b ^ 3 * a ^ 2) - (c * b ^ 4) - (b * a ^ 4) - (a * c ^ 4)
  scale AM_GM_normal_right_2vars (u := (((a * (c ^ 4)) + (b * (a ^ 4))) + (c * (b ^ 4)))) (v := (((b ^ 3) * (a ^ 2)) + (((c ^ 3) * (b ^ 2)) + ((a ^ 3) * (c ^ 2))))) (k := 1) (l := 0) (left := 2 * a ^ 3 * b ^ 2 + 2 * c ^ 3 * a ^ 2 + 2 * b ^ 3 * c ^ 2)
  llm_simplify 2 * a ^ 3 * b ^ 2 + 2 * c ^ 3 * a ^ 2 + 2 * b ^ 3 * c ^ 2 - (2 * sqrt((a * c ^ 4 + b * a ^ 4 + c * b ^ 4) * (b ^ 3 * a ^ 2 + c ^ 3 * b ^ 2 + a ^ 3 * c ^ 2))) = 2 * a ^ 2 * c ^ 3 + 2 * a ^ 3 * b ^ 2 + 2 * b ^ 3 * c ^ 2 - (2 * sqrt (a * c ^ 4 + b * a ^ 4 + c * b ^ 4) * sqrt (a ^ 2 * b ^ 3 + a ^ 3 * c ^ 2 + b ^ 2 * c ^ 3))
  scale Holder_2R_right_2vars (u1 := (a * (c ^ 4))) (u2 := (b * (a ^ 4))) (u3 := (c * (b ^ 4))) (v1 := ((a ^ 3) * (c ^ 2))) (v2 := ((a ^ 2) * (b ^ 3))) (v3 := ((b ^ 2) * (c ^ 3))) (r1 := (1 / 2)) (r2 := (1 / 2)) (k := 2) (l := 0) (left := 2 * a ^ 2 * c ^ 3 + 2 * a ^ 3 * b ^ 2 + 2 * b ^ 3 * c ^ 2)
  sym_simplify 2 * a ^ 2 * c ^ 3 + 2 * a ^ 3 * b ^ 2 + 2 * b ^ 3 * c ^ 2  -  2 * ((a * c ^ 4) ^ (1 / 2) * (a ^ 3 * c ^ 2) ^ (1 / 2) + (b * a ^ 4) ^ (1 / 2) * (a ^ 2 * b ^ 3) ^ (1 / 2) + (c * b ^ 4) ^ (1 / 2) * (b ^ 2 * c ^ 3) ^ (1 / 2)) = 0
  try close

theorem P88 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) (h : a * b * c = 1) : 5 ≤ 1 / a + 1 / b + 1 / c + 6 / (a + b + c) := by
  llm_simplify 5 - (1 / a + 1 / b + 1 / c + 6 / (a + b + c)) = 5 - (6 / (a + b + c)) - (a * b) - (a * c) - (b * c)
  llm_cancel_denom (5) - (b * c + a * c + a * b + 6 / (a + b + c)) = (5 * a + 5 * b + 5 * c - (6) - ((a + b + c) * (a * b + a * c + b * c))) / (a + b + c)
  llm_frac_together 5 * a + 5 * b + 5 * c - ((a + b + c) * (a * b + a * c + b * c) + 6) = (a + b + c) * (5 - (a * b + a * c + b * c)) - (6)
  llm_simplify (a + b + c) * (5 - (a * b + a * c + b * c)) - (6) = 5 * a + 5 * b + 5 * c - (a ^ 2 * b) - (a * b ^ 2) - (a ^ 2 * c) - (a * c ^ 2) - (b ^ 2 * c) - (b * c ^ 2) - (9)
  sym_pqr_method 5 * a * (a * b ^ 2) ^ (2 / 3) + 10 * b * (a * b ^ 2) ^ (2 / 3) - (2 * b ^ 3) - (11 * a * b ^ 2) - (2 * b * a ^ 2) ≤ 0
  llm_factor 5 * a * (a * b ^ 2) ^ (2 / 3) + 10 * b * (a * b ^ 2) ^ (2 / 3) - 2 * b ^ 3 - 11 * a * b ^ 2 - 2 * b * a ^ 2 - (0) = 5 * (a * b ^ 2) ^ (2 / (3)) * (a + 2 * b) - (b * (b * (2 * b + 11 * a) + 2 * a ^ 2))
  llm_cancel_power 3
  llm_cancel_factor ((5 * (a * b ^ 2) ^ (2 / 3) * (a + 2 * b)) ^ 3) - ((b * (b * (2 * b + 11 * a) + 2 * a ^ 2)) ^ 3) = (b ^ 3) * ((a - (b)) ^ 2) * (-(8 * a ^ 4) - (8 * b ^ 4) - (148 * a * b ^ 3) - (38 * a ^ 2 * b ^ 2) - (23 * b * a ^ 3))
  try close

theorem P89 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) (h1 : a ^ 2 + b ^ 2 - a * b > 0) (h2 : a ^ 2 + c ^ 2 - a * c > 0) (h3 : b ^ 2 + c ^ 2 - b * c > 0) : a + b + c ≤ a ^ 3 / (b ^ 2 - b * c + c ^ 2) + b ^ 3 / (c ^ 2 - c * a + a ^ 2) + c ^ 3 / (a ^ 2 - a * b + b ^ 2) := by
  intro_by_homogeneous a + b + c = 3
  scale Titu_variant2_right_3vars (u1 := a) (u2 := b) (u3 := c) (v1 := (((b ^ 2) - (b * c)) + (c ^ 2))) (v2 := (((c ^ 2) - (c * a)) + (a ^ 2))) (v3 := (((a ^ 2) - (a * b)) + (b ^ 2))) (r := 3) (k := 1) (l := 0) (left := a + b + c)
  llm_mul_expand a + b + c - ((a ^ 2 + b ^ 2 + c ^ 2) ^ 2 / (a * (b ^ 2 - b * c + c ^ 2) + b * (c ^ 2 - c * a + a ^ 2) + c * (a ^ 2 - a * b + b ^ 2))) = a + b + c - ((a ^ 4 + b ^ 4 + c ^ 4 + 2 * a ^ 2 * b ^ 2 + 2 * b ^ 2 * c ^ 2 + 2 * c ^ 2 * a ^ 2) / (a ^ 2 * (b + c) + b ^ 2 * (a + c) + c ^ 2 * (a + b) - (3 * a * b * c)))
  llm_cancel_denom a + b + c - ((a ^ 4 + b ^ 4 + c ^ 4 + 2 * a ^ 2 * b ^ 2 + 2 * b ^ 2 * c ^ 2 + 2 * c ^ 2 * a ^ 2) / (a ^ 2 * (b + c) + b ^ 2 * (a + c) + c ^ 2 * (a + b) - 3 * a * b * c)) = a + b + c - ((a ^ 2 + b ^ 2 + c ^ 2) ^ 2 / (a ^ 2 * (b + c) + b ^ 2 * (a + c) + c ^ 2 * (a + b) - (3 * a * b * c)))
  llm_cancel_denom a + b + c - ((a ^ 2 + b ^ 2 + c ^ 2) ^ 2 / (a ^ 2 * (b + c) + b ^ 2 * (a + c) + c ^ 2 * (a + b) - 3 * a * b * c)) = ((a + b + c) * (a ^ 2 * (b + c) + b ^ 2 * (a + c) + c ^ 2 * (a + b) - (3 * a * b * c)) - ((a ^ 2 + b ^ 2 + c ^ 2) ^ 2)) / (a ^ 2 * (b + c) + b ^ 2 * (a + c) + c ^ 2 * (a + b) - (3 * a * b * c))
  llm_mul_expand (a + b + c) * (a ^ 2 * (b + c) + b ^ 2 * (a + c) + c ^ 2 * (a + b) - 3 * a * b * c) - ((a ^ 2 + b ^ 2 + c ^ 2) ^ 2) = a * b ^ 3 + a * c ^ 3 + b * a ^ 3 + b * c ^ 3 + c * a ^ 3 + c * b ^ 3 - (a ^ 4) - (b ^ 4) - (c ^ 4) - (a * b * c ^ 2) - (a * c * b ^ 2) - (b * c * a ^ 2)
  scale Schur_Teq2_left_3vars (u := a) (v := b) (w := c) (k := 1) (l := 0) (right := b * c * a ^ 2 + a * c * b ^ 2 + a * b * c ^ 2 + c ^ 4 + b ^ 4 + a ^ 4)

theorem P90 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) : a * (4 * b + 4 * c - a) / (b ^ 2 + c ^ 2) + b * (4 * c + 4 * a - b) / (c ^ 2 + a ^ 2) + c * (4 * a + 4 * b - c) / (a ^ 2 + b ^ 2) ≤ 21 / 2 := by
  intro_by_homogeneous a + b + c = 3
  llm_frac_apart a * (4 * b + 4 * c - a) / (b ^ 2 + c ^ 2) + b * (4 * c + 4 * a - b) / (c ^ 2 + a ^ 2) + c * (4 * a + 4 * b - c) / (a ^ 2 + b ^ 2) - (21 / 2) = 4 * a * b / (a ^ 2 + c ^ 2) + 4 * a * b / (b ^ 2 + c ^ 2) + 4 * a * c / (a ^ 2 + b ^ 2) + 4 * a * c / (b ^ 2 + c ^ 2) + 4 * b * c / (a ^ 2 + b ^ 2) + 4 * b * c / (a ^ 2 + c ^ 2) - (21 / (2)) - (c ^ 2 / (a ^ 2 + b ^ 2)) - (b ^ 2 / (a ^ 2 + c ^ 2)) - (a ^ 2 / (b ^ 2 + c ^ 2))
  llm_simplify 4 * a * b / (a ^ 2 + c ^ 2) + 4 * a * b / (b ^ 2 + c ^ 2) + 4 * a * c / (a ^ 2 + b ^ 2) + 4 * a * c / (b ^ 2 + c ^ 2) + 4 * b * c / (a ^ 2 + b ^ 2) + 4 * b * c / (a ^ 2 + c ^ 2) - (a ^ 2 / (b ^ 2 + c ^ 2) + b ^ 2 / (a ^ 2 + c ^ 2) + c ^ 2 / (a ^ 2 + b ^ 2) + 21 / 2) = (a * (a ^ 2 + b ^ 2) * (a ^ 2 + c ^ 2) * (4 * b + 4 * c - (a)) + b * (a ^ 2 + b ^ 2) * (b ^ 2 + c ^ 2) * (4 * a + 4 * c - (b)) + c * (a ^ 2 + c ^ 2) * (b ^ 2 + c ^ 2) * (4 * a + 4 * b - (c)) - (21 * (a ^ 2 + b ^ 2) * (a ^ 2 + c ^ 2) * (b ^ 2 + c ^ 2) / 2)) / ((a ^ 2 + b ^ 2) * (a ^ 2 + c ^ 2) * (b ^ 2 + c ^ 2))
  llm_frac_reduce (a * (a ^ 2 + b ^ 2) * (a ^ 2 + c ^ 2) * (4 * b + 4 * c - a) + b * (a ^ 2 + b ^ 2) * (b ^ 2 + c ^ 2) * (4 * a + 4 * c - b) + c * (a ^ 2 + c ^ 2) * (b ^ 2 + c ^ 2) * (4 * a + 4 * b - c) - 21 * (a ^ 2 + b ^ 2) * (a ^ 2 + c ^ 2) * (b ^ 2 + c ^ 2) / 2) / ((a ^ 2 + b ^ 2) * (a ^ 2 + c ^ 2) * (b ^ 2 + c ^ 2)) - (0) = (2 * a * (a ^ 2 + b ^ 2) * (a ^ 2 + c ^ 2) * (4 * b + 4 * c - (a)) + 2 * b * (a ^ 2 + b ^ 2) * (b ^ 2 + c ^ 2) * (4 * a + 4 * c - (b)) + 2 * c * (a ^ 2 + c ^ 2) * (b ^ 2 + c ^ 2) * (4 * a + 4 * b - (c)) - ((a ^ 2 + b ^ 2) * (a ^ 2 + c ^ 2) * (b ^ 2 + c ^ 2))) / (2 * (a ^ 2 + b ^ 2) * (a ^ 2 + c ^ 2) * (b ^ 2 + c ^ 2)) - (10)
  llm_frac_together (2 * a * (a ^ 2 + b ^ 2) * (a ^ 2 + c ^ 2) * (4 * b + 4 * c - a) + 2 * b * (a ^ 2 + b ^ 2) * (b ^ 2 + c ^ 2) * (4 * a + 4 * c - b) + 2 * c * (a ^ 2 + c ^ 2) * (b ^ 2 + c ^ 2) * (4 * a + 4 * b - c) - (a ^ 2 + b ^ 2) * (a ^ 2 + c ^ 2) * (b ^ 2 + c ^ 2)) / (2 * (a ^ 2 + b ^ 2) * (a ^ 2 + c ^ 2) * (b ^ 2 + c ^ 2)) - (10) = (2 * a * (a ^ 2 + b ^ 2) * (a ^ 2 + c ^ 2) * (4 * b + 4 * c - (a)) + 2 * b * (a ^ 2 + b ^ 2) * (b ^ 2 + c ^ 2) * (4 * a + 4 * c - (b)) + 2 * c * (a ^ 2 + c ^ 2) * (b ^ 2 + c ^ 2) * (4 * a + 4 * b - (c)) - ((a ^ 2 + b ^ 2) * (a ^ 2 + c ^ 2) * (b ^ 2 + c ^ 2))) / (2 * a ^ 4 * b ^ 2 + 2 * a ^ 4 * c ^ 2 + 2 * a ^ 2 * b ^ 4 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * c ^ 4 + 2 * b ^ 4 * c ^ 2 + 2 * b ^ 2 * c ^ 4) - (10)
  llm_frac_apart (2 * a * (a ^ 2 + b ^ 2) * (a ^ 2 + c ^ 2) * (4 * b + 4 * c - a) + 2 * b * (a ^ 2 + b ^ 2) * (b ^ 2 + c ^ 2) * (4 * a + 4 * c - b) + 2 * c * (a ^ 2 + c ^ 2) * (b ^ 2 + c ^ 2) * (4 * a + 4 * b - c) - (a ^ 2 + b ^ 2) * (a ^ 2 + c ^ 2) * (b ^ 2 + c ^ 2)) / (2 * a ^ 4 * b ^ 2 + 2 * a ^ 4 * c ^ 2 + 2 * a ^ 2 * b ^ 4 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * c ^ 4 + 2 * b ^ 4 * c ^ 2 + 2 * b ^ 2 * c ^ 4) - (10) = 2 * a * (a ^ 2 + b ^ 2) * (a ^ 2 + c ^ 2) * (4 * b + 4 * c - (a)) / (2 * a ^ 4 * b ^ 2 + 2 * a ^ 4 * c ^ 2 + 2 * a ^ 2 * b ^ 4 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * c ^ 4 + 2 * b ^ 4 * c ^ 2 + 2 * b ^ 2 * c ^ 4) + 2 * b * (a ^ 2 + b ^ 2) * (b ^ 2 + c ^ 2) * (4 * a + 4 * c - (b)) / (2 * a ^ 4 * b ^ 2 + 2 * a ^ 4 * c ^ 2 + 2 * a ^ 2 * b ^ 4 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * c ^ 4 + 2 * b ^ 4 * c ^ 2 + 2 * b ^ 2 * c ^ 4) + 2 * c * (a ^ 2 + c ^ 2) * (b ^ 2 + c ^ 2) * (4 * a + 4 * b - (c)) / (2 * a ^ 4 * b ^ 2 + 2 * a ^ 4 * c ^ 2 + 2 * a ^ 2 * b ^ 4 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * c ^ 4 + 2 * b ^ 4 * c ^ 2 + 2 * b ^ 2 * c ^ 4) - (10) - ((a ^ 2 + b ^ 2) * (a ^ 2 + c ^ 2) * (b ^ 2 + c ^ 2) / (2 * a ^ 4 * b ^ 2 + 2 * a ^ 4 * c ^ 2 + 2 * a ^ 2 * b ^ 4 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * c ^ 4 + 2 * b ^ 4 * c ^ 2 + 2 * b ^ 2 * c ^ 4))
  closed_by_sos
