import Mathlib
import Math
import Smt

open Real

set_option maxHeartbeats 0
set_option maxRecDepth 80000

set_option linter.unusedVariables false
set_option by_axiom true
#eval use_axiom

macro_rules | `($x / $y)   => `(HDiv.hDiv ($x : ℝ) ($y : ℝ))

theorem P31 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) : a ^ 3 * (b + c - a) / (a ^ 2 + b * c) + b ^ 3 * (c + a - b) / (b ^ 2 + c * a) + c ^ 3 * (a + b - c) / (c ^ 2 + a * b) ≤ 9 * a * b * c / (2 * (a + b + c)) := by
  intro_by_homogeneous a + b + c = 3
  llm_factor a ^ 3 * (b + c - a) / (a ^ 2 + b * c) + b ^ 3 * (c + a - b) / (b ^ 2 + c * a) + c ^ 3 * (a + b - c) / (c ^ 2 + a * b) - (9 * a * b * c / (2 * (a + b + c))) = c ^ 3 * (a + b - (c)) / (a * b + c ^ 2) + b ^ 3 * (a + c - (b)) / (a * c + b ^ 2) - (a ^ 3 * (a - (b) - (c)) / (a ^ 2 + b * c)) - (9 * a * b * c / (2 * (a + b + c)))
  llm_mul_expand c ^ 3 * (a + b - c) / (a * b + c ^ 2) + b ^ 3 * (a + c - b) / (a * c + b ^ 2) - (9 * a * b * c / (2 * (a + b + c)) + a ^ 3 * (a - b - c) / (a ^ 2 + b * c)) = (a * c ^ 3 + b * c ^ 3 - (c ^ 4)) / (a * b + c ^ 2) + (a * b ^ 3 + c * b ^ 3 - (b ^ 4)) / (a * c + b ^ 2) - ((a ^ 4 - (a ^ 3 * b) - (a ^ 3 * c)) / (a ^ 2 + b * c) + 9 * a * b * c / (2 * (a + b + c)))
  llm_cancel_denom ((a * c ^ 3 + b * c ^ 3 - c ^ 4) / (a * b + c ^ 2) + (a * b ^ 3 + c * b ^ 3 - b ^ 4) / (a * c + b ^ 2)) - ((a ^ 4 - a ^ 3 * b - a ^ 3 * c) / (a ^ 2 + b * c) + 9 * a * b * c / (2 * (a + b + c))) = ((a ^ 2 + b * c) * (b ^ 2 + a * c) * (a * c ^ 3 + b * c ^ 3 - (c ^ 4)) * (2 * a + 2 * b + 2 * c) + (a ^ 2 + b * c) * (c ^ 2 + a * b) * (a * b ^ 3 + c * b ^ 3 - (b ^ 4)) * (2 * a + 2 * b + 2 * c) - ((b ^ 2 + a * c) * (c ^ 2 + a * b) * ((a ^ 4 - (b * a ^ 3) - (c * a ^ 3)) * (2 * a + 2 * b + 2 * c) + 9 * a * b * c * (a ^ 2 + b * c)))) / ((a ^ 2 + b * c) * (b ^ 2 + a * c) * (c ^ 2 + a * b) * (2 * a + 2 * b + 2 * c))
  llm_simplify (a ^ 2 + b * c) * (b ^ 2 + a * c) * (a * c ^ 3 + b * c ^ 3 - c ^ 4) * (2 * a + 2 * b + 2 * c) + (a ^ 2 + b * c) * (c ^ 2 + a * b) * (a * b ^ 3 + c * b ^ 3 - b ^ 4) * (2 * a + 2 * b + 2 * c) - ((b ^ 2 + a * c) * (c ^ 2 + a * b) * ((a ^ 4 - b * a ^ 3 - c * a ^ 3) * (2 * a + 2 * b + 2 * c) + 9 * a * b * c * (a ^ 2 + b * c))) = 2 * b ^ 3 * (a ^ 2 + b * c) * (c ^ 2 + a * b) * (a + b + c) * (a + c - (b)) + 2 * c ^ 3 * (a ^ 2 + b * c) * (b ^ 2 + a * c) * (a + b + c) * (a + b - (c)) - (a * (b ^ 2 + a * c) * (c ^ 2 + a * b) * (9 * b * c * (a ^ 2 + b * c) - (2 * a ^ 2 * (a + b + c) * (b + c - (a)))))
  llm_simplify 2 * b ^ 3 * (a ^ 2 + b * c) * (c ^ 2 + a * b) * (a + b + c) * (a + c - b) + 2 * c ^ 3 * (a ^ 2 + b * c) * (b ^ 2 + a * c) * (a + b + c) * (a + b - c) - (a * (b ^ 2 + a * c) * (c ^ 2 + a * b) * (9 * b * c * (a ^ 2 + b * c) - 2 * a ^ 2 * (a + b + c) * (b + c - a))) = a * (b ^ 2 + a * c) * (c ^ 2 + a * b) * (2 * a ^ 2 * (a + b + c) * (b + c - (a)) - (9 * b * c * (a ^ 2 + b * c))) + 2 * b ^ 3 * (a ^ 2 + b * c) * (c ^ 2 + a * b) * (a + b + c) * (a + c - (b)) + 2 * c ^ 3 * (a ^ 2 + b * c) * (b ^ 2 + a * c) * (a + b + c) * (a + b - (c))
  closed_by_sos

theorem P32 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) : 4 * a * b * c / ((a + b) * (b + c) * (c + a)) + 1 ≤ b * c / (a ^ 2 + b * c) + a * b / (c ^ 2 + a * b) + a * c / (b ^ 2 + a * c) := by
  intro_by_homogeneous a + b + c = 3
  scale Titu_variant1_right_3vars (u1 := (b * c)) (u2 := (a * b)) (u3 := (a * c)) (v1 := ((a ^ 2) + (b * c))) (v2 := ((c ^ 2) + (a * b))) (v3 := ((b ^ 2) + (a * c))) (k := 1) (l := 0) (left := 4 * a * b * c / ((a + b) * (b + c) * (c + a)) + 1)
  llm_cancel_denom 4 * a * b * c / ((a + b) * (b + c) * (c + a)) + 1 - ((b * c + a * b + a * c) ^ 2 / (b * c * (a ^ 2 + b * c) + a * b * (c ^ 2 + a * b) + a * c * (b ^ 2 + a * c))) = 1 + 4 * a * b * c / ((a + b) * (a + c) * (b + c)) - (((b * c) ^ 2 + (a * b) ^ 2 + (a * c) ^ 2 + 2 * a * b * c * (b + c + a)) / (a ^ 2 * b * c + a * b ^ 2 * c + a * b * c ^ 2 + (a * b) ^ 2 + (a * c) ^ 2 + (b * c) ^ 2))
  llm_simplify 1 + 4 * a * b * c / ((a + b) * (a + c) * (b + c)) - (((b * c) ^ 2 + (a * b) ^ 2 + (a * c) ^ 2 + 2 * a * b * c * (b + c + a)) / (a ^ 2 * b * c + a * b ^ 2 * c + a * b * c ^ 2 + (a * b) ^ 2 + (a * c) ^ 2 + (b * c) ^ 2)) = 1 + 4 * a * b * c / ((a + b) * (a + c) * (b + c)) - ((a ^ 2 * b ^ 2 + a ^ 2 * c ^ 2 + b ^ 2 * c ^ 2 + 2 * a * b * c * (a + b + c)) / (a ^ 2 * b ^ 2 + a ^ 2 * c ^ 2 + a * b * c * (a + b + c) + b ^ 2 * c ^ 2))
  llm_cancel_numer 1 + 4 * a * b * c / ((a + b) * (a + c) * (b + c)) - ((a ^ 2 * b ^ 2 + a ^ 2 * c ^ 2 + b ^ 2 * c ^ 2 + 2 * a * b * c * (a + b + c)) / (a ^ 2 * b ^ 2 + a ^ 2 * c ^ 2 + a * b * c * (a + b + c) + b ^ 2 * c ^ 2)) = 4 * a * b * c / ((a + b) * (a + c) * (b + c)) - (a * b * c * (a + b + c) / (a ^ 2 * b ^ 2 + a ^ 2 * c ^ 2 + a * b * c * (a + b + c) + b ^ 2 * c ^ 2))
  llm_cancel_factor 4 * a * b * c / ((a + b) * (a + c) * (b + c)) - (a * b * c * (a + b + c) / (a ^ 2 * b ^ 2 + a ^ 2 * c ^ 2 + a * b * c * (a + b + c) + b ^ 2 * c ^ 2)) = a * b * c * (4 * (a ^ 2 * b ^ 2 + a ^ 2 * c ^ 2 + a * b * c * (a + b + c) + b ^ 2 * c ^ 2) - ((a + b + c) * (a + b) * (a + c) * (b + c))) / ((a + b) * (a + c) * (b + c) * (a ^ 2 * b ^ 2 + a ^ 2 * c ^ 2 + a * b * c * (a + b + c) + b ^ 2 * c ^ 2))
  sym_pqr_method 2 * a * b * (2 * a * b - (a ^ 2) - (b ^ 2)) ≤ 0
  llm_cancel_factor 2 * a * b * (2 * a * b - a ^ 2 - b ^ 2) - (0) = 2 * a * b * (2 * a * b - (a ^ 2) - (b ^ 2))
  scale AM_GM_normal_right_2vars (u := (b ^ 2)) (v := (a ^ 2)) (k := 1) (l := 0) (left := 2 * a * b)
  sym_simplify 2 * a * b  -  2 * sqrt(b ^ 2 * a ^ 2) = 0
  try close

theorem P33 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) : 2 ≤ (a ^ 2 + b ^ 2 + c ^ 2) / (a * b + b * c + c * a) + 8 * a * b * c / ((a + b) * (b + c) * (c + a)) := by
  intro_by_homogeneous a + b + c = 3
  llm_simplify 2 - ((a ^ 2 + b ^ 2 + c ^ 2) / (a * b + b * c + c * a) + 8 * a * b * c / ((a + b) * (b + c) * (c + a))) = 2 - (a ^ 2 / (a * b + a * c + b * c)) - (b ^ 2 / (a * b + a * c + b * c)) - (c ^ 2 / (a * b + a * c + b * c)) - (8 * a * b * c / ((a + b) * (a + c) * (b + c)))
  llm_cancel_denom 2 - (8 * a * b * c / ((a + b) * (a + c) * (b + c)) + c ^ 2 / (a * b + a * c + b * c) + b ^ 2 / (a * b + a * c + b * c) + a ^ 2 / (a * b + a * c + b * c)) = 2 - ((8 * a * b * c * (a * b + a * c + b * c) + (a ^ 2 + b ^ 2 + c ^ 2) * (a + b) * (a + c) * (b + c)) / ((a + b) * (a + c) * (b + c) * (a * b + a * c + b * c)))
  llm_cancel_denom (2) - ((8 * a * b * c * (a * b + a * c + b * c) + (a ^ 2 + b ^ 2 + c ^ 2) * (a + b) * (a + c) * (b + c)) / ((a + b) * (a + c) * (b + c) * (a * b + a * c + b * c))) = (2 * (a + b) * (a + c) * (b + c) * (a * b + a * c + b * c) - ((a + b) * (a + c) * (b + c) * (a ^ 2 + b ^ 2 + c ^ 2)) - (8 * a * b * c * (a * b + a * c + b * c))) / ((a + b) * (a + c) * (b + c) * (a * b + a * c + b * c))
  sym_pqr_method 2 * b * a ^ 2 * (2 * a * b - (a ^ 2) - (b ^ 2)) ≤ 0
  llm_cancel_factor 2 * b * a ^ 2 * (2 * a * b - a ^ 2 - b ^ 2) - (0) = 2 * a ^ 2 * b * (2 * a * b - (a ^ 2) - (b ^ 2))
  scale AM_GM_normal_right_2vars (u := (b ^ 2)) (v := (a ^ 2)) (k := 1) (l := 0) (left := 2 * a * b)
  sym_simplify 2 * a * b  -  2 * sqrt(b ^ 2 * a ^ 2) = 0
  try close

theorem P34 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) (h : a + b + c = 1) : 2 ≤ (a ^ 3 + b * c) / (a ^ 2 + b * c) + (b ^ 3 + c * a) / (b ^ 2 + c * a) + (c ^ 3 + a * b) / (c ^ 2 + a * b) := by
  make_homogeneous 2 * a + 2 * b + 2 * c - ((a ^ 3 + b * c * (a + b + c)) / (a ^ 2 + b * c)) - ((c ^ 3 + a * b * (a + b + c)) / (a * b + c ^ 2)) - ((b ^ 3 + a * c * (a + b + c)) / (a * c + b ^ 2)) ≤ 0
  llm_factor 2 * a + 2 * b + 2 * c - ((b ^ 3 + a * c * (a + b + c)) / (a * c + b ^ 2) + (c ^ 3 + a * b * (a + b + c)) / (a * b + c ^ 2) + (a ^ 3 + b * c * (a + b + c)) / (a ^ 2 + b * c)) = -a * b * c * (a ^ 4 + b ^ 4 + c ^ 4 - (a ^ 2 * b ^ 2) - (a ^ 2 * c ^ 2) - (b ^ 2 * c ^ 2)) / ((a ^ 2 + b * c) * (a * b + c ^ 2) * (a * c + b ^ 2))
  llm_cancel_factor -a * b * c * (a ^ 4 + b ^ 4 + c ^ 4 - a ^ 2 * b ^ 2 - a ^ 2 * c ^ 2 - b ^ 2 * c ^ 2) / ((a ^ 2 + b * c) * (a * b + c ^ 2) * (a * c + b ^ 2)) - (0) = -a * b * c * ((a ^ 2 - (b ^ 2)) ^ 2 + (b ^ 2 - (c ^ 2)) ^ 2 + (c ^ 2 - (a ^ 2)) ^ 2) / (2 * (a ^ 2 + b * c) * (a * b + c ^ 2) * (a * c + b ^ 2))
  try close

theorem P35 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) (h : a + b + c = 1) : (a ^ 3 + b * c) / (a ^ 2 + b * c) + (b ^ 3 + c * a) / (b ^ 2 + c * a) + (c ^ 3 + a * b) / (c ^ 2 + a * b) ≤ 6 * (a ^ 2 + b ^ 2 + c ^ 2) := by
  make_homogeneous (a ^ 3 + b * c * (a + b + c)) * (a + b + c) / (a ^ 2 + b * c) + (c ^ 3 + a * b * (a + b + c)) * (a + b + c) / (a * b + c ^ 2) + (b ^ 3 + a * c * (a + b + c)) * (a + b + c) / (a * c + b ^ 2) - (6 * a ^ 2) - (6 * b ^ 2) - (6 * c ^ 2) ≤ 0
  llm_cancel_numer (a ^ 3 + b * c * (a + b + c)) * (a + b + c) / (a ^ 2 + b * c) + (c ^ 3 + a * b * (a + b + c)) * (a + b + c) / (a * b + c ^ 2) + (b ^ 3 + a * c * (a + b + c)) * (a + b + c) / (a * c + b ^ 2) - (6 * c ^ 2 + 6 * b ^ 2 + 6 * a ^ 2) = (a + b + c) * (a ^ 3 + a * b * c + b ^ 2 * c + b * c ^ 2) / (a ^ 2 + b * c) + (a + b + c) * (c ^ 3 + a ^ 2 * b + a * b ^ 2 + a * b * c) / (a * b + c ^ 2) + (a + b + c) * (b ^ 3 + a ^ 2 * c + a * b * c + a * c ^ 2) / (a * c + b ^ 2) - (6 * c ^ 2 + 6 * b ^ 2 + 6 * a ^ 2)
  llm_exp_expand (a + b + c) * (a ^ 3 + a * b * c + b ^ 2 * c + b * c ^ 2) / (a ^ 2 + b * c) + (a + b + c) * (c ^ 3 + a ^ 2 * b + a * b ^ 2 + a * b * c) / (a * b + c ^ 2) + (a + b + c) * (b ^ 3 + a ^ 2 * c + a * b * c + a * c ^ 2) / (a * c + b ^ 2) - (6 * c ^ 2 + 6 * b ^ 2 + 6 * a ^ 2) = (a + b + c) * (a + b + c + (b ^ 2 * c + b * c ^ 2) / (a ^ 2 + b * c) + (a ^ 2 * b + a * b ^ 2) / (a * b + c ^ 2) + (a ^ 2 * c + a * c ^ 2) / (a * c + b ^ 2)) - (6 * c ^ 2 + 6 * b ^ 2 + 6 * a ^ 2)
  llm_frac_apart (a + b + c) * (a + b + c + (b ^ 2 * c + b * c ^ 2) / (a ^ 2 + b * c) + (a ^ 2 * b + a * b ^ 2) / (a * b + c ^ 2) + (a ^ 2 * c + a * c ^ 2) / (a * c + b ^ 2)) - (6 * c ^ 2 + 6 * b ^ 2 + 6 * a ^ 2) = (a + b + c) * ((a ^ 2 + b * c) * (b ^ 2 + a * c) * (a * b ^ 2 + b * a ^ 2) + (a ^ 2 + b * c) * (c ^ 2 + a * b) * (a * c ^ 2 + c * a ^ 2) + (b ^ 2 + a * c) * (c ^ 2 + a * b) * (b * c ^ 2 + c * b ^ 2) + (a ^ 2 + b * c) * (b ^ 2 + a * c) * (c ^ 2 + a * b) * (a + b + c)) / ((a ^ 2 + b * c) * (a * b + c ^ 2) * (a * c + b ^ 2)) - (6 * a ^ 2) - (6 * b ^ 2) - (6 * c ^ 2)
  llm_cancel_denom ((a + b + c) * ((a ^ 2 + b * c) * (b ^ 2 + a * c) * (a * b ^ 2 + b * a ^ 2) + (a ^ 2 + b * c) * (c ^ 2 + a * b) * (a * c ^ 2 + c * a ^ 2) + (b ^ 2 + a * c) * (c ^ 2 + a * b) * (b * c ^ 2 + c * b ^ 2) + (a ^ 2 + b * c) * (b ^ 2 + a * c) * (c ^ 2 + a * b) * (a + b + c)) / ((a ^ 2 + b * c) * (a * b + c ^ 2) * (a * c + b ^ 2))) - (6 * c ^ 2 + 6 * b ^ 2 + 6 * a ^ 2) = ((a + b + c) * ((a ^ 2 + b * c) * (b ^ 2 + a * c) * (a * b ^ 2 + b * a ^ 2) + (a ^ 2 + b * c) * (c ^ 2 + a * b) * (a * c ^ 2 + c * a ^ 2) + (b ^ 2 + a * c) * (c ^ 2 + a * b) * (b * c ^ 2 + c * b ^ 2) + (a ^ 2 + b * c) * (b ^ 2 + a * c) * (c ^ 2 + a * b) * (a + b + c)) - ((a ^ 2 + b * c) * (b ^ 2 + a * c) * (c ^ 2 + a * b) * (6 * a ^ 2 + 6 * b ^ 2 + 6 * c ^ 2))) / ((a ^ 2 + b * c) * (b ^ 2 + a * c) * (c ^ 2 + a * b))
  llm_simplify (a + b + c) * ((a ^ 2 + b * c) * (b ^ 2 + a * c) * (a * b ^ 2 + b * a ^ 2) + (a ^ 2 + b * c) * (c ^ 2 + a * b) * (a * c ^ 2 + c * a ^ 2) + (b ^ 2 + a * c) * (c ^ 2 + a * b) * (b * c ^ 2 + c * b ^ 2) + (a ^ 2 + b * c) * (b ^ 2 + a * c) * (c ^ 2 + a * b) * (a + b + c)) - ((a ^ 2 + b * c) * (b ^ 2 + a * c) * (c ^ 2 + a * b) * (6 * a ^ 2 + 6 * b ^ 2 + 6 * c ^ 2)) = (a + b + c) * ((a ^ 2 + b * c) * (b ^ 2 + a * c) * (c ^ 2 + a * b) * (a + b + c) + a * b * (a + b) * (a ^ 2 + b * c) * (b ^ 2 + a * c) + a * c * (a + c) * (a ^ 2 + b * c) * (c ^ 2 + a * b) + b * c * (b + c) * (b ^ 2 + a * c) * (c ^ 2 + a * b)) - (6 * (a ^ 2 + b * c) * (b ^ 2 + a * c) * (c ^ 2 + a * b) * (a ^ 2 + b ^ 2 + c ^ 2))
  scale Cauchy_Schwarz_sqrt_left_2vars (u1 := (((((a ^ 2) + (b * c)) * ((b ^ 2) + (a * c))) * ((c ^ 2) + (a * b))) * ((a + b) + c))) (u2 := (((((a * b) * (a + b)) * ((a ^ 2) + (b * c))) * ((b ^ 2) + (a * c))) + (((((a * c) * (a + c)) * ((a ^ 2) + (b * c))) * ((c ^ 2) + (a * b))) + ((((b * c) * (b + c)) * ((b ^ 2) + (a * c))) * ((c ^ 2) + (a * b)))))) (v1 := 1) (v2 := 1) (k := ((a + b) + c)) (l := 0) (right := 6 * (a ^ 2 + b * c) * (b ^ 2 + a * c) * (c ^ 2 + a * b) * (a ^ 2 + b ^ 2 + c ^ 2))
  llm_cancel_power 2
  llm_simplify ((a + b + c) * sqrt(((a ^ 2 + b * c) * (b ^ 2 + a * c) * (c ^ 2 + a * b) * (a + b + c)) ^ 2 + (a * b * (a + b) * (a ^ 2 + b * c) * (b ^ 2 + a * c) + a * c * (a + c) * (a ^ 2 + b * c) * (c ^ 2 + a * b) + b * c * (b + c) * (b ^ 2 + a * c) * (c ^ 2 + a * b)) ^ 2) * sqrt 2) ^ 2 - ((6 * (a ^ 2 + b * c) * (b ^ 2 + a * c) * (c ^ 2 + a * b) * (a ^ 2 + b ^ 2 + c ^ 2)) ^ 2) = 2 * (a + b + c) ^ 2 * ((a * b * (a + b) * (a ^ 2 + b * c) * (b ^ 2 + a * c) + a * c * (a + c) * (a ^ 2 + b * c) * (c ^ 2 + a * b) + b * c * (b + c) * (b ^ 2 + a * c) * (c ^ 2 + a * b)) ^ 2 + (a ^ 2 + b * c) ^ 2 * (b ^ 2 + a * c) ^ 2 * (c ^ 2 + a * b) ^ 2 * (a + b + c) ^ 2) - (36 * (a ^ 2 + b * c) ^ 2 * (b ^ 2 + a * c) ^ 2 * (c ^ 2 + a * b) ^ 2 * (a ^ 2 + b ^ 2 + c ^ 2) ^ 2)
  scale Cauchy_Schwarz_normal_left_3vars (u1 := a) (u2 := b) (u3 := c) (v1 := 1) (v2 := 1) (v3 := 1) (k := (2 * ((((((((a * b) * (a + b)) * ((a ^ 2) + (b * c))) * ((b ^ 2) + (a * c))) + ((((a * c) * (a + c)) * ((a ^ 2) + (b * c))) * ((c ^ 2) + (a * b)))) + ((((b * c) * (b + c)) * ((b ^ 2) + (a * c))) * ((c ^ 2) + (a * b)))) ^ 2) + ((((((a ^ 2) + (b * c)) ^ 2) * (((b ^ 2) + (a * c)) ^ 2)) * (((c ^ 2) + (a * b)) ^ 2)) * (((a + b) + c) ^ 2))))) (l := 0) (right := 36 * (a ^ 2 + b * c) ^ 2 * (b ^ 2 + a * c) ^ 2 * (c ^ 2 + a * b) ^ 2 * (a ^ 2 + b ^ 2 + c ^ 2) ^ 2)
  llm_simplify 2 * ((a * b * (a + b) * (a ^ 2 + b * c) * (b ^ 2 + a * c) + a * c * (a + c) * (a ^ 2 + b * c) * (c ^ 2 + a * b) + b * c * (b + c) * (b ^ 2 + a * c) * (c ^ 2 + a * b)) ^ 2 + (a ^ 2 + b * c) ^ 2 * (b ^ 2 + a * c) ^ 2 * (c ^ 2 + a * b) ^ 2 * (a + b + c) ^ 2) * (a ^ 2 + b ^ 2 + c ^ 2) * 3 - (36 * (a ^ 2 + b * c) ^ 2 * (b ^ 2 + a * c) ^ 2 * (c ^ 2 + a * b) ^ 2 * (a ^ 2 + b ^ 2 + c ^ 2) ^ 2) = 6 * (a ^ 2 + b ^ 2 + c ^ 2) * ((a * b * (a + b) * (a ^ 2 + b * c) * (b ^ 2 + a * c) + a * c * (a + c) * (a ^ 2 + b * c) * (c ^ 2 + a * b) + b * c * (b + c) * (b ^ 2 + a * c) * (c ^ 2 + a * b)) ^ 2 + (a ^ 2 + b * c) ^ 2 * (b ^ 2 + a * c) ^ 2 * (c ^ 2 + a * b) ^ 2 * (a + b + c) ^ 2 - (6 * (a ^ 2 + b * c) ^ 2 * (b ^ 2 + a * c) ^ 2 * (c ^ 2 + a * b) ^ 2 * (a ^ 2 + b ^ 2 + c ^ 2)))
  llm_frac_reduce 6 * (a ^ 2 + b ^ 2 + c ^ 2) * ((a * b * (a + b) * (a ^ 2 + b * c) * (b ^ 2 + a * c) + a * c * (a + c) * (a ^ 2 + b * c) * (c ^ 2 + a * b) + b * c * (b + c) * (b ^ 2 + a * c) * (c ^ 2 + a * b)) ^ 2 + (a ^ 2 + b * c) ^ 2 * (b ^ 2 + a * c) ^ 2 * (c ^ 2 + a * b) ^ 2 * (a + b + c) ^ 2 - 6 * (a ^ 2 + b * c) ^ 2 * (b ^ 2 + a * c) ^ 2 * (c ^ 2 + a * b) ^ 2 * (a ^ 2 + b ^ 2 + c ^ 2)) - (0) = 6 * (a ^ 2 + b ^ 2 + c ^ 2) * ((a * b * (a + b) * (a ^ 2 + b * c) * (b ^ 2 + a * c) + a * c * (a + c) * (a ^ 2 + b * c) * (c ^ 2 + a * b) + b * c * (b + c) * (b ^ 2 + a * c) * (c ^ 2 + a * b)) ^ 2 + (a ^ 2 + b * c) ^ 2 * (b ^ 2 + a * c) ^ 2 * (c ^ 2 + a * b) ^ 2 * ((a + b + c) ^ 2 - (6 * (a ^ 2 + b ^ 2 + c ^ 2))))
  closed_by_sos

theorem P36 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) (h1 : a + b > c) (h2 : b + c > a) (h3 : c + a > b) : 1 / a + 1 / b + 1 / c ≤ 1 / (a + b - c) + 1 / (b + c - a) + 1 / (c + a - b) := by
  intro_by_homogeneous a + b + c = 3
  scale Karamata_div_cycle_right_3vars (u := b) (v := a) (w := c) (k := 1) (l := 0) (left := 1 / a + 1 / b + 1 / c)

theorem P37 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) : (a ^ 2 * b + b ^ 2 * c + c ^ 2 * a) ^ 2 / (a * b ^ 2 + b * c ^ 2 + c * a ^ 2) + (a * b ^ 2 + b * c ^ 2 + c * a ^ 2) ^ 2 / (a ^ 2 * b + b ^ 2 * c + c ^ 2 * a) ≤ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b * c := by
  intro_by_homogeneous a + b + c = 3
  llm_cancel_factor ((a ^ 2 * b + b ^ 2 * c + c ^ 2 * a) ^ 2 / (a * b ^ 2 + b * c ^ 2 + c * a ^ 2) + (a * b ^ 2 + b * c ^ 2 + c * a ^ 2) ^ 2 / (a ^ 2 * b + b ^ 2 * c + c ^ 2 * a)) - (a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b * c) = (a) * (b) * (c) * (1 / (a ^ 2 * c + a * b ^ 2 + b * c ^ 2)) * (1 / (a ^ 2 * b + a * c ^ 2 + b ^ 2 * c)) * (a ^ 3 * b ^ 3 + a ^ 3 * c ^ 3 + b ^ 3 * c ^ 3 - (a ^ 6) - (b ^ 6) - (c ^ 6))
  scale Muirhead_Req0_onestep_left_3vars (u := b) (v := a) (w := c) (p := 3) (q := 3) (k := 1) (l := 0) (right := c ^ 6 + b ^ 6 + a ^ 6)
  scale Muirhead_Req0_left_3vars (u := b) (v := a) (w := c) (p := 4) (q := 2) (k := 1) (l := 0) (right := c ^ 6 + b ^ 6 + a ^ 6)
  try close

theorem P38 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) : 3 ≤ (a + 1 / b - 1) * (b + 1 / c - 1) + (b + 1 / c - 1) * (c + 1 / a - 1) + (c + 1 / a - 1) * (a + 1 / b - 1) := by
  sorry

theorem P39 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) :
  a ^ 2 / (a ^ 2 + b * c) + b ^ 2 / (b ^ 2 + c * a) + c ^ 2 / (c ^ 2 + a * b) ≤ (a + b + c) ^ 2 / (2 * (a * b + b * c + c * a)) := by
  intro_by_homogeneous a + b + c = 3
  llm_simplify a ^ 2 / (a ^ 2 + b * c) + b ^ 2 / (b ^ 2 + c * a) + c ^ 2 / (c ^ 2 + a * b) - ((a + b + c) ^ 2 / (2 * (a * b + b * c + c * a))) = a ^ 2 / (a ^ 2 + b * c) + c ^ 2 / (a * b + c ^ 2) + b ^ 2 / (a * c + b ^ 2) - (1) - ((a ^ 2 + b ^ 2 + c ^ 2) / (2 * (a * b + a * c + b * c)))
  llm_cancel_numer (a ^ 2 / (a ^ 2 + b * c) + c ^ 2 / (a * b + c ^ 2) + b ^ 2 / (a * c + b ^ 2)) - ((a ^ 2 + b ^ 2 + c ^ 2) / (2 * (a * b + a * c + b * c)) + 1) = 2 - ((a ^ 2 + b ^ 2 + c ^ 2) / (2 * a * b + 2 * a * c + 2 * b * c)) - (a * b / (a * b + c ^ 2)) - (a * c / (a * c + b ^ 2)) - (b * c / (a ^ 2 + b * c))
  scale Titu_variant1_right_3vars (u1 := (b * c)) (u2 := (a * c)) (u3 := (a * b)) (v1 := ((a ^ 2) + (b * c))) (v2 := ((a * c) + (b ^ 2))) (v3 := ((a * b) + (c ^ 2))) (k := 1) (l := ((((a ^ 2) + (b ^ 2)) + (c ^ 2)) / ((((2 * a) * b) + ((2 * a) * c)) + ((2 * b) * c)))) (left := 2)
  llm_cancel_factor (2) - ((b * c + a * c + a * b) ^ 2 / (b * c * (a ^ 2 + b * c) + a * c * (a * c + b ^ 2) + a * b * (a * b + c ^ 2)) + (a ^ 2 + b ^ 2 + c ^ 2) / (2 * a * b + 2 * a * c + 2 * b * c)) = (1 / 2) * (1 / (a * b + a * c + b * c)) * (1 / (a ^ 2 * b ^ 2 + a ^ 2 * b * c + a ^ 2 * c ^ 2 + a * b ^ 2 * c + a * b * c ^ 2 + b ^ 2 * c ^ 2)) * (2 * a ^ 3 * b ^ 3 + 2 * a ^ 3 * c ^ 3 + 2 * b ^ 3 * c ^ 3 + a * b ^ 2 * c ^ 3 + a * b ^ 3 * c ^ 2 + b * a ^ 2 * c ^ 3 + b * a ^ 3 * c ^ 2 + c * a ^ 2 * b ^ 3 + c * a ^ 3 * b ^ 2 - (a ^ 2 * b ^ 4) - (a ^ 2 * c ^ 4) - (a ^ 4 * b ^ 2) - (a ^ 4 * c ^ 2) - (b ^ 2 * c ^ 4) - (b ^ 4 * c ^ 2) - (a * b * c ^ 4) - (a * c * b ^ 4) - (b * c * a ^ 4) - (3 * a ^ 2 * b ^ 2 * c ^ 2))
  sym_pqr_method 3 * a ^ 2 * b ^ 2 * (2 * a * b - (a ^ 2) - (b ^ 2)) ≤ 0
  llm_cancel_factor 3 * a ^ 2 * b ^ 2 * (2 * a * b - a ^ 2 - b ^ 2) - (0) = 3 * a ^ 2 * b ^ 2 * (2 * a * b - (a ^ 2) - (b ^ 2))
  scale AM_GM_normal_right_2vars (u := (b ^ 2)) (v := (a ^ 2)) (k := 1) (l := 0) (left := 2 * a * b)
  sym_simplify 2 * a * b  -  2 * sqrt(b ^ 2 * a ^ 2) = 0
  try close

theorem P40 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) : a * b * c * sqrt(3 * (a * b + b * c + c * a)) ≤ a ^ 2 * b ^ 2 * sqrt((a + c) * (b + c)) / (a + b) + b ^ 2 * c ^ 2 * sqrt((b + a) * (c + a)) / (b + c) + c ^ 2 * a ^ 2 * sqrt((c + b) * (a + b)) / (c + a) := by
  intro_by_homogeneous a + b + c = 3
  scale Titu_cycle_mul_refactor_right_3vars (u1 := (a * b)) (u2 := (b * c)) (u3 := (c * a)) (v1 := (a + b)) (v2 := (b + c)) (v3 := (c + a)) (w1 := sqrt (((a + c) * (b + c)))) (w2 := sqrt (((b + a) * (c + a)))) (w3 := sqrt (((c + b) * (a + b)))) (k := 1) (l := 0) (left := a * b * c * sqrt(3 * (a * b + b * c + c * a)))
  llm_cancel_denom (a * b * c * sqrt(3 * (a * b + b * c + c * a))) - ((a * b + b * c + c * a) ^ 2 / ((a + b) / sqrt((a + c) * (b + c)) + (b + c) / sqrt((b + a) * (c + a)) + (c + a) / sqrt((c + b) * (a + b)))) = (a * b * c * sqrt (3 * a * b + 3 * a * c + 3 * b * c) * (sqrt ((a + b) * (a + c)) * sqrt ((a + b) * (b + c)) * (a + b) + sqrt ((a + b) * (a + c)) * sqrt ((a + c) * (b + c)) * (a + c) + sqrt ((a + b) * (b + c)) * sqrt ((a + c) * (b + c)) * (b + c)) - (sqrt ((a + b) * (a + c)) * sqrt ((a + b) * (b + c)) * sqrt ((a + c) * (b + c)) * (a * b + a * c + b * c) ^ 2)) / (sqrt ((a + b) * (a + c)) * sqrt ((a + b) * (b + c)) * (a + b) + sqrt ((a + b) * (a + c)) * sqrt ((a + c) * (b + c)) * (a + c) + sqrt ((a + b) * (b + c)) * sqrt ((a + c) * (b + c)) * (b + c))
  scale Cauchy_Schwarz_sqrt_left_3vars (u1 := (a + b)) (u2 := (a + c)) (u3 := (b + c)) (v1 := (sqrt (((a + b) * (a + c))) * sqrt (((a + b) * (b + c))))) (v2 := (sqrt (((a + b) * (a + c))) * sqrt (((a + c) * (b + c))))) (v3 := (sqrt (((a + b) * (b + c))) * sqrt (((a + c) * (b + c))))) (k := (((a * b) * c) * sqrt (((((3 * a) * b) + ((3 * a) * c)) + ((3 * b) * c))))) (l := 0) (right := sqrt((a + b) * (a + c)) * sqrt((a + b) * (b + c)) * sqrt((a + c) * (b + c)) * (a * b + a * c + b * c) ^ 2)
  llm_simplify a * b * c * sqrt(3 * a * b + 3 * a * c + 3 * b * c) * sqrt((a + b) ^ 2 + (a + c) ^ 2 + (b + c) ^ 2) * sqrt((sqrt((a + b) * (a + c)) * sqrt((a + b) * (b + c))) ^ 2 + (sqrt((a + b) * (a + c)) * sqrt((a + c) * (b + c))) ^ 2 + (sqrt((a + b) * (b + c)) * sqrt((a + c) * (b + c))) ^ 2) - (sqrt((a + b) * (a + c)) * sqrt((a + b) * (b + c)) * sqrt((a + c) * (b + c)) * (a * b + a * c + b * c) ^ 2) = a * b * c * sqrt ((a + b) ^ 2 + (a + c) ^ 2 + (b + c) ^ 2) * sqrt (3 * a * b + 3 * a * c + 3 * b * c) * sqrt ((a + b) ^ 2 * (a + c) * (b + c) + (a + c) ^ 2 * (a + b) * (b + c) + (b + c) ^ 2 * (a + b) * (a + c)) - ((a * b + a * c + b * c) ^ 2 * (a + b) * (a + c) * (b + c))
  llm_exp_expand a * b * c * sqrt((a + b) ^ 2 + (a + c) ^ 2 + (b + c) ^ 2) * sqrt(3 * a * b + 3 * a * c + 3 * b * c) * sqrt((a + b) ^ 2 * (a + c) * (b + c) + (a + c) ^ 2 * (a + b) * (b + c) + (b + c) ^ 2 * (a + b) * (a + c)) - ((a * b + a * c + b * c) ^ 2 * (a + b) * (a + c) * (b + c)) = a * b * c * sqrt ((a + b) ^ 2 + (a + c) ^ 2 + (b + c) ^ 2) * sqrt (3 * (a * b + a * c + b * c)) * sqrt ((a + b) ^ 2 * (a + c) * (b + c) + (a + c) ^ 2 * (a + b) * (b + c) + (b + c) ^ 2 * (a + b) * (a + c)) - (((a * b) ^ 2 + (a * c) ^ 2 + (b * c) ^ 2 + 2 * a * b * a * c + 2 * a * b * b * c + 2 * a * c * b * c) * (a + b) * (a + c) * (b + c))
  llm_cancel_power 2
  llm_cancel_factor ((a * b * c * sqrt((a + b) ^ 2 + (a + c) ^ 2 + (b + c) ^ 2) * sqrt(3 * (a * b + a * c + b * c)) * sqrt((a + b) ^ 2 * (a + c) * (b + c) + (a + c) ^ 2 * (a + b) * (b + c) + (b + c) ^ 2 * (a + b) * (a + c))) ^ 2) - ((((a * b) ^ 2 + (a * c) ^ 2 + (b * c) ^ 2 + 2 * a * b * a * c + 2 * a * b * b * c + 2 * a * c * b * c) * (a + b) * (a + c) * (b + c)) ^ 2) = (a + b) * (a + c) * (b + c) * (a * b + a * c + b * c) * (5 * a ^ 2 * b ^ 3 * c ^ 4 + 5 * a ^ 2 * b ^ 4 * c ^ 3 + 5 * a ^ 3 * b ^ 2 * c ^ 4 + 5 * a ^ 3 * b ^ 4 * c ^ 2 + 5 * a ^ 4 * b ^ 2 * c ^ 3 + 5 * a ^ 4 * b ^ 3 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 5 + 6 * a ^ 2 * b ^ 5 * c ^ 2 + 6 * a ^ 3 * b ^ 3 * c ^ 3 + 6 * a ^ 5 * b ^ 2 * c ^ 2 - (a ^ 4 * b ^ 5) - (a ^ 4 * c ^ 5) - (a ^ 5 * b ^ 4) - (a ^ 5 * c ^ 4) - (b ^ 4 * c ^ 5) - (b ^ 5 * c ^ 4) - (8 * a * b ^ 4 * c ^ 4) - (8 * b * a ^ 4 * c ^ 4) - (8 * c * a ^ 4 * b ^ 4) - (4 * a * b ^ 3 * c ^ 5) - (4 * a * b ^ 5 * c ^ 3) - (4 * b * a ^ 3 * c ^ 5) - (4 * b * a ^ 5 * c ^ 3) - (4 * c * a ^ 3 * b ^ 5) - (4 * c * a ^ 5 * b ^ 3))
  scale weighted_AM_GM_normal_left_2vars (u := a) (v := b) (i1 := 2) (i2 := 2) (k := ((c ^ 5) * 6)) (l := (((((((((5 * (a ^ 2)) * (b ^ 3)) * (c ^ 4)) + (((5 * (a ^ 2)) * (b ^ 4)) * (c ^ 3))) + (((5 * (a ^ 3)) * (b ^ 2)) * (c ^ 4))) + (((5 * (a ^ 3)) * (b ^ 4)) * (c ^ 2))) + (((5 * (a ^ 4)) * (b ^ 2)) * (c ^ 3))) + (((5 * (a ^ 4)) * (b ^ 3)) * (c ^ 2))) + ((((6 * (a ^ 2)) * (b ^ 5)) * (c ^ 2)) + ((((6 * (a ^ 3)) * (b ^ 3)) * (c ^ 3)) + (((6 * (a ^ 5)) * (b ^ 2)) * (c ^ 2)))))) (right := 4 * c * a ^ 5 * b ^ 3 + 4 * c * a ^ 3 * b ^ 5 + 4 * b * a ^ 5 * c ^ 3 + 4 * b * a ^ 3 * c ^ 5 + 4 * a * b ^ 5 * c ^ 3 + 4 * a * b ^ 3 * c ^ 5 + 8 * c * a ^ 4 * b ^ 4 + 8 * b * a ^ 4 * c ^ 4 + 8 * a * b ^ 4 * c ^ 4 + b ^ 5 * c ^ 4 + b ^ 4 * c ^ 5 + a ^ 5 * c ^ 4 + a ^ 5 * b ^ 4 + a ^ 4 * c ^ 5 + a ^ 4 * b ^ 5)
  llm_cancel_factor (c ^ 5 * 6 * ((2 * a + 2 * b) / 4) ^ 4 + 5 * a ^ 2 * b ^ 3 * c ^ 4 + 5 * a ^ 2 * b ^ 4 * c ^ 3 + 5 * a ^ 3 * b ^ 2 * c ^ 4 + 5 * a ^ 3 * b ^ 4 * c ^ 2 + 5 * a ^ 4 * b ^ 2 * c ^ 3 + 5 * a ^ 4 * b ^ 3 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 2 + 6 * a ^ 3 * b ^ 3 * c ^ 3 + 6 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * c * a ^ 5 * b ^ 3 + 4 * c * a ^ 3 * b ^ 5 + 4 * b * a ^ 5 * c ^ 3 + 4 * b * a ^ 3 * c ^ 5 + 4 * a * b ^ 5 * c ^ 3 + 4 * a * b ^ 3 * c ^ 5 + 8 * c * a ^ 4 * b ^ 4 + 8 * b * a ^ 4 * c ^ 4 + 8 * a * b ^ 4 * c ^ 4 + b ^ 5 * c ^ 4 + b ^ 4 * c ^ 5 + a ^ 5 * c ^ 4 + a ^ 5 * b ^ 4 + a ^ 4 * c ^ 5 + a ^ 4 * b ^ 5) = (1 / 8) * (18 * a ^ 2 * b ^ 2 * c ^ 5 + 40 * a ^ 2 * b ^ 3 * c ^ 4 + 40 * a ^ 2 * b ^ 4 * c ^ 3 + 40 * a ^ 3 * b ^ 2 * c ^ 4 + 40 * a ^ 3 * b ^ 4 * c ^ 2 + 40 * a ^ 4 * b ^ 2 * c ^ 3 + 40 * a ^ 4 * b ^ 3 * c ^ 2 + 48 * a ^ 2 * b ^ 5 * c ^ 2 + 48 * a ^ 3 * b ^ 3 * c ^ 3 + 48 * a ^ 5 * b ^ 2 * c ^ 2 - (8 * a ^ 4 * b ^ 5) - (8 * a ^ 5 * b ^ 4) - (8 * a ^ 5 * c ^ 4) - (8 * b ^ 5 * c ^ 4) - (5 * a ^ 4 * c ^ 5) - (5 * b ^ 4 * c ^ 5) - (64 * a * b ^ 4 * c ^ 4) - (64 * b * a ^ 4 * c ^ 4) - (64 * c * a ^ 4 * b ^ 4) - (32 * a * b ^ 5 * c ^ 3) - (32 * b * a ^ 5 * c ^ 3) - (32 * c * a ^ 3 * b ^ 5) - (32 * c * a ^ 5 * b ^ 3) - (20 * a * b ^ 3 * c ^ 5) - (20 * b * a ^ 3 * c ^ 5))
  scale AM_GM_square_right_2vars (u := (c ^ 2)) (v := (b ^ 2)) (k := (8 * (a ^ 5))) (l := (((8 * (a ^ 4)) * (b ^ 5)) + ((((((((((((((20 * b) * (a ^ 3)) * (c ^ 5)) + (((20 * a) * (b ^ 3)) * (c ^ 5))) + (((32 * c) * (a ^ 5)) * (b ^ 3))) + (((32 * c) * (a ^ 3)) * (b ^ 5))) + (((32 * b) * (a ^ 5)) * (c ^ 3))) + (((32 * a) * (b ^ 5)) * (c ^ 3))) + (((64 * c) * (a ^ 4)) * (b ^ 4))) + (((64 * b) * (a ^ 4)) * (c ^ 4))) + (((64 * a) * (b ^ 4)) * (c ^ 4))) + ((5 * (b ^ 4)) * (c ^ 5))) + ((5 * (a ^ 4)) * (c ^ 5))) + ((8 * (b ^ 5)) * (c ^ 4))))) (left := 18 * a ^ 2 * b ^ 2 * c ^ 5 + 40 * a ^ 2 * b ^ 3 * c ^ 4 + 40 * a ^ 2 * b ^ 4 * c ^ 3 + 40 * a ^ 3 * b ^ 2 * c ^ 4 + 40 * a ^ 3 * b ^ 4 * c ^ 2 + 40 * a ^ 4 * b ^ 2 * c ^ 3 + 40 * a ^ 4 * b ^ 3 * c ^ 2 + 48 * a ^ 2 * b ^ 5 * c ^ 2 + 48 * a ^ 3 * b ^ 3 * c ^ 3 + 48 * a ^ 5 * b ^ 2 * c ^ 2)
  scale AM_GM_square_right_2vars (u := (b ^ 2)) (v := (a ^ 2)) (k := (5 * (c ^ 5))) (l := (((8 * (b ^ 5)) * (c ^ 4)) + (((((((((((((16 * (a ^ 5)) * (c ^ 2)) * (b ^ 2)) + ((8 * (a ^ 4)) * (b ^ 5))) + (((20 * b) * (a ^ 3)) * (c ^ 5))) + (((20 * a) * (b ^ 3)) * (c ^ 5))) + (((32 * c) * (a ^ 5)) * (b ^ 3))) + (((32 * c) * (a ^ 3)) * (b ^ 5))) + (((32 * b) * (a ^ 5)) * (c ^ 3))) + (((32 * a) * (b ^ 5)) * (c ^ 3))) + (((64 * c) * (a ^ 4)) * (b ^ 4))) + (((64 * b) * (a ^ 4)) * (c ^ 4))) + (((64 * a) * (b ^ 4)) * (c ^ 4))))) (left := 18 * a ^ 2 * b ^ 2 * c ^ 5 + 40 * a ^ 2 * b ^ 3 * c ^ 4 + 40 * a ^ 2 * b ^ 4 * c ^ 3 + 40 * a ^ 3 * b ^ 2 * c ^ 4 + 40 * a ^ 3 * b ^ 4 * c ^ 2 + 40 * a ^ 4 * b ^ 2 * c ^ 3 + 40 * a ^ 4 * b ^ 3 * c ^ 2 + 48 * a ^ 2 * b ^ 5 * c ^ 2 + 48 * a ^ 3 * b ^ 3 * c ^ 3 + 48 * a ^ 5 * b ^ 2 * c ^ 2)
  llm_frac_together 18 * a ^ 2 * b ^ 2 * c ^ 5 + 40 * a ^ 2 * b ^ 3 * c ^ 4 + 40 * a ^ 2 * b ^ 4 * c ^ 3 + 40 * a ^ 3 * b ^ 2 * c ^ 4 + 40 * a ^ 3 * b ^ 4 * c ^ 2 + 40 * a ^ 4 * b ^ 2 * c ^ 3 + 40 * a ^ 4 * b ^ 3 * c ^ 2 + 48 * a ^ 2 * b ^ 5 * c ^ 2 + 48 * a ^ 3 * b ^ 3 * c ^ 3 + 48 * a ^ 5 * b ^ 2 * c ^ 2 - (10 * c ^ 5 * b ^ 2 * a ^ 2 + 8 * b ^ 5 * c ^ 4 + 16 * a ^ 5 * c ^ 2 * b ^ 2 + 8 * a ^ 4 * b ^ 5 + 20 * b * a ^ 3 * c ^ 5 + 20 * a * b ^ 3 * c ^ 5 + 32 * c * a ^ 5 * b ^ 3 + 32 * c * a ^ 3 * b ^ 5 + 32 * b * a ^ 5 * c ^ 3 + 32 * a * b ^ 5 * c ^ 3 + 64 * c * a ^ 4 * b ^ 4 + 64 * b * a ^ 4 * c ^ 4 + 64 * a * b ^ 4 * c ^ 4) = 8 * a ^ 2 * b ^ 2 * c ^ 5 + 32 * a ^ 5 * b ^ 2 * c ^ 2 + 40 * a ^ 2 * b ^ 3 * c ^ 4 + 40 * a ^ 2 * b ^ 4 * c ^ 3 + 40 * a ^ 3 * b ^ 2 * c ^ 4 + 40 * a ^ 3 * b ^ 4 * c ^ 2 + 40 * a ^ 4 * b ^ 2 * c ^ 3 + 40 * a ^ 4 * b ^ 3 * c ^ 2 + 48 * a ^ 2 * b ^ 5 * c ^ 2 + 48 * a ^ 3 * b ^ 3 * c ^ 3 - (8 * a ^ 4 * b ^ 5) - (8 * b ^ 5 * c ^ 4) - (64 * a * b ^ 4 * c ^ 4) - (64 * b * a ^ 4 * c ^ 4) - (64 * c * a ^ 4 * b ^ 4) - (32 * a * b ^ 5 * c ^ 3) - (32 * b * a ^ 5 * c ^ 3) - (32 * c * a ^ 3 * b ^ 5) - (32 * c * a ^ 5 * b ^ 3) - (20 * a * b ^ 3 * c ^ 5) - (20 * b * a ^ 3 * c ^ 5)
  scale weighted_Power_Mean_Rgt1_right_2vars (u := c) (v := a) (i1 := 1) (i2 := 1) (r := 4) (k := (8 * (b ^ 5))) (l := (((((((((((20 * b) * (a ^ 3)) * (c ^ 5)) + (((20 * a) * (b ^ 3)) * (c ^ 5))) + (((32 * c) * (a ^ 5)) * (b ^ 3))) + (((32 * c) * (a ^ 3)) * (b ^ 5))) + (((32 * b) * (a ^ 5)) * (c ^ 3))) + (((32 * a) * (b ^ 5)) * (c ^ 3))) + (((64 * c) * (a ^ 4)) * (b ^ 4))) + (((64 * b) * (a ^ 4)) * (c ^ 4))) + (((64 * a) * (b ^ 4)) * (c ^ 4)))) (left := 8 * a ^ 2 * b ^ 2 * c ^ 5 + 32 * a ^ 5 * b ^ 2 * c ^ 2 + 40 * a ^ 2 * b ^ 3 * c ^ 4 + 40 * a ^ 2 * b ^ 4 * c ^ 3 + 40 * a ^ 3 * b ^ 2 * c ^ 4 + 40 * a ^ 3 * b ^ 4 * c ^ 2 + 40 * a ^ 4 * b ^ 2 * c ^ 3 + 40 * a ^ 4 * b ^ 3 * c ^ 2 + 48 * a ^ 2 * b ^ 5 * c ^ 2 + 48 * a ^ 3 * b ^ 3 * c ^ 3)
  llm_cancel_denom (8 * a ^ 2 * b ^ 2 * c ^ 5 + 32 * a ^ 5 * b ^ 2 * c ^ 2 + 40 * a ^ 2 * b ^ 3 * c ^ 4 + 40 * a ^ 2 * b ^ 4 * c ^ 3 + 40 * a ^ 3 * b ^ 2 * c ^ 4 + 40 * a ^ 3 * b ^ 4 * c ^ 2 + 40 * a ^ 4 * b ^ 2 * c ^ 3 + 40 * a ^ 4 * b ^ 3 * c ^ 2 + 48 * a ^ 2 * b ^ 5 * c ^ 2 + 48 * a ^ 3 * b ^ 3 * c ^ 3) - (8 * b ^ 5 * ((c + a) ^ 4 / 8) + 20 * b * a ^ 3 * c ^ 5 + 20 * a * b ^ 3 * c ^ 5 + 32 * c * a ^ 5 * b ^ 3 + 32 * c * a ^ 3 * b ^ 5 + 32 * b * a ^ 5 * c ^ 3 + 32 * a * b ^ 5 * c ^ 3 + 64 * c * a ^ 4 * b ^ 4 + 64 * b * a ^ 4 * c ^ 4 + 64 * a * b ^ 4 * c ^ 4) = (64 * a ^ 2 * b ^ 2 * c ^ 5 + 256 * a ^ 5 * b ^ 2 * c ^ 2 + 320 * a ^ 2 * b ^ 3 * c ^ 4 + 320 * a ^ 2 * b ^ 4 * c ^ 3 + 320 * a ^ 3 * b ^ 2 * c ^ 4 + 320 * a ^ 3 * b ^ 4 * c ^ 2 + 320 * a ^ 4 * b ^ 2 * c ^ 3 + 320 * a ^ 4 * b ^ 3 * c ^ 2 + 384 * a ^ 2 * b ^ 5 * c ^ 2 + 384 * a ^ 3 * b ^ 3 * c ^ 3 - (8 * b ^ 5 * (a + c) ^ 4 + 160 * a * b ^ 3 * c ^ 5 + 160 * b * a ^ 3 * c ^ 5 + 256 * a * b ^ 5 * c ^ 3 + 256 * b * a ^ 5 * c ^ 3 + 256 * c * a ^ 3 * b ^ 5 + 256 * c * a ^ 5 * b ^ 3 + 512 * a * b ^ 4 * c ^ 4 + 512 * b * a ^ 4 * c ^ 4 + 512 * c * a ^ 4 * b ^ 4)) / (8)
  llm_mul_expand 64 * a ^ 2 * b ^ 2 * c ^ 5 + 256 * a ^ 5 * b ^ 2 * c ^ 2 + 320 * a ^ 2 * b ^ 3 * c ^ 4 + 320 * a ^ 2 * b ^ 4 * c ^ 3 + 320 * a ^ 3 * b ^ 2 * c ^ 4 + 320 * a ^ 3 * b ^ 4 * c ^ 2 + 320 * a ^ 4 * b ^ 2 * c ^ 3 + 320 * a ^ 4 * b ^ 3 * c ^ 2 + 384 * a ^ 2 * b ^ 5 * c ^ 2 + 384 * a ^ 3 * b ^ 3 * c ^ 3 - (8 * b ^ 5 * (a + c) ^ 4 + 160 * a * b ^ 3 * c ^ 5 + 160 * b * a ^ 3 * c ^ 5 + 256 * a * b ^ 5 * c ^ 3 + 256 * b * a ^ 5 * c ^ 3 + 256 * c * a ^ 3 * b ^ 5 + 256 * c * a ^ 5 * b ^ 3 + 512 * a * b ^ 4 * c ^ 4 + 512 * b * a ^ 4 * c ^ 4 + 512 * c * a ^ 4 * b ^ 4) = 64 * a ^ 2 * b ^ 2 * c ^ 5 + 256 * a ^ 5 * b ^ 2 * c ^ 2 + 320 * a ^ 2 * b ^ 3 * c ^ 4 + 320 * a ^ 2 * b ^ 4 * c ^ 3 + 320 * a ^ 3 * b ^ 2 * c ^ 4 + 320 * a ^ 3 * b ^ 4 * c ^ 2 + 320 * a ^ 4 * b ^ 2 * c ^ 3 + 320 * a ^ 4 * b ^ 3 * c ^ 2 + 336 * a ^ 2 * b ^ 5 * c ^ 2 + 384 * a ^ 3 * b ^ 3 * c ^ 3 - (8 * a ^ 4 * b ^ 5) - (8 * b ^ 5 * c ^ 4) - (512 * a * b ^ 4 * c ^ 4) - (512 * b * a ^ 4 * c ^ 4) - (512 * c * a ^ 4 * b ^ 4) - (288 * a * b ^ 5 * c ^ 3) - (288 * c * a ^ 3 * b ^ 5) - (256 * b * a ^ 5 * c ^ 3) - (256 * c * a ^ 5 * b ^ 3) - (160 * a * b ^ 3 * c ^ 5) - (160 * b * a ^ 3 * c ^ 5)
  scale AM_GM_square_right_2vars (u := (c ^ 2)) (v := (a ^ 2)) (k := (8 * (b ^ 5))) (l := (((((((((((160 * b) * (a ^ 3)) * (c ^ 5)) + (((160 * a) * (b ^ 3)) * (c ^ 5))) + (((256 * c) * (a ^ 5)) * (b ^ 3))) + (((256 * b) * (a ^ 5)) * (c ^ 3))) + (((288 * c) * (a ^ 3)) * (b ^ 5))) + (((288 * a) * (b ^ 5)) * (c ^ 3))) + (((512 * c) * (a ^ 4)) * (b ^ 4))) + (((512 * b) * (a ^ 4)) * (c ^ 4))) + (((512 * a) * (b ^ 4)) * (c ^ 4)))) (left := 64 * a ^ 2 * b ^ 2 * c ^ 5 + 256 * a ^ 5 * b ^ 2 * c ^ 2 + 320 * a ^ 2 * b ^ 3 * c ^ 4 + 320 * a ^ 2 * b ^ 4 * c ^ 3 + 320 * a ^ 3 * b ^ 2 * c ^ 4 + 320 * a ^ 3 * b ^ 4 * c ^ 2 + 320 * a ^ 4 * b ^ 2 * c ^ 3 + 320 * a ^ 4 * b ^ 3 * c ^ 2 + 336 * a ^ 2 * b ^ 5 * c ^ 2 + 384 * a ^ 3 * b ^ 3 * c ^ 3)
  llm_cancel_factor (64 * a ^ 2 * b ^ 2 * c ^ 5 + 256 * a ^ 5 * b ^ 2 * c ^ 2 + 320 * a ^ 2 * b ^ 3 * c ^ 4 + 320 * a ^ 2 * b ^ 4 * c ^ 3 + 320 * a ^ 3 * b ^ 2 * c ^ 4 + 320 * a ^ 3 * b ^ 4 * c ^ 2 + 320 * a ^ 4 * b ^ 2 * c ^ 3 + 320 * a ^ 4 * b ^ 3 * c ^ 2 + 336 * a ^ 2 * b ^ 5 * c ^ 2 + 384 * a ^ 3 * b ^ 3 * c ^ 3) - (16 * b ^ 5 * c ^ 2 * a ^ 2 + 160 * b * a ^ 3 * c ^ 5 + 160 * a * b ^ 3 * c ^ 5 + 256 * c * a ^ 5 * b ^ 3 + 256 * b * a ^ 5 * c ^ 3 + 288 * c * a ^ 3 * b ^ 5 + 288 * a * b ^ 5 * c ^ 3 + 512 * c * a ^ 4 * b ^ 4 + 512 * b * a ^ 4 * c ^ 4 + 512 * a * b ^ 4 * c ^ 4) = (32) * (a) * (b) * (c) * (2 * a * b * c ^ 4 + 8 * b * c * a ^ 4 + 10 * a * c * b ^ 4 + 10 * a * b ^ 2 * c ^ 3 + 10 * a * b ^ 3 * c ^ 2 + 10 * b * a ^ 2 * c ^ 3 + 10 * b * a ^ 3 * c ^ 2 + 10 * c * a ^ 2 * b ^ 3 + 10 * c * a ^ 3 * b ^ 2 + 12 * a ^ 2 * b ^ 2 * c ^ 2 - (16 * a ^ 3 * b ^ 3) - (16 * a ^ 3 * c ^ 3) - (16 * b ^ 3 * c ^ 3) - (9 * a ^ 2 * b ^ 4) - (9 * b ^ 4 * c ^ 2) - (8 * a ^ 4 * b ^ 2) - (8 * a ^ 4 * c ^ 2) - (5 * a ^ 2 * c ^ 4) - (5 * b ^ 2 * c ^ 4))
  scale AM_GM_square_right_2vars (u := b) (v := a) (k := (5 * (c ^ 4))) (l := ((((8 * (a ^ 4)) * (c ^ 2)) + (((8 * (a ^ 4)) * (b ^ 2)) + ((9 * (b ^ 4)) * (c ^ 2)))) + ((((9 * (a ^ 2)) * (b ^ 4)) + ((16 * (b ^ 3)) * (c ^ 3))) + (((16 * (a ^ 3)) * (c ^ 3)) + ((16 * (a ^ 3)) * (b ^ 3)))))) (left := 2 * a * b * c ^ 4 + 8 * b * c * a ^ 4 + 10 * a * c * b ^ 4 + 10 * a * b ^ 2 * c ^ 3 + 10 * a * b ^ 3 * c ^ 2 + 10 * b * a ^ 2 * c ^ 3 + 10 * b * a ^ 3 * c ^ 2 + 10 * c * a ^ 2 * b ^ 3 + 10 * c * a ^ 3 * b ^ 2 + 12 * a ^ 2 * b ^ 2 * c ^ 2)
  scale AM_GM_square_right_2vars (u := c) (v := a) (k := (9 * (b ^ 4))) (l := ((((16 * (a ^ 3)) * (c ^ 3)) + ((16 * (a ^ 3)) * (b ^ 3))) + (((16 * (b ^ 3)) * (c ^ 3)) + (((((10 * (c ^ 4)) * b) * a) + ((8 * (a ^ 4)) * (c ^ 2))) + ((8 * (a ^ 4)) * (b ^ 2)))))) (left := 2 * a * b * c ^ 4 + 8 * b * c * a ^ 4 + 10 * a * c * b ^ 4 + 10 * a * b ^ 2 * c ^ 3 + 10 * a * b ^ 3 * c ^ 2 + 10 * b * a ^ 2 * c ^ 3 + 10 * b * a ^ 3 * c ^ 2 + 10 * c * a ^ 2 * b ^ 3 + 10 * c * a ^ 3 * b ^ 2 + 12 * a ^ 2 * b ^ 2 * c ^ 2)
  llm_simplify 2 * a * b * c ^ 4 + 8 * b * c * a ^ 4 + 10 * a * c * b ^ 4 + 10 * a * b ^ 2 * c ^ 3 + 10 * a * b ^ 3 * c ^ 2 + 10 * b * a ^ 2 * c ^ 3 + 10 * b * a ^ 3 * c ^ 2 + 10 * c * a ^ 2 * b ^ 3 + 10 * c * a ^ 3 * b ^ 2 + 12 * a ^ 2 * b ^ 2 * c ^ 2 - (18 * b ^ 4 * c * a + 16 * a ^ 3 * c ^ 3 + 16 * a ^ 3 * b ^ 3 + 16 * b ^ 3 * c ^ 3 + 10 * c ^ 4 * b * a + 8 * a ^ 4 * c ^ 2 + 8 * a ^ 4 * b ^ 2) = 8 * b * c * a ^ 4 + 10 * a * b ^ 2 * c ^ 3 + 10 * a * b ^ 3 * c ^ 2 + 10 * b * a ^ 2 * c ^ 3 + 10 * b * a ^ 3 * c ^ 2 + 10 * c * a ^ 2 * b ^ 3 + 10 * c * a ^ 3 * b ^ 2 + 12 * a ^ 2 * b ^ 2 * c ^ 2 - (16 * a ^ 3 * b ^ 3) - (16 * a ^ 3 * c ^ 3) - (16 * b ^ 3 * c ^ 3) - (8 * a ^ 4 * b ^ 2) - (8 * a ^ 4 * c ^ 2) - (8 * a * b * c ^ 4) - (8 * a * c * b ^ 4)
  scale AM_GM_square_left_2vars (u := b) (v := c) (k := ((a ^ 4) * 8)) (l := (((((10 * a) * (b ^ 2)) * (c ^ 3)) + ((((10 * a) * (b ^ 3)) * (c ^ 2)) + (((10 * b) * (a ^ 2)) * (c ^ 3)))) + (((((10 * b) * (a ^ 3)) * (c ^ 2)) + (((10 * c) * (a ^ 2)) * (b ^ 3))) + ((((10 * c) * (a ^ 3)) * (b ^ 2)) + (((12 * (a ^ 2)) * (b ^ 2)) * (c ^ 2)))))) (right := 8 * a * c * b ^ 4 + 8 * a * b * c ^ 4 + 8 * a ^ 4 * c ^ 2 + 8 * a ^ 4 * b ^ 2 + 16 * b ^ 3 * c ^ 3 + 16 * a ^ 3 * c ^ 3 + 16 * a ^ 3 * b ^ 3)
  llm_cancel_denom (a ^ 4 * 8 * (b ^ 2 + c ^ 2) / 2 + 10 * a * b ^ 2 * c ^ 3 + 10 * a * b ^ 3 * c ^ 2 + 10 * b * a ^ 2 * c ^ 3 + 10 * b * a ^ 3 * c ^ 2 + 10 * c * a ^ 2 * b ^ 3 + 10 * c * a ^ 3 * b ^ 2 + 12 * a ^ 2 * b ^ 2 * c ^ 2) - (8 * a * c * b ^ 4 + 8 * a * b * c ^ 4 + 8 * a ^ 4 * c ^ 2 + 8 * a ^ 4 * b ^ 2 + 16 * b ^ 3 * c ^ 3 + 16 * a ^ 3 * c ^ 3 + 16 * a ^ 3 * b ^ 3) = (8 * a ^ 4 * (b ^ 2 + c ^ 2) + 20 * a * b ^ 2 * c ^ 3 + 20 * a * b ^ 3 * c ^ 2 + 20 * b * a ^ 2 * c ^ 3 + 20 * b * a ^ 3 * c ^ 2 + 20 * c * a ^ 2 * b ^ 3 + 20 * c * a ^ 3 * b ^ 2 + 24 * a ^ 2 * b ^ 2 * c ^ 2 - (32 * a ^ 3 * b ^ 3) - (32 * a ^ 3 * c ^ 3) - (32 * b ^ 3 * c ^ 3) - (16 * a ^ 4 * b ^ 2) - (16 * a ^ 4 * c ^ 2) - (16 * a * b * c ^ 4) - (16 * a * c * b ^ 4)) / (2)
  llm_mul_expand 8 * a ^ 4 * (b ^ 2 + c ^ 2) + 20 * a * b ^ 2 * c ^ 3 + 20 * a * b ^ 3 * c ^ 2 + 20 * b * a ^ 2 * c ^ 3 + 20 * b * a ^ 3 * c ^ 2 + 20 * c * a ^ 2 * b ^ 3 + 20 * c * a ^ 3 * b ^ 2 + 24 * a ^ 2 * b ^ 2 * c ^ 2 - (16 * a * c * b ^ 4 + 16 * a * b * c ^ 4 + 16 * a ^ 4 * c ^ 2 + 16 * a ^ 4 * b ^ 2 + 32 * b ^ 3 * c ^ 3 + 32 * a ^ 3 * c ^ 3 + 32 * a ^ 3 * b ^ 3) = 20 * a * b ^ 2 * c ^ 3 + 20 * a * b ^ 3 * c ^ 2 + 20 * b * a ^ 2 * c ^ 3 + 20 * b * a ^ 3 * c ^ 2 + 20 * c * a ^ 2 * b ^ 3 + 20 * c * a ^ 3 * b ^ 2 + 24 * a ^ 2 * b ^ 2 * c ^ 2 - (8 * a ^ 4 * b ^ 2) - (8 * a ^ 4 * c ^ 2) - (16 * a * c * b ^ 4) - (16 * a * b * c ^ 4) - (32 * b ^ 3 * c ^ 3) - (32 * a ^ 3 * c ^ 3) - (32 * a ^ 3 * b ^ 3)
  scale Muirhead_normal_Qeq1_left_2vars (u := b) (v := a) (p := 2) (k := ((c ^ 3) * 20)) (l := ((((20 * a) * (b ^ 3)) * (c ^ 2)) + (((((20 * b) * (a ^ 3)) * (c ^ 2)) + (((20 * c) * (a ^ 2)) * (b ^ 3))) + ((((20 * c) * (a ^ 3)) * (b ^ 2)) + (((24 * (a ^ 2)) * (b ^ 2)) * (c ^ 2)))))) (right := 32 * a ^ 3 * b ^ 3 + 32 * a ^ 3 * c ^ 3 + 32 * b ^ 3 * c ^ 3 + 16 * a * b * c ^ 4 + 16 * a * c * b ^ 4 + 8 * a ^ 4 * c ^ 2 + 8 * a ^ 4 * b ^ 2)
  llm_frac_reduce c ^ 3 * 20 * (b ^ 3 + a ^ 3) + 20 * a * b ^ 3 * c ^ 2 + 20 * b * a ^ 3 * c ^ 2 + 20 * c * a ^ 2 * b ^ 3 + 20 * c * a ^ 3 * b ^ 2 + 24 * a ^ 2 * b ^ 2 * c ^ 2 - (32 * a ^ 3 * b ^ 3 + 32 * a ^ 3 * c ^ 3 + 32 * b ^ 3 * c ^ 3 + 16 * a * b * c ^ 4 + 16 * a * c * b ^ 4 + 8 * a ^ 4 * c ^ 2 + 8 * a ^ 4 * b ^ 2) = 20 * a * b ^ 3 * c ^ 2 + 20 * b * a ^ 3 * c ^ 2 + 20 * c * a ^ 2 * b ^ 3 + 20 * c * a ^ 3 * b ^ 2 + 24 * a ^ 2 * b ^ 2 * c ^ 2 - (32 * a ^ 3 * b ^ 3) - (12 * a ^ 3 * c ^ 3) - (12 * b ^ 3 * c ^ 3) - (16 * a * b * c ^ 4) - (16 * a * c * b ^ 4) - (8 * a ^ 4 * c ^ 2) - (8 * a ^ 4 * b ^ 2)
  scale AM_GM_square_right_2vars (u := b) (v := c) (k := (8 * (a ^ 4))) (l := ((((16 * a) * c) * (b ^ 4)) + (((((16 * a) * b) * (c ^ 4)) + ((12 * (b ^ 3)) * (c ^ 3))) + (((12 * (a ^ 3)) * (c ^ 3)) + ((32 * (a ^ 3)) * (b ^ 3)))))) (left := 20 * a * b ^ 3 * c ^ 2 + 20 * b * a ^ 3 * c ^ 2 + 20 * c * a ^ 2 * b ^ 3 + 20 * c * a ^ 3 * b ^ 2 + 24 * a ^ 2 * b ^ 2 * c ^ 2)
  scale Muirhead_Qeq0_onestep_right_2vars (u := b) (v := a) (p := 3) (k := (12 * (c ^ 3))) (l := (((32 * (a ^ 3)) * (b ^ 3)) + (((((16 * (a ^ 4)) * b) * c) + (((16 * a) * c) * (b ^ 4))) + (((16 * a) * b) * (c ^ 4))))) (left := 20 * a * b ^ 3 * c ^ 2 + 20 * b * a ^ 3 * c ^ 2 + 20 * c * a ^ 2 * b ^ 3 + 20 * c * a ^ 3 * b ^ 2 + 24 * a ^ 2 * b ^ 2 * c ^ 2)
  llm_frac_together 20 * a * b ^ 3 * c ^ 2 + 20 * b * a ^ 3 * c ^ 2 + 20 * c * a ^ 2 * b ^ 3 + 20 * c * a ^ 3 * b ^ 2 + 24 * a ^ 2 * b ^ 2 * c ^ 2 - (12 * c ^ 3 * (b ^ 2 * a + a ^ 2 * b) + 32 * a ^ 3 * b ^ 3 + 16 * a ^ 4 * b * c + 16 * a * c * b ^ 4 + 16 * a * b * c ^ 4) = 20 * a * b ^ 3 * c ^ 2 + 20 * b * a ^ 3 * c ^ 2 + 20 * c * a ^ 2 * b ^ 3 + 20 * c * a ^ 3 * b ^ 2 + 24 * a ^ 2 * b ^ 2 * c ^ 2 - (12 * c ^ 3 * b ^ 2 * a) - (12 * c ^ 3 * a ^ 2 * b) - (32 * a ^ 3 * b ^ 3) - (16 * a ^ 4 * b * c) - (16 * a * c * b ^ 4) - (16 * a * b * c ^ 4)
  llm_cancel_factor (20 * a * b ^ 3 * c ^ 2 + 20 * b * a ^ 3 * c ^ 2 + 20 * c * a ^ 2 * b ^ 3 + 20 * c * a ^ 3 * b ^ 2 + 24 * a ^ 2 * b ^ 2 * c ^ 2) - (16 * a * b * c ^ 4 + 16 * a * c * b ^ 4 + 16 * a ^ 4 * b * c + 32 * a ^ 3 * b ^ 3 + 12 * c ^ 3 * a ^ 2 * b + 12 * c ^ 3 * b ^ 2 * a) = (4) * (a) * (b) * (5 * a ^ 2 * c ^ 2 + 5 * b ^ 2 * c ^ 2 + 5 * a * c * b ^ 2 + 5 * b * c * a ^ 2 + 6 * a * b * c ^ 2 - (4 * c ^ 4) - (8 * a ^ 2 * b ^ 2) - (4 * c * a ^ 3) - (4 * c * b ^ 3) - (3 * a * c ^ 3) - (3 * b * c ^ 3))
  llm_factor 5 * a ^ 2 * c ^ 2 + 5 * b ^ 2 * c ^ 2 + 5 * a * c * b ^ 2 + 5 * b * c * a ^ 2 + 6 * a * b * c ^ 2 - (3 * b * c ^ 3 + 3 * a * c ^ 3 + 4 * c * b ^ 3 + 4 * c * a ^ 3 + 8 * a ^ 2 * b ^ 2 + 4 * c ^ 4) = 5 * c ^ 2 * (a ^ 2 + b ^ 2) + (a + b) * (5 * a * b * c - (3 * c ^ 3)) + 6 * a * b * c ^ 2 - (4 * c * (a ^ 3 + b ^ 3)) - (8 * a ^ 2 * b ^ 2) - (4 * c ^ 4)
  scale AM_GM_square_left_2vars (u := (c ^ 2)) (v := (a * b)) (k := 6) (l := (((5 * (c ^ 2)) * ((a ^ 2) + (b ^ 2))) + ((a + b) * ((((5 * a) * b) * c) - (3 * (c ^ 3)))))) (right := 4 * c ^ 4 + 8 * a ^ 2 * b ^ 2 + 4 * c * (a ^ 3 + b ^ 3))
  llm_cancel_factor 6 * ((c ^ 2) ^ 2 + (a * b) ^ 2) / 2 + 5 * c ^ 2 * (a ^ 2 + b ^ 2) + (a + b) * (5 * a * b * c - 3 * c ^ 3) - (4 * c ^ 4 + 8 * a ^ 2 * b ^ 2 + 4 * c * (a ^ 3 + b ^ 3)) = 5 * c ^ 2 * (a ^ 2 + b ^ 2) + 5 * a * b * c * (a + b) - (c ^ 4) - (5 * a ^ 2 * b ^ 2) - (3 * c ^ 3 * (a + b)) - (4 * c * (a ^ 3 + b ^ 3))
  llm_cancel_factor 5 * c ^ 2 * (a ^ 2 + b ^ 2) + 5 * a * b * c * (a + b) - (4 * c * (a ^ 3 + b ^ 3) + 3 * c ^ 3 * (a + b) + 5 * a ^ 2 * b ^ 2 + c ^ 4) = (5 * a * b * c - (4 * c * (a ^ 2 + b ^ 2 - (a * b))) - (3 * c ^ 3)) * (a + b) + 5 * c ^ 2 * (a ^ 2 + b ^ 2) - (5 * a ^ 2 * b ^ 2) - (c ^ 4)
  llm_simplify (5 * a * b * c - 4 * c * (a ^ 2 + b ^ 2 - a * b) - 3 * c ^ 3) * (a + b) + 5 * c ^ 2 * (a ^ 2 + b ^ 2) - (c ^ 4 + 5 * a ^ 2 * b ^ 2) = 5 * a ^ 2 * b * c + 5 * a * b ^ 2 * c + 5 * c ^ 2 * a ^ 2 + 5 * c ^ 2 * b ^ 2 - (4 * c * (a ^ 3 + b ^ 3)) - (3 * a * c ^ 3) - (3 * b * c ^ 3) - (c ^ 4) - (5 * a ^ 2 * b ^ 2)
  scale AM_GM_square_left_2vars (u := b) (v := c) (k := (5 * (a ^ 2))) (l := ((((5 * a) * (b ^ 2)) * c) + (((5 * (c ^ 2)) * (a ^ 2)) + ((5 * (c ^ 2)) * (b ^ 2))))) (right := 5 * a ^ 2 * b ^ 2 + c ^ 4 + 3 * b * c ^ 3 + 3 * a * c ^ 3 + 4 * c * (a ^ 3 + b ^ 3))
  llm_simplify 5 * a ^ 2 * (b ^ 2 + c ^ 2) / 2 + 5 * a * b ^ 2 * c + 5 * c ^ 2 * a ^ 2 + 5 * c ^ 2 * b ^ 2 - (5 * a ^ 2 * b ^ 2 + c ^ 4 + 3 * b * c ^ 3 + 3 * a * c ^ 3 + 4 * c * (a ^ 3 + b ^ 3)) = 5 * c ^ 2 * b ^ 2 + 5 * a * b ^ 2 * c + 15 * a ^ 2 * c ^ 2 / (2) - (c ^ 4) - (3 * a * c ^ 3) - (3 * b * c ^ 3) - (4 * c * (a ^ 3 + b ^ 3)) - (5 * a ^ 2 * b ^ 2 / 2)
  llm_factor 5 * c ^ 2 * b ^ 2 + 5 * a * b ^ 2 * c + 15 * a ^ 2 * c ^ 2 / 2 - (5 * a ^ 2 * b ^ 2 / 2 + 4 * c * (a ^ 3 + b ^ 3) + 3 * b * c ^ 3 + 3 * a * c ^ 3 + c ^ 4) = 5 * a * b ^ 2 * c + 5 * b ^ 2 * (2 * c ^ 2 - (a ^ 2)) / (2) + 15 * a ^ 2 * c ^ 2 / (2) - (c ^ 4) - (3 * c ^ 3 * (a + b)) - (4 * c * (a ^ 3 + b ^ 3))
  scale AM_GM_square_left_2vars (u := a) (v := c) (k := (5 * (b ^ 2))) (l := ((((5 * (b ^ 2)) * ((2 * (c ^ 2)) - (a ^ 2))) / 2) + (((15 * (a ^ 2)) * (c ^ 2)) / 2))) (right := 4 * c * (a ^ 3 + b ^ 3) + 3 * c ^ 3 * (a + b) + c ^ 4)
  llm_frac_apart 5 * b ^ 2 * (a ^ 2 + c ^ 2) / 2 + 5 * b ^ 2 * (2 * c ^ 2 - a ^ 2) / 2 + 15 * a ^ 2 * c ^ 2 / 2 - (4 * c * (a ^ 3 + b ^ 3) + 3 * c ^ 3 * (a + b) + c ^ 4) = 15 * c ^ 2 * (b ^ 2 + a ^ 2) / (2) - (c ^ 4) - (3 * c ^ 3 * (a + b)) - (4 * c * (a ^ 3 + b ^ 3))
  llm_cancel_denom 15 * c ^ 2 * (b ^ 2 + a ^ 2) / 2 - (4 * c * (a ^ 3 + b ^ 3) + 3 * c ^ 3 * (a + b) + c ^ 4) = (15 * c ^ 2 * (b ^ 2 + a ^ 2) - (8 * c * (a ^ 3 + b ^ 3)) - (6 * c ^ 3 * (a + b)) - (2 * c ^ 4)) / (2)
  llm_frac_reduce 15 * c ^ 2 * (b ^ 2 + a ^ 2) - (2 * c ^ 4 + 6 * c ^ 3 * (a + b) + 8 * c * (a ^ 3 + b ^ 3)) = 15 * c ^ 2 * b ^ 2 + 15 * c ^ 2 * a ^ 2 - (2 * c ^ 4) - (6 * c ^ 3 * a) - (6 * c ^ 3 * b) - (8 * c * a ^ 3) - (8 * c * b ^ 3)
  scale AM_GM_square_left_2vars (u := c) (v := b) (k := (b * (15 * c))) (l := ((15 * (c ^ 2)) * (a ^ 2))) (right := 8 * c * b ^ 3 + 8 * c * a ^ 3 + 6 * c ^ 3 * b + 6 * c ^ 3 * a + 2 * c ^ 4)
  llm_cancel_denom b * 15 * c * (c ^ 2 + b ^ 2) / 2 + 15 * c ^ 2 * a ^ 2 - (8 * c * b ^ 3 + 8 * c * a ^ 3 + 6 * c ^ 3 * b + 6 * c ^ 3 * a + 2 * c ^ 4) = (3 * b * c ^ 3 + 30 * c ^ 2 * a ^ 2 - (c * b ^ 3) - (16 * c * a ^ 3) - (12 * c ^ 3 * a) - (4 * c ^ 4)) / (2)
  scale AM_GM_square_left_2vars (u := c) (v := a) (k := ((c * 30) * a)) (l := ((3 * b) * (c ^ 3))) (right := 4 * c ^ 4 + 12 * c ^ 3 * a + 16 * c * a ^ 3 + c * b ^ 3)
  llm_simplify c * 30 * a * (c ^ 2 + a ^ 2) / 2 + 3 * b * c ^ 3 - (4 * c ^ 4 + 12 * c ^ 3 * a + 16 * c * a ^ 3 + c * b ^ 3) = 3 * c ^ 3 * (a + b) - (4 * c ^ 4) - (c * (a ^ 3 + b ^ 3))
  llm_cancel_factor 3 * c ^ 3 * (a + b) - (c * (a ^ 3 + b ^ 3) + 4 * c ^ 4) = c * a * (3 * c ^ 2 - (a ^ 2)) + c * b * (3 * c ^ 2 - (b ^ 2)) - (4 * c ^ 4)
  llm_simplify c * a * (3 * c ^ 2 - a ^ 2) + c * b * (3 * c ^ 2 - b ^ 2) - (4 * c ^ 4) = 3 * c ^ 3 * (a + b) - (c * a ^ 3) - (c * b ^ 3) - (4 * c ^ 4)
  llm_cancel_factor (3 * c ^ 3 * (a + b)) - (4 * c ^ 4 + c * b ^ 3 + c * a ^ 3) = (c) * (3 * a * c ^ 2 + 3 * b * c ^ 2 - (a ^ 3) - (b ^ 3) - (4 * c ^ 3))
  scale AM_GM_cubic_left_3vars (u := c) (v := c) (w := a) (k := 3) (l := ((3 * b) * (c ^ 2))) (right := 4 * c ^ 3 + b ^ 3 + a ^ 3)
  scale AM_GM_cubic_left_3vars (u := c) (v := c) (w := b) (k := 3) (l := ((3 * (((c ^ 3) + (c ^ 3)) + (a ^ 3))) / 3)) (right := 4 * c ^ 3 + b ^ 3 + a ^ 3)

theorem P41 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) : 5 / 2 ≤ a / (b + c) + b / (c + a) + c / (a + b) + (a ^ 2 * b + b ^ 2 * c + c ^ 2 * a) / (a * b ^ 2 + b * c ^ 2 + c * a ^ 2) := by
  intro_by_homogeneous a + b + c = 3
  scale Titu_variant1_right_3vars (u1 := a) (u2 := b) (u3 := c) (v1 := (b + c)) (v2 := (c + a)) (v3 := (a + b)) (k := 1) (l := (((((a ^ 2) * b) + ((b ^ 2) * c)) + ((c ^ 2) * a)) / (((a * (b ^ 2)) + (b * (c ^ 2))) + (c * (a ^ 2))))) (left := 5 / 2)
  llm_cancel_factor 5 / 2 - ((a + b + c) ^ 2 / (a * (b + c) + b * (c + a) + c * (a + b)) + (a ^ 2 * b + b ^ 2 * c + c ^ 2 * a) / (a * b ^ 2 + b * c ^ 2 + c * a ^ 2)) = 5 / (2) - ((a + b + c) ^ 2 / (2 * (a * b + a * c + b * c)) + (a ^ 2 * b + b ^ 2 * c + c ^ 2 * a) / (a ^ 2 * c + a * b ^ 2 + b * c ^ 2))
  llm_frac_apart 5 / 2 - ((a + b + c) ^ 2 / (2 * (a * b + a * c + b * c)) + (a ^ 2 * b + b ^ 2 * c + c ^ 2 * a) / (a ^ 2 * c + a * b ^ 2 + b * c ^ 2)) = 3 / (2) - (a ^ 2 / (2 * (a * b + a * c + b * c))) - (b ^ 2 / (2 * (a * b + a * c + b * c))) - (c ^ 2 / (2 * (a * b + a * c + b * c))) - (a * c ^ 2 / (a ^ 2 * c + a * b ^ 2 + b * c ^ 2)) - (b * a ^ 2 / (a ^ 2 * c + a * b ^ 2 + b * c ^ 2)) - (c * b ^ 2 / (a ^ 2 * c + a * b ^ 2 + b * c ^ 2))
  llm_cancel_factor (3 / 2) - (c * b ^ 2 / (a ^ 2 * c + a * b ^ 2 + b * c ^ 2) + b * a ^ 2 / (a ^ 2 * c + a * b ^ 2 + b * c ^ 2) + a * c ^ 2 / (a ^ 2 * c + a * b ^ 2 + b * c ^ 2) + c ^ 2 / (2 * (a * b + a * c + b * c)) + b ^ 2 / (2 * (a * b + a * c + b * c)) + a ^ 2 / (2 * (a * b + a * c + b * c))) = (1 / 2) * (1 / (a * b + a * c + b * c)) * (1 / (a ^ 2 * c + a * b ^ 2 + b * c ^ 2)) * (3 * a ^ 2 * b ^ 3 + 3 * a ^ 3 * c ^ 2 + 3 * b ^ 2 * c ^ 3 + a * b * c ^ 3 + a * c * b ^ 3 + b * c * a ^ 3 - (a * b ^ 4) - (b * c ^ 4) - (c * a ^ 4) - (3 * a ^ 2 * c ^ 3) - (3 * a ^ 3 * b ^ 2) - (3 * b ^ 3 * c ^ 2))
  scale Muirhead_Req0_onestep_left_3vars (u := c) (v := a) (w := b) (p := 2) (q := 3) (k := 3) (l := (((a * b) * (c ^ 3)) + (((a * c) * (b ^ 3)) + ((b * c) * (a ^ 3))))) (right := 3 * b ^ 3 * c ^ 2 + 3 * a ^ 3 * b ^ 2 + 3 * a ^ 2 * c ^ 3 + c * a ^ 4 + b * c ^ 4 + a * b ^ 4)
  scale Muirhead_QReq1_left_3vars (u := b) (v := a) (w := c) (p := 3) (k := 1) (l := (3 * ((((c ^ 3) * (a ^ 2)) + ((a ^ 3) * (b ^ 2))) + ((b ^ 3) * (c ^ 2))))) (right := 3 * b ^ 3 * c ^ 2 + 3 * a ^ 3 * b ^ 2 + 3 * a ^ 2 * c ^ 3 + c * a ^ 4 + b * c ^ 4 + a * b ^ 4)
  try close

theorem P42 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) : 3 * sqrt(3 * (a * b + b * c + c * a)) * (a * b + b * c + c * a) ^ 2 / (4 * (a + b + c) ^ 3) ≤ a ^ 2 * b ^ 2 / (a + b) ^ 2 + b ^ 2 * c ^ 2 / (b + c) ^ 2 + c ^ 2 * a ^ 2 / (c + a) ^ 2 := by
  intro_by_homogeneous a + b + c = 3
  scale Titu_normal_right_3vars (u1 := (b * a)) (u2 := (b * c)) (u3 := (c * a)) (v1 := ((a + b) ^ 2)) (v2 := ((b + c) ^ 2)) (v3 := ((c + a) ^ 2)) (k := 1) (l := 0) (left := 3 * sqrt(3 * (a * b + b * c + c * a)) * (a * b + b * c + c * a) ^ 2 / (4 * (a + b + c) ^ 3))
  llm_cancel_power 2
  llm_cancel_factor (3 * sqrt(3 * (a * b + b * c + c * a)) * (a * b + b * c + c * a) ^ 2 / (4 * (a + b + c) ^ 3)) ^ 2 - (((b * a + b * c + c * a) ^ 2 / ((a + b) ^ 2 + (b + c) ^ 2 + (c + a) ^ 2)) ^ 2) = (a * b + b * c + c * a) ^ 4 * (27 * (a * b + b * c + c * a) * ((a + b) ^ 2 + (b + c) ^ 2 + (c + a) ^ 2) ^ 2 - (16 * (a + b + c) ^ 6)) / (16 * (a + b + c) ^ 6 * ((a + b) ^ 2 + (a + c) ^ 2 + (b + c) ^ 2) ^ 2)
  llm_cancel_factor (27 * (a * b + b * c + c * a) * ((a + b) ^ 2 + (b + c) ^ 2 + (c + a) ^ 2) ^ 2) - (16 * (a + b + c) ^ 6) = (4) * ((a ^ 2 + b ^ 2 + c ^ 2 - (a * b) - (a * c) - (b * c)) ^ 2) * (-(4 * a ^ 2) - (4 * b ^ 2) - (4 * c ^ 2) - (5 * a * b) - (5 * a * c) - (5 * b * c))
  try close

theorem P43 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) : 1 / (a * b + b * c + c * a) + 2 / (a ^ 2 + b ^ 2 + c ^ 2) ≤ 2 / 3 * (1 / (a ^ 2 + b * c) + 1 / (b ^ 2 + c * a) + 1 / (c ^ 2 + a * b)) := by
  intro_by_homogeneous a + b + c = 3
  llm_cancel_factor (1 / (a * b + b * c + c * a) + 2 / (a ^ 2 + b ^ 2 + c ^ 2)) - (2 / 3 * (1 / (a ^ 2 + b * c) + 1 / (b ^ 2 + c * a) + 1 / (c ^ 2 + a * b))) = (1 / 3) * (1 / (a ^ 2 + b * c)) * (1 / (a * c + b ^ 2)) * (1 / (a * b + c ^ 2)) * (1 / (a ^ 2 + b ^ 2 + c ^ 2)) * (1 / (a * b + a * c + b * c)) * (a ^ 3 * b ^ 5 + a ^ 3 * c ^ 5 + a ^ 5 * b ^ 3 + a ^ 5 * c ^ 3 + b ^ 3 * c ^ 5 + b ^ 5 * c ^ 3 + 2 * a ^ 4 * b ^ 4 + 2 * a ^ 4 * c ^ 4 + 2 * b ^ 4 * c ^ 4 + a ^ 2 * b ^ 3 * c ^ 3 + a ^ 3 * b ^ 2 * c ^ 3 + a ^ 3 * b ^ 3 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 4 + 2 * a ^ 2 * b ^ 4 * c ^ 2 + 2 * a ^ 4 * b ^ 2 * c ^ 2 - (2 * a ^ 2 * b ^ 6) - (2 * a ^ 2 * c ^ 6) - (2 * a ^ 6 * b ^ 2) - (2 * a ^ 6 * c ^ 2) - (2 * b ^ 2 * c ^ 6) - (2 * b ^ 6 * c ^ 2) - (a * b * c ^ 6) - (a * c * b ^ 6) - (a * b ^ 3 * c ^ 4) - (a * b ^ 4 * c ^ 3) - (b * c * a ^ 6) - (b * a ^ 3 * c ^ 4) - (b * a ^ 4 * c ^ 3) - (c * a ^ 3 * b ^ 4) - (c * a ^ 4 * b ^ 3))
  closed_by_sos

theorem P44 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) : 1 / (a * b + b * c + c * a) + 2 / (a ^ 2 + b ^ 2 + c ^ 2) ≤ 1 / (2 * a ^ 2 + b * c) + 1 / (2 * b ^ 2 + c * a) + 1 / (2 * c ^ 2 + a * b) := by
  have h : 1 / (a * b + b * c + c * a) + 2 / (a ^ 2 + b ^ 2 + c ^ 2) - (1 / (2 * a ^ 2 + b * c) + 1 / (2 * b ^ 2 + c * a) + 1 / (2 * c ^ 2 + a * b)) = (1 / (a * b + b * c + c * a)) * (1 + 2 * (a * b + b * c + c * a) / (a ^ 2 + b ^ 2 + c ^ 2) - ((a * b + b * c + c * a) / (a ^ 2 + b * c) + (a * b + b * c + c * a) / (b ^ 2 + c * a) + (a * b + b * c + c * a) / (c ^ 2 + a * b))) := by auto_verify
  llm_cancel_factor 1 / (a * b + b * c + c * a) + 2 / (a ^ 2 + b ^ 2 + c ^ 2) - (1 / (2 * a ^ 2 + b * c) + 1 / (2 * b ^ 2 + c * a) + 1 / (2 * c ^ 2 + a * b)) = (1 / (a * b + b * c + c * a)) * (1 + 2 * (a * b + b * c + c * a) / (a ^ 2 + b ^ 2 + c ^ 2) - ((a * b + b * c + c * a) / (a ^ 2 + b * c) + (a * b + b * c + c * a) / (b ^ 2 + c * a) + (a * b + b * c + c * a) / (c ^ 2 + a * b)))
  llm_frac_apart 1 + 2 * (a * b + b * c + c * a) / (a ^ 2 + b ^ 2 + c ^ 2) - ((a * b + b * c + c * a) / (a ^ 2 + b * c) + (a * b + b * c + c * a) / (b ^ 2 + c * a) + (a * b + b * c + c * a) / (c ^ 2 + a * b)) = 1 + 2 * (a * b + b * c + c * a) / (a ^ 2 + b ^ 2 + c ^ 2) - ((a * b + c * a) / (a ^ 2 + b * c) + b * c / (a ^ 2 + b * c) + (a * b + b * c) / (b ^ 2 + c * a) + a * c / (b ^ 2 + c * a) + (b * c + c * a) / (c ^ 2 + a * b) + b * a / (c ^ 2 + a * b))
  llm_cancel_factor (1 + 2 * (a * b + b * c + c * a) / (a ^ 2 + b ^ 2 + c ^ 2)) - ((a * b + c * a) / (a ^ 2 + b * c) + b * c / (a ^ 2 + b * c) + (a * b + b * c) / (b ^ 2 + c * a) + a * c / (b ^ 2 + c * a) + (b * c + c * a) / (c ^ 2 + a * b) + b * a / (c ^ 2 + a * b)) = (1 / (a ^ 2 + b * c)) * (1 / (a * c + b ^ 2)) * (1 / (a * b + c ^ 2)) * (1 / (a ^ 2 + b ^ 2 + c ^ 2)) * (-(a ^ 2 * b ^ 6) - (a ^ 2 * c ^ 6) - (a ^ 6 * b ^ 2) - (a ^ 6 * c ^ 2) - (b ^ 2 * c ^ 6) - (b ^ 6 * c ^ 2) - (a * b * c ^ 6) - (a * c * b ^ 6) - (a * b ^ 2 * c ^ 5) - (a * b ^ 5 * c ^ 2) - (b * c * a ^ 6) - (b * a ^ 2 * c ^ 5) - (b * a ^ 5 * c ^ 2) - (c * a ^ 2 * b ^ 5) - (c * a ^ 5 * b ^ 2) - (a ^ 2 * b ^ 2 * c ^ 4) - (a ^ 2 * b ^ 4 * c ^ 2) - (a ^ 4 * b ^ 2 * c ^ 2) - (2 * a * b ^ 3 * c ^ 4) - (2 * a * b ^ 4 * c ^ 3) - (2 * b * a ^ 3 * c ^ 4) - (2 * b * a ^ 4 * c ^ 3) - (2 * c * a ^ 3 * b ^ 4) - (2 * c * a ^ 4 * b ^ 3) - (2 * a ^ 2 * b ^ 3 * c ^ 3) - (2 * a ^ 3 * b ^ 2 * c ^ 3) - (2 * a ^ 3 * b ^ 3 * c ^ 2))
  try close

theorem P45 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) : 2 + 2 * a * b * c * (a + b + c) / (a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * a ^ 2) ≤ 4 * (a + b + c) * (a / (8 * a ^ 2 + b * c) + b / (8 * b ^ 2 + c * a) + c / (8 * c ^ 2 + a * b)) := by
  intro_by_homogeneous a + b + c = 3
  llm_simplify 2 + 2 * a * b * c * (a + b + c) / (a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * a ^ 2) - (4 * (a + b + c) * (a / (8 * a ^ 2 + b * c) + b / (8 * b ^ 2 + c * a) + c / (8 * c ^ 2 + a * b))) = 2 + (a + b + c) * (2 * a * b * c / (a ^ 2 * b ^ 2 + a ^ 2 * c ^ 2 + b ^ 2 * c ^ 2) - (4 * a / (8 * a ^ 2 + b * c)) - (4 * b / (a * c + 8 * b ^ 2)) - (4 * c / (a * b + 8 * c ^ 2)))
  llm_cancel_denom (2 + (a + b + c) * (2 * a * b * c / (a ^ 2 * b ^ 2 + a ^ 2 * c ^ 2 + b ^ 2 * c ^ 2) - 4 * a / (8 * a ^ 2 + b * c) - 4 * b / (a * c + 8 * b ^ 2) - 4 * c / (a * b + 8 * c ^ 2))) - (0) = ((a + b + c) * (2 * a * b * c * (8 * a ^ 2 + b * c) * (8 * b ^ 2 + a * c) * (8 * c ^ 2 + a * b) - (4 * a * (8 * b ^ 2 + a * c) * (8 * c ^ 2 + a * b) * (a ^ 2 * b ^ 2 + a ^ 2 * c ^ 2 + b ^ 2 * c ^ 2)) - (4 * b * (8 * a ^ 2 + b * c) * (8 * c ^ 2 + a * b) * (a ^ 2 * b ^ 2 + a ^ 2 * c ^ 2 + b ^ 2 * c ^ 2)) - (4 * c * (8 * a ^ 2 + b * c) * (8 * b ^ 2 + a * c) * (a ^ 2 * b ^ 2 + a ^ 2 * c ^ 2 + b ^ 2 * c ^ 2))) + 2 * (8 * a ^ 2 + b * c) * (8 * b ^ 2 + a * c) * (8 * c ^ 2 + a * b) * (a ^ 2 * b ^ 2 + a ^ 2 * c ^ 2 + b ^ 2 * c ^ 2)) / ((8 * a ^ 2 + b * c) * (8 * b ^ 2 + a * c) * (8 * c ^ 2 + a * b) * (a ^ 2 * b ^ 2 + a ^ 2 * c ^ 2 + b ^ 2 * c ^ 2))
  closed_by_sos

theorem P46 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) : 2 / (a * b + b * c + c * a) + 1 / (a ^ 2 + b ^ 2 + c ^ 2) ≤ 5 / 3 * (1 / (4 * a ^ 2 + b * c) + 1 / (4 * b ^ 2 + c * a) + 1 / (4 * c ^ 2 + a * b)) := by
  intro_by_homogeneous a + b + c = 3
  llm_frac_apart 2 / (a * b + b * c + c * a) + 1 / (a ^ 2 + b ^ 2 + c ^ 2) - (5 / 3 * (1 / (4 * a ^ 2 + b * c) + 1 / (4 * b ^ 2 + c * a) + 1 / (4 * c ^ 2 + a * b))) = 1 / ((a ^ 2 + b ^ 2 + c ^ 2)) + 2 / (a * b + a * c + b * c) - (5 / (3 * (4 * a ^ 2 + b * c))) - (5 / (3 * (a * b + 4 * c ^ 2))) - (5 / (3 * (a * c + 4 * b ^ 2)))
  llm_cancel_denom 1 / (a ^ 2 + b ^ 2 + c ^ 2) + 2 / (a * b + a * c + b * c) - (5 / (3 * (a * c + 4 * b ^ 2)) + 5 / (3 * (a * b + 4 * c ^ 2)) + 5 / (3 * (4 * a ^ 2 + b * c))) = ((a * b + a * c + b * c) * (a * c + 4 * b ^ 2) * (a * b + 4 * c ^ 2) * (4 * a ^ 2 + b * c) + 2 * (a ^ 2 + b ^ 2 + c ^ 2) * (a * c + 4 * b ^ 2) * (a * b + 4 * c ^ 2) * (4 * a ^ 2 + b * c) - (5 * (a ^ 2 + b ^ 2 + c ^ 2) * (a * b + a * c + b * c) * ((a * b + 4 * c ^ 2) * (4 * a ^ 2 + b * c) + (a * c + 4 * b ^ 2) * (4 * a ^ 2 + b * c) + (a * c + 4 * b ^ 2) * (a * b + 4 * c ^ 2)) / (3))) / ((4 * a ^ 2 + b * c) * (a * b + 4 * c ^ 2) * (a * c + 4 * b ^ 2) * (a ^ 2 + b ^ 2 + c ^ 2) * (a * b + a * c + b * c))
  llm_frac_together (a * b + a * c + b * c) * (a * c + 4 * b ^ 2) * (a * b + 4 * c ^ 2) * (4 * a ^ 2 + b * c) + 2 * (a ^ 2 + b ^ 2 + c ^ 2) * (a * c + 4 * b ^ 2) * (a * b + 4 * c ^ 2) * (4 * a ^ 2 + b * c) - (5 * (a ^ 2 + b ^ 2 + c ^ 2) * (a * b + a * c + b * c) * ((a * b + 4 * c ^ 2) * (4 * a ^ 2 + b * c) + (a * c + 4 * b ^ 2) * (4 * a ^ 2 + b * c) + (a * c + 4 * b ^ 2) * (a * b + 4 * c ^ 2)) / 3) = (3 * (a * b + a * c + b * c + 2 * (a ^ 2 + b ^ 2 + c ^ 2)) * (a * c + 4 * b ^ 2) * (a * b + 4 * c ^ 2) * (4 * a ^ 2 + b * c) - (5 * (a ^ 2 + b ^ 2 + c ^ 2) * (a * b + a * c + b * c) * ((a * b + 4 * c ^ 2) * (4 * a ^ 2 + b * c) + (a * c + 4 * b ^ 2) * (4 * a ^ 2 + b * c) + (a * c + 4 * b ^ 2) * (a * b + 4 * c ^ 2)))) / (3)
  closed_by_sos

theorem P47 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) : a * (b + c) / (a ^ 2 + b * c) + b * (c + a) / (b ^ 2 + c * a) + c * (a + b) / (c ^ 2 + a * b) ≤ 1 / 2 * sqrt(27 + (a + b + c) * (1 / a + 1 / b + 1 / c)) := by
  intro_by_homogeneous a + b + c = 3
  llm_cancel_power 2
  llm_frac_apart (a * (b + c) / (a ^ 2 + b * c) + b * (c + a) / (b ^ 2 + c * a) + c * (a + b) / (c ^ 2 + a * b)) ^ 2 - ((1 / 2 * sqrt(27 + (a + b + c) * (1 / a + 1 / b + 1 / c))) ^ 2) = (a * b / (a ^ 2 + b * c) + a * b / (a * c + b ^ 2) + a * c / (a ^ 2 + b * c) + a * c / (a * b + c ^ 2) + b * c / (a * b + c ^ 2) + b * c / (a * c + b ^ 2)) ^ 2 - ((30 + a / (b) + a / (c) + b / (a) + b / (c) + c / (a) + c / (b)) / (4))
  llm_cancel_factor (a * b / (a ^ 2 + b * c) + a * b / (a * c + b ^ 2) + a * c / (a ^ 2 + b * c) + a * c / (a * b + c ^ 2) + b * c / (a * b + c ^ 2) + b * c / (a * c + b ^ 2)) ^ 2 - ((30 + a / b + a / c + b / a + b / c + c / a + c / b) / 4) = (a * (b + c) / (a ^ 2 + b * c) + b * (a + c) / (a * c + b ^ 2) + c * (a + b) / (a * b + c ^ 2)) ^ 2 - ((30 + a / (b) + a / (c) + b / (a) + b / (c) + c / (a) + c / (b)) / (4))
  llm_exp_expand (a * (b + c) / (a ^ 2 + b * c) + b * (a + c) / (a * c + b ^ 2) + c * (a + b) / (a * b + c ^ 2)) ^ 2 - ((30 + a / b + a / c + b / a + b / c + c / a + c / b) / 4) = c ^ 2 * (a ^ 2 + b ^ 2 + 2 * a * b) / (a ^ 2 * b ^ 2 + 2 * a * b * c ^ 2 + c ^ 4) + b ^ 2 * (a ^ 2 + c ^ 2 + 2 * a * c) / (a ^ 2 * c ^ 2 + 2 * a * b ^ 2 * c + b ^ 4) + a ^ 2 * (b ^ 2 + c ^ 2 + 2 * b * c) / (a ^ 4 + 2 * a ^ 2 * b * c + b ^ 2 * c ^ 2) + 2 * a * b * (a + c) * (b + c) / ((a ^ 2 + b * c) * (a * c + b ^ 2)) + 2 * a * c * (a + b) * (b + c) / ((a ^ 2 + b * c) * (a * b + c ^ 2)) + 2 * b * c * (a + b) * (a + c) / ((a * b + c ^ 2) * (a * c + b ^ 2)) - (15 / 2 + a / (4 * (b)) + a / (4 * (c)) + b / (4 * (a)) + b / (4 * (c)) + c / (4 * (a)) + c / (4 * (b)))
  llm_cancel_factor c ^ 2 * (a ^ 2 + b ^ 2 + 2 * a * b) / (a ^ 2 * b ^ 2 + 2 * a * b * c ^ 2 + c ^ 4) + b ^ 2 * (a ^ 2 + c ^ 2 + 2 * a * c) / (a ^ 2 * c ^ 2 + 2 * a * b ^ 2 * c + b ^ 4) + a ^ 2 * (b ^ 2 + c ^ 2 + 2 * b * c) / (a ^ 4 + 2 * a ^ 2 * b * c + b ^ 2 * c ^ 2) + 2 * a * b * (a + c) * (b + c) / ((a ^ 2 + b * c) * (a * c + b ^ 2)) + 2 * a * c * (a + b) * (b + c) / ((a ^ 2 + b * c) * (a * b + c ^ 2)) + 2 * b * c * (a + b) * (a + c) / ((a * b + c ^ 2) * (a * c + b ^ 2)) - (15 / 2 + a / (4 * b) + a / (4 * c) + b / (4 * a) + b / (4 * c) + c / (4 * a) + c / (4 * b)) = a ^ 2 * (b + c) ^ 2 / ((a ^ 2 + b * c) ^ 2) + c ^ 2 * (a + b) ^ 2 / ((a * b + c ^ 2) ^ 2) + b ^ 2 * (a + c) ^ 2 / ((a * c + b ^ 2) ^ 2) + 2 * a * b * (a + c) * (b + c) / ((a ^ 2 + b * c) * (a * c + b ^ 2)) + 2 * a * c * (a + b) * (b + c) / ((a ^ 2 + b * c) * (a * b + c ^ 2)) + 2 * b * c * (a + b) * (a + c) / ((a * b + c ^ 2) * (a * c + b ^ 2)) - (15 / (2) + a / (4 * b) + a / (4 * c) + b / (4 * a) + b / (4 * c) + c / (4 * a) + c / (4 * b))
  scale AM_GM_div_left_2vars (u := (a ^ 2)) (v := (b * c)) (i := ((a ^ 2) + (b * c))) (j := 0) (k := ((a ^ 2) * ((b + c) ^ 2))) (l := ((((c ^ 2) * ((a + b) ^ 2)) / (((a * b) + (c ^ 2)) ^ 2)) + (((((b ^ 2) * ((a + c) ^ 2)) / (((a * c) + (b ^ 2)) ^ 2)) + (((((2 * a) * b) * (a + c)) * (b + c)) / (((a ^ 2) + (b * c)) * ((a * c) + (b ^ 2))))) + ((((((2 * a) * c) * (a + b)) * (b + c)) / (((a ^ 2) + (b * c)) * ((a * b) + (c ^ 2)))) + (((((2 * b) * c) * (a + b)) * (a + c)) / (((a * b) + (c ^ 2)) * ((a * c) + (b ^ 2)))))))) (right := 15 / 2 + a / (4 * b) + a / (4 * c) + b / (4 * a) + b / (4 * c) + c / (4 * a) + c / (4 * b))
  scale AM_GM_div_left_2vars (u := (a ^ 2)) (v := (b * c)) (i := (2 * sqrt ((((a ^ 2) * b) * c)))) (j := 0) (k := ((a ^ 2) * ((b + c) ^ 2))) (l := ((((c ^ 2) * ((a + b) ^ 2)) / (((a * b) + (c ^ 2)) ^ 2)) + (((((b ^ 2) * ((a + c) ^ 2)) / (((a * c) + (b ^ 2)) ^ 2)) + (((((2 * a) * b) * (a + c)) * (b + c)) / (((a ^ 2) + (b * c)) * ((a * c) + (b ^ 2))))) + ((((((2 * a) * c) * (a + b)) * (b + c)) / (((a ^ 2) + (b * c)) * ((a * b) + (c ^ 2)))) + (((((2 * b) * c) * (a + b)) * (a + c)) / (((a * b) + (c ^ 2)) * ((a * c) + (b ^ 2)))))))) (right := 15 / 2 + a / (4 * b) + a / (4 * c) + b / (4 * a) + b / (4 * c) + c / (4 * a) + c / (4 * b))
  llm_mul_expand a ^ 2 * (b + c) ^ 2 * (1 / (4 * sqrt(a ^ 2 * b * c) * sqrt(a ^ 2 * b * c))) + c ^ 2 * (a + b) ^ 2 / (a * b + c ^ 2) ^ 2 + b ^ 2 * (a + c) ^ 2 / (a * c + b ^ 2) ^ 2 + 2 * a * b * (a + c) * (b + c) / ((a ^ 2 + b * c) * (a * c + b ^ 2)) + 2 * a * c * (a + b) * (b + c) / ((a ^ 2 + b * c) * (a * b + c ^ 2)) + 2 * b * c * (a + b) * (a + c) / ((a * b + c ^ 2) * (a * c + b ^ 2)) - (15 / 2 + a / (4 * b) + a / (4 * c) + b / (4 * a) + b / (4 * c) + c / (4 * a) + c / (4 * b)) = (b ^ 2 + 2 * b * c + c ^ 2) / (4 * b * c) + c ^ 2 * (a ^ 2 + 2 * a * b + b ^ 2) / ((a * b + c ^ 2) ^ 2) + b ^ 2 * (a ^ 2 + 2 * a * c + c ^ 2) / ((a * c + b ^ 2) ^ 2) + 2 * a * b * (a * b + a * c + b * c + c ^ 2) / ((a ^ 2 + b * c) * (a * c + b ^ 2)) + 2 * a * c * (a * b + b ^ 2 + a * c + b * c) / ((a ^ 2 + b * c) * (a * b + c ^ 2)) + 2 * b * c * (a ^ 2 + a * b + a * c + b * c) / ((a * b + c ^ 2) * (a * c + b ^ 2)) - (15 / (2) + a / (4 * b) + a / (4 * c) + b / (4 * a) + b / (4 * c) + c / (4 * a) + c / (4 * b))
  llm_simplify (b ^ 2 + 2 * b * c + c ^ 2) / (4 * b * c) + c ^ 2 * (a ^ 2 + 2 * a * b + b ^ 2) / (a * b + c ^ 2) ^ 2 + b ^ 2 * (a ^ 2 + 2 * a * c + c ^ 2) / (a * c + b ^ 2) ^ 2 + 2 * a * b * (a * b + a * c + b * c + c ^ 2) / ((a ^ 2 + b * c) * (a * c + b ^ 2)) + 2 * a * c * (a * b + b ^ 2 + a * c + b * c) / ((a ^ 2 + b * c) * (a * b + c ^ 2)) + 2 * b * c * (a ^ 2 + a * b + a * c + b * c) / ((a * b + c ^ 2) * (a * c + b ^ 2)) - (15 / 2 + a / (4 * b) + a / (4 * c) + b / (4 * a) + b / (4 * c) + c / (4 * a) + c / (4 * b)) = (b + c) / (4 * b) + (b + c) / (4 * c) + c ^ 2 * (a + b) ^ 2 / ((a * b + c ^ 2) ^ 2) + b ^ 2 * (a + c) ^ 2 / ((a * c + b ^ 2) ^ 2) + 2 * a * b * (a + c) * (b + c) / ((a ^ 2 + b * c) * (a * c + b ^ 2)) + 2 * a * c * (a + b) * (b + c) / ((a ^ 2 + b * c) * (a * b + c ^ 2)) + 2 * b * c * (a + b) * (a + c) / ((a * b + c ^ 2) * (a * c + b ^ 2)) - (15 / (2) + a / (4 * b) + a / (4 * c) + b / (4 * a) + b / (4 * c) + c / (4 * a) + c / (4 * b))
  llm_frac_together (b + c) / (4 * b) + (b + c) / (4 * c) + c ^ 2 * (a + b) ^ 2 / (a * b + c ^ 2) ^ 2 + b ^ 2 * (a + c) ^ 2 / (a * c + b ^ 2) ^ 2 + 2 * a * b * (a + c) * (b + c) / ((a ^ 2 + b * c) * (a * c + b ^ 2)) + 2 * a * c * (a + b) * (b + c) / ((a ^ 2 + b * c) * (a * b + c ^ 2)) + 2 * b * c * (a + b) * (a + c) / ((a * b + c ^ 2) * (a * c + b ^ 2)) - (15 / 2 + a / (4 * b) + a / (4 * c) + b / (4 * a) + b / (4 * c) + c / (4 * a) + c / (4 * b)) = (b - (a)) / (4 * b) + (c - (a)) / (4 * c) + c ^ 2 * (a + b) ^ 2 / ((a * b + c ^ 2) ^ 2) + b ^ 2 * (a + c) ^ 2 / ((a * c + b ^ 2) ^ 2) + 2 * a * b * (a + c) * (b + c) / ((a ^ 2 + b * c) * (a * c + b ^ 2)) + 2 * a * c * (a + b) * (b + c) / ((a ^ 2 + b * c) * (a * b + c ^ 2)) + 2 * b * c * (a + b) * (a + c) / ((a * b + c ^ 2) * (a * c + b ^ 2)) - (15 / (2)) - ((b + c) / (4 * (a)))
  llm_exp_expand (b - a) / (4 * b) + (c - a) / (4 * c) + c ^ 2 * (a + b) ^ 2 / (a * b + c ^ 2) ^ 2 + b ^ 2 * (a + c) ^ 2 / (a * c + b ^ 2) ^ 2 + 2 * a * b * (a + c) * (b + c) / ((a ^ 2 + b * c) * (a * c + b ^ 2)) + 2 * a * c * (a + b) * (b + c) / ((a ^ 2 + b * c) * (a * b + c ^ 2)) + 2 * b * c * (a + b) * (a + c) / ((a * b + c ^ 2) * (a * c + b ^ 2)) - ((b + c) / (4 * a) + 15 / 2) = (b - (a)) / (4 * (b)) + (c - (a)) / (4 * (c)) + c ^ 2 * (a ^ 2 + b ^ 2 + 2 * a * b) / (a ^ 2 * b ^ 2 + 2 * a * b * c ^ 2 + c ^ 4) + b ^ 2 * (a ^ 2 + c ^ 2 + 2 * a * c) / (a ^ 2 * c ^ 2 + 2 * a * b ^ 2 * c + b ^ 4) + 2 * a * b * (a + c) * (b + c) / ((a ^ 2 + b * c) * (a * c + b ^ 2)) + 2 * a * c * (a + b) * (b + c) / ((a ^ 2 + b * c) * (a * b + c ^ 2)) + 2 * b * c * (a + b) * (a + c) / ((a * b + c ^ 2) * (a * c + b ^ 2)) - (15 / 2) - ((b + c) / (4 * (a)))
  llm_simplify (b - a) / (4 * b) + (c - a) / (4 * c) + c ^ 2 * (a ^ 2 + b ^ 2 + 2 * a * b) / (a ^ 2 * b ^ 2 + 2 * a * b * c ^ 2 + c ^ 4) + b ^ 2 * (a ^ 2 + c ^ 2 + 2 * a * c) / (a ^ 2 * c ^ 2 + 2 * a * b ^ 2 * c + b ^ 4) + 2 * a * b * (a + c) * (b + c) / ((a ^ 2 + b * c) * (a * c + b ^ 2)) + 2 * a * c * (a + b) * (b + c) / ((a ^ 2 + b * c) * (a * b + c ^ 2)) + 2 * b * c * (a + b) * (a + c) / ((a * b + c ^ 2) * (a * c + b ^ 2)) - ((b + c) / (4 * a) + 15 / 2) = (2 - (a / (b)) - (a / (c)) - (b / (a)) - (c / (a))) / (4) + c ^ 2 * (a ^ 2 + b ^ 2 + 2 * a * b) / (a ^ 2 * b ^ 2 + 2 * a * b * c ^ 2 + c ^ 4) + b ^ 2 * (a ^ 2 + c ^ 2 + 2 * a * c) / (a ^ 2 * c ^ 2 + 2 * a * b ^ 2 * c + b ^ 4) + 2 * a * b * (a + c) * (b + c) / ((a ^ 2 + b * c) * (a * c + b ^ 2)) + 2 * a * c * (a + b) * (b + c) / ((a ^ 2 + b * c) * (a * b + c ^ 2)) + 2 * b * c * (a + b) * (a + c) / ((a * b + c ^ 2) * (a * c + b ^ 2)) - (15 / (2))
  scale AM_GM_div_left_2vars (u := ((a ^ 2) * (b ^ 2))) (v := (c ^ 4)) (i := 1) (j := (((2 * a) * b) * (c ^ 2))) (k := ((c ^ 2) * (((a ^ 2) + (b ^ 2)) + ((2 * a) * b)))) (l := ((((((2 - (a / b)) - (a / c)) - (b / a)) - (c / a)) / 4) + (((((b ^ 2) * (((a ^ 2) + (c ^ 2)) + ((2 * a) * c))) / ((((a ^ 2) * (c ^ 2)) + (((2 * a) * (b ^ 2)) * c)) + (b ^ 4))) + (((((2 * a) * b) * (a + c)) * (b + c)) / (((a ^ 2) + (b * c)) * ((a * c) + (b ^ 2))))) + ((((((2 * a) * c) * (a + b)) * (b + c)) / (((a ^ 2) + (b * c)) * ((a * b) + (c ^ 2)))) + (((((2 * b) * c) * (a + b)) * (a + c)) / (((a * b) + (c ^ 2)) * ((a * c) + (b ^ 2)))))))) (right := 15 / 2)
  llm_factor c ^ 2 * (a ^ 2 + b ^ 2 + 2 * a * b) * (1 / (2 * sqrt(a ^ 2 * b ^ 2 * c ^ 4) + 2 * a * b * c ^ 2)) + (2 - a / b - a / c - b / a - c / a) / 4 + b ^ 2 * (a ^ 2 + c ^ 2 + 2 * a * c) / (a ^ 2 * c ^ 2 + 2 * a * b ^ 2 * c + b ^ 4) + 2 * a * b * (a + c) * (b + c) / ((a ^ 2 + b * c) * (a * c + b ^ 2)) + 2 * a * c * (a + b) * (b + c) / ((a ^ 2 + b * c) * (a * b + c ^ 2)) + 2 * b * c * (a + b) * (a + c) / ((a * b + c ^ 2) * (a * c + b ^ 2)) - (15 / 2) = b ^ 2 * (a + c) ^ 2 / ((a * c + b ^ 2) ^ 2) + c ^ 2 * (a + b) ^ 2 / (2 * (a * b * c ^ 2 + sqrt (a ^ 2 * b ^ 2 * c ^ 4))) + 2 * a * b * (a + c) * (b + c) / ((a ^ 2 + b * c) * (a * c + b ^ 2)) + 2 * a * c * (a + b) * (b + c) / ((a ^ 2 + b * c) * (a * b + c ^ 2)) + 2 * b * c * (a + b) * (a + c) / ((a * b + c ^ 2) * (a * c + b ^ 2)) - (7) - (a / (4 * (b))) - (a / (4 * (c))) - (b / (4 * (a))) - (c / (4 * (a)))
  llm_simplify b ^ 2 * (a + c) ^ 2 / (a * c + b ^ 2) ^ 2 + c ^ 2 * (a + b) ^ 2 / (2 * (a * b * c ^ 2 + sqrt(a ^ 2 * b ^ 2 * c ^ 4))) + 2 * a * b * (a + c) * (b + c) / ((a ^ 2 + b * c) * (a * c + b ^ 2)) + 2 * a * c * (a + b) * (b + c) / ((a ^ 2 + b * c) * (a * b + c ^ 2)) + 2 * b * c * (a + b) * (a + c) / ((a * b + c ^ 2) * (a * c + b ^ 2)) - (c / (4 * a) + b / (4 * a) + a / (4 * c) + a / (4 * b) + 7) = b ^ 2 * (a + c) ^ 2 / ((a * c + b ^ 2) ^ 2) + (a + b) ^ 2 / (4 * (a) * (b)) + 2 * a * b * (a + c) * (b + c) / ((a ^ 2 + b * c) * (a * c + b ^ 2)) + 2 * a * c * (a + b) * (b + c) / ((a ^ 2 + b * c) * (a * b + c ^ 2)) + 2 * b * c * (a + b) * (a + c) / ((a * b + c ^ 2) * (a * c + b ^ 2)) - (7) - (a / (4 * (b))) - (a / (4 * (c))) - (b / (4 * (a))) - (c / (4 * (a)))
  llm_cancel_denom b ^ 2 * (a + c) ^ 2 / (a * c + b ^ 2) ^ 2 + (a + b) ^ 2 / (4 * a * b) + 2 * a * b * (a + c) * (b + c) / ((a ^ 2 + b * c) * (a * c + b ^ 2)) + 2 * a * c * (a + b) * (b + c) / ((a ^ 2 + b * c) * (a * b + c ^ 2)) + 2 * b * c * (a + b) * (a + c) / ((a * b + c ^ 2) * (a * c + b ^ 2)) - (c / (4 * a) + b / (4 * a) + a / (4 * c) + a / (4 * b) + 7) = (a + b) ^ 2 / (4 * a * b) + b ^ 2 * (a + c) ^ 2 / ((a * c + b ^ 2) ^ 2) + 2 * a * b * (a + c) * (b + c) / ((a ^ 2 + b * c) * (a * c + b ^ 2)) + 2 * a * c * (a + b) * (b + c) / ((a ^ 2 + b * c) * (a * b + c ^ 2)) + 2 * b * c * (a + b) * (a + c) / ((a * b + c ^ 2) * (a * c + b ^ 2)) - (7 + a / (4 * b) + a / (4 * c) + (c + b) / (4 * a))
  llm_simplify (a + b) ^ 2 / (4 * a * b) + b ^ 2 * (a + c) ^ 2 / (a * c + b ^ 2) ^ 2 + 2 * a * b * (a + c) * (b + c) / ((a ^ 2 + b * c) * (a * c + b ^ 2)) + 2 * a * c * (a + b) * (b + c) / ((a ^ 2 + b * c) * (a * b + c ^ 2)) + 2 * b * c * (a + b) * (a + c) / ((a * b + c ^ 2) * (a * c + b ^ 2)) - (7 + a / (4 * b) + a / (4 * c) + (c + b) / (4 * a)) = 1 / ((2)) + a / (4 * b) + b / (4 * a) + b ^ 2 * (a ^ 2 + 2 * a * c + c ^ 2) / ((a * c + b ^ 2) ^ 2) + 2 * a * b * (a * b + a * c + b * c + c ^ 2) / ((a ^ 2 + b * c) * (a * c + b ^ 2)) + 2 * a * c * (a * b + a * c + b ^ 2 + b * c) / ((a ^ 2 + b * c) * (a * b + c ^ 2)) + 2 * b * c * (a ^ 2 + a * c + a * b + b * c) / ((a * b + c ^ 2) * (a * c + b ^ 2)) - (7 + a / (4 * b) + a / (4 * c) + (c + b) / (4 * a))
  llm_cancel_denom 1 / 2 + a / (4 * b) + b / (4 * a) + b ^ 2 * (a ^ 2 + 2 * a * c + c ^ 2) / (a * c + b ^ 2) ^ 2 + 2 * a * b * (a * b + a * c + b * c + c ^ 2) / ((a ^ 2 + b * c) * (a * c + b ^ 2)) + 2 * a * c * (a * b + a * c + b ^ 2 + b * c) / ((a ^ 2 + b * c) * (a * b + c ^ 2)) + 2 * b * c * (a ^ 2 + a * c + a * b + b * c) / ((a * b + c ^ 2) * (a * c + b ^ 2)) - (7 + a / (4 * b) + a / (4 * c) + (c + b) / (4 * a)) = b ^ 2 * (a + c) ^ 2 / ((a * c + b ^ 2) ^ 2) + 2 * a * b * (a + c) * (b + c) / ((a ^ 2 + b * c) * (a * c + b ^ 2)) + 2 * a * c * (a + b) * (b + c) / ((a ^ 2 + b * c) * (a * b + c ^ 2)) + 2 * b * c * (a + b) * (a + c) / ((a * b + c ^ 2) * (a * c + b ^ 2)) - (13 / 2) - (a / (4 * c)) - (c / (4 * a))
  scale AM_GM_div_left_2vars (u := (b ^ 2)) (v := (a * c)) (i := ((a * c) + (b ^ 2))) (j := 0) (k := ((b ^ 2) * ((a + c) ^ 2))) (l := ((((((2 * a) * b) * (a + c)) * (b + c)) / (((a ^ 2) + (b * c)) * ((a * c) + (b ^ 2)))) + ((((((2 * a) * c) * (a + b)) * (b + c)) / (((a ^ 2) + (b * c)) * ((a * b) + (c ^ 2)))) + (((((2 * b) * c) * (a + b)) * (a + c)) / (((a * b) + (c ^ 2)) * ((a * c) + (b ^ 2))))))) (right := c / (4 * a) + a / (4 * c) + 13 / 2)
  scale AM_GM_div_left_2vars (u := (b ^ 2)) (v := (a * c)) (i := (2 * sqrt ((((b ^ 2) * a) * c)))) (j := 0) (k := ((b ^ 2) * ((a + c) ^ 2))) (l := ((((((2 * a) * b) * (a + c)) * (b + c)) / (((a ^ 2) + (b * c)) * ((a * c) + (b ^ 2)))) + ((((((2 * a) * c) * (a + b)) * (b + c)) / (((a ^ 2) + (b * c)) * ((a * b) + (c ^ 2)))) + (((((2 * b) * c) * (a + b)) * (a + c)) / (((a * b) + (c ^ 2)) * ((a * c) + (b ^ 2))))))) (right := c / (4 * a) + a / (4 * c) + 13 / 2)
  llm_cancel_denom b ^ 2 * (a + c) ^ 2 * (1 / (4 * sqrt(b ^ 2 * a * c) * sqrt(b ^ 2 * a * c))) + 2 * a * b * (a + c) * (b + c) / ((a ^ 2 + b * c) * (a * c + b ^ 2)) + 2 * a * c * (a + b) * (b + c) / ((a ^ 2 + b * c) * (a * b + c ^ 2)) + 2 * b * c * (a + b) * (a + c) / ((a * b + c ^ 2) * (a * c + b ^ 2)) - (c / (4 * a) + a / (4 * c) + 13 / 2) = 2 * a * b * (a + c) * (b + c) / ((a ^ 2 + b * c) * (a * c + b ^ 2)) + 2 * a * c * (a + b) * (b + c) / ((a ^ 2 + b * c) * (a * b + c ^ 2)) + 2 * b * c * (a + b) * (a + c) / ((a * b + c ^ 2) * (a * c + b ^ 2)) - (6)
  llm_cancel_factor (2 * a * b * (a + c) * (b + c) / ((a ^ 2 + b * c) * (a * c + b ^ 2)) + 2 * a * c * (a + b) * (b + c) / ((a ^ 2 + b * c) * (a * b + c ^ 2)) + 2 * b * c * (a + b) * (a + c) / ((a * b + c ^ 2) * (a * c + b ^ 2))) - (6) = (4) * (1 / (a ^ 2 + b * c)) * (1 / (a * c + b ^ 2)) * (1 / (a * b + c ^ 2)) * (a * b ^ 2 * c ^ 3 + a * b ^ 3 * c ^ 2 + b * a ^ 2 * c ^ 3 + b * a ^ 3 * c ^ 2 + c * a ^ 2 * b ^ 3 + c * a ^ 3 * b ^ 2 - (a ^ 3 * b ^ 3) - (a ^ 3 * c ^ 3) - (b ^ 3 * c ^ 3) - (a * b * c ^ 4) - (a * c * b ^ 4) - (b * c * a ^ 4))
  scale Muirhead_Req0_onestep_right_3vars (u := b) (v := c) (w := a) (p := 3) (q := 3) (k := 1) (l := ((((b * c) * (a ^ 4)) + ((a * c) * (b ^ 4))) + ((a * b) * (c ^ 4)))) (left := a * b ^ 2 * c ^ 3 + a * b ^ 3 * c ^ 2 + b * a ^ 2 * c ^ 3 + b * a ^ 3 * c ^ 2 + c * a ^ 2 * b ^ 3 + c * a ^ 3 * b ^ 2)
  scale AM_GM_square_right_2vars (u := (c * (a ^ 2))) (v := ((b ^ 2) * a)) (k := 1) (l := ((((a * c) * (b ^ 4)) + ((a * b) * (c ^ 4))) + (((b * c) * (a ^ 4)) + ((b ^ 2) * (c ^ 4))))) (left := a * b ^ 2 * c ^ 3 + a * b ^ 3 * c ^ 2 + b * a ^ 2 * c ^ 3 + b * a ^ 3 * c ^ 2 + c * a ^ 2 * b ^ 3 + c * a ^ 3 * b ^ 2)
  llm_cancel_factor (a * b ^ 2 * c ^ 3 + a * b ^ 3 * c ^ 2 + b * a ^ 2 * c ^ 3 + b * a ^ 3 * c ^ 2 + c * a ^ 2 * b ^ 3 + c * a ^ 3 * b ^ 2) - (2 * c * a ^ 2 * b ^ 2 * a + a * c * b ^ 4 + a * b * c ^ 4 + b * c * a ^ 4 + b ^ 2 * c ^ 4) = (b) * (c) * (c * a ^ 3 + a ^ 2 * b ^ 2 + a ^ 2 * c ^ 2 + a * b * c ^ 2 + a * c * b ^ 2 - (a ^ 4) - (a * b ^ 3) - (a * c ^ 3) - (b * a ^ 3) - (b * c ^ 3))
  scale AM_GM_square_left_2vars (u := c) (v := a) (k := (a * c)) (l := (((c * (a ^ 3)) + ((a ^ 2) * (b ^ 2))) + (((a * b) * (c ^ 2)) + ((a * c) * (b ^ 2))))) (right := b * c ^ 3 + b * a ^ 3 + a * c ^ 3 + a * b ^ 3 + a ^ 4)
  llm_simplify a * c * (c ^ 2 + a ^ 2) / 2 + c * a ^ 3 + a ^ 2 * b ^ 2 + a * b * c ^ 2 + a * c * b ^ 2 - (b * c ^ 3 + b * a ^ 3 + a * c ^ 3 + a * b ^ 3 + a ^ 4) = a ^ 2 * b ^ 2 + a * b * c ^ 2 + a * c * b ^ 2 + 3 * c * a ^ 3 / (2) - (a ^ 4) - (a * b ^ 3) - (b * a ^ 3) - (b * c ^ 3) - (a * c ^ 3 / 2)
  scale AM_GM_square_left_2vars (u := b) (v := c) (k := (a * b)) (l := ((((3 * c) * (a ^ 3)) / 2) + (((a ^ 2) * (b ^ 2)) + ((a * b) * (c ^ 2))))) (right := a * c ^ 3 / 2 + b * c ^ 3 + b * a ^ 3 + a * b ^ 3 + a ^ 4)
  llm_factor a * b * (b ^ 2 + c ^ 2) / 2 + 3 * c * a ^ 3 / 2 + a ^ 2 * b ^ 2 + a * b * c ^ 2 - (a * c ^ 3 / 2 + b * c ^ 3 + b * a ^ 3 + a * b ^ 3 + a ^ 4) = a ^ 2 * b ^ 2 + 3 * c * a ^ 3 / 2 + 3 * a * b * c ^ 2 / 2 - (a ^ 4) - (b * a ^ 3) - (b * c ^ 3) - (a * b ^ 3 / 2) - (a * c ^ 3 / 2)
  scale AM_GM_square_left_2vars (u := a) (v := b) (k := (a * b)) (l := ((((3 * c) * (a ^ 3)) / 2) + ((((3 * a) * b) * (c ^ 2)) / 2))) (right := a * c ^ 3 / 2 + a * b ^ 3 / 2 + b * c ^ 3 + b * a ^ 3 + a ^ 4)
  llm_frac_apart a * b * (a ^ 2 + b ^ 2) / 2 + 3 * c * a ^ 3 / 2 + 3 * a * b * c ^ 2 / 2 - (a * c ^ 3 / 2 + a * b ^ 3 / 2 + b * c ^ 3 + b * a ^ 3 + a ^ 4) = b * a ^ 3 / (2) + 3 * c * a ^ 3 / (2) + 3 * a * b * c ^ 2 / (2) - (a ^ 4) - (b * a ^ 3) - (b * c ^ 3) - (a * c ^ 3 / (2))
  llm_simplify b * a ^ 3 / 2 + 3 * c * a ^ 3 / 2 + 3 * a * b * c ^ 2 / 2 - (a * c ^ 3 / 2 + b * c ^ 3 + b * a ^ 3 + a ^ 4) = a ^ 3 * (3 * c / (2) - (b / 2)) + 3 * a * b * c ^ 2 / (2) - (a ^ 4) - (b * c ^ 3) - (a * c ^ 3 / (2))
  llm_cancel_factor (a ^ 3 * (3 * c / 2 - b / 2) + 3 * a * b * c ^ 2 / 2) - (a * c ^ 3 / 2 + b * c ^ 3 + a ^ 4) = (1 / 2) * ((a - (c)) ^ 2) * (-(2 * a ^ 2) - (a * b) - (a * c) - (2 * b * c))
  try close

theorem P48 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) : sqrt (a * (b + c) / (a ^ 2 + b * c)) + sqrt (b * (c + a) / (b ^ 2 + c * a)) + sqrt(c * (a + b) / (c ^ 2 + a * b)) ≤ sqrt ((sqrt a + sqrt b + sqrt c) * (1 / sqrt a + 1 / sqrt b + 1 / sqrt c)) := by
  sorry

theorem P49 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) : 10 ≤ (a + b + c) ^ 3 / (3 * a * b * c) + (a * b ^ 2 + b * c ^ 2 + c * a ^ 2) / (a ^ 3 + b ^ 3 + c ^ 3) := by
  intro_by_homogeneous a + b + c = 3
  scale AM_GM_normal_right_3vars (u := (a * (b ^ 2))) (v := (b * (c ^ 2))) (w := (c * (a ^ 2))) (k := (1 / (((a ^ 3) + (b ^ 3)) + (c ^ 3)))) (l := ((((a + b) + c) ^ 3) / (((3 * a) * b) * c))) (left := 10)
  llm_mul_expand 10 - (3 * (1 / (a ^ 3 + b ^ 3 + c ^ 3)) * (a * b ^ 2 * b * c ^ 2 * c * a ^ 2) ^ (1 / 3) + (a + b + c) ^ 3 / (3 * a * b * c)) = 8 - (a / (b)) - (a / (c)) - (b / (a)) - (b / (c)) - (c / (a)) - (c / (b)) - (3 * (a ^ 3 * b ^ 3 * c ^ 3) ^ (1 / 3) / (a ^ 3 + b ^ 3 + c ^ 3)) - (c ^ 2 / (3 * (a) * (b))) - (b ^ 2 / (3 * (a) * (c))) - (a ^ 2 / (3 * (b) * (c)))
  scale AM_GM_normal_right_2vars (u := ((((a ^ 2) / ((3 * b) * c)) + ((b ^ 2) / ((3 * a) * c))) + ((c ^ 2) / ((3 * a) * b)))) (v := ((3 * ((((a ^ 3) * (b ^ 3)) * (c ^ 3)) ^ (1 / 3))) / (((a ^ 3) + (b ^ 3)) + (c ^ 3)))) (k := 1) (l := (((c / b) + (c / a)) + (((b / c) + (b / a)) + ((a / c) + (a / b))))) (left := 8)
  llm_factor 8 - (2 * sqrt((a ^ 2 / (3 * b * c) + b ^ 2 / (3 * a * c) + c ^ 2 / (3 * a * b)) * (3 * (a ^ 3 * b ^ 3 * c ^ 3) ^ (1 / 3) / (a ^ 3 + b ^ 3 + c ^ 3))) + c / b + c / a + b / c + b / a + a / c + a / b) = 8 - (2 * sqrt ((a ^ 3 * b ^ 3 * c ^ 3) ^ (1 / 3) / ((a) * (b) * (c)))) - (a / (b)) - (a / (c)) - (b / (a)) - (b / (c)) - (c / (a)) - (c / (b))
  scale Rearrange_cycle_div_right_3vars (u := b) (v := a) (w := c) (i1 := 1) (j1 := 0) (i2 := 1) (j2 := 0) (k := 1) (l := (((c / a) + (b / c)) + ((a / b) + (2 * sqrt ((((((a ^ 3) * (b ^ 3)) * (c ^ 3)) ^ (1 / 3)) / ((a * b) * c))))))) (left := 8)
  llm_simplify 8 - (b / b + a / a + c / c + c / a + b / c + a / b + 2 * sqrt((a ^ 3 * b ^ 3 * c ^ 3) ^ (1 / 3) / (a * b * c))) = 3 - (a / (b)) - (b / (c)) - (c / (a))
  scale AM_GM_normal_right_3vars (u := (c / a)) (v := (b / c)) (w := (a / b)) (k := 1) (l := 0) (left := 3)
  sym_simplify 3  -  3 * (c / a * (b / c) * (a / b)) ^ (1 / 3) = 0
  try close

theorem P50 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) (h_ : 2 * sqrt 3 - 1 > 0): (4 / 3) ^ 3 * sqrt (a * b * c) * (a * b + b * c + c * a) ≤ (a ^ 2 + 3) * (b ^ 2 + 3) * (c ^ 2 + 3) := by
  scale AM_GM_square_left_2vars (u := (((4 / 3) ^ 3) * sqrt (((a * b) * c)))) (v := (((a * b) + (b * c)) + (c * a))) (k := 1) (l := 0) (right := (a ^ 2 + 3) * (b ^ 2 + 3) * (c ^ 2 + 3))
  llm_exp_expand ((64 / 27 * sqrt(a * b * c)) ^ 2 + (a * b + b * c + c * a) ^ 2) / 2 - ((a ^ 2 + 3) * (b ^ 2 + 3) * (c ^ 2 + 3)) = (a * b + b * c + c * a) ^ 2 / (2) + 2048 * a * b * c / (729) - (a ^ 2 * b ^ 2 * c ^ 2 + 3 * a ^ 2 * b ^ 2 + 3 * a ^ 2 * c ^ 2 + 9 * a ^ 2 + 3 * b ^ 2 * c ^ 2 + 9 * b ^ 2 + 9 * c ^ 2 + 27)
  llm_simplify (a * b + b * c + c * a) ^ 2 / 2 + 2048 * a * b * c / 729 - (a ^ 2 * b ^ 2 * c ^ 2 + 3 * a ^ 2 * b ^ 2 + 3 * a ^ 2 * c ^ 2 + 9 * a ^ 2 + 3 * b ^ 2 * c ^ 2 + 9 * b ^ 2 + 9 * c ^ 2 + 27) = a * b * c * (a + b + c) + 2048 * a * b * c / (729) - (27) - (9 * a ^ 2) - (9 * b ^ 2) - (9 * c ^ 2) - (a ^ 2 * b ^ 2 * c ^ 2) - (5 * a ^ 2 * b ^ 2 / (2)) - (5 * a ^ 2 * c ^ 2 / (2)) - (5 * b ^ 2 * c ^ 2 / (2))
  scale AM_GM_normal_right_3vars (u := (((5 * (b ^ 2)) * (c ^ 2)) / 2)) (v := (((5 * (a ^ 2)) * (c ^ 2)) / 2)) (w := (((5 * (a ^ 2)) * (b ^ 2)) / 2)) (k := 1) (l := ((((a ^ 2) * (b ^ 2)) * (c ^ 2)) + (((9 * (c ^ 2)) + (9 * (b ^ 2))) + ((9 * (a ^ 2)) + 27)))) (left := a * b * c * (a + b + c) + 2048 * a * b * c / 729)
  scale Jensen_pow_Rgt1_right_3vars (u := c) (v := b) (w := a) (r := 2) (k := 9) (l := (27 + ((3 * ((((((5 * (b ^ 2)) * (c ^ 2)) / 2) * (((5 * (a ^ 2)) * (c ^ 2)) / 2)) * (((5 * (a ^ 2)) * (b ^ 2)) / 2)) ^ (1 / 3))) + (((a ^ 2) * (b ^ 2)) * (c ^ 2))))) (left := a * b * c * (a + b + c) + 2048 * a * b * c / 729)
  llm_simplify a * b * c * (a + b + c) + 2048 * a * b * c / 729 - (27 * ((c + b + a) / 3) ^ 2 + 27 + 3 * (5 * b ^ 2 * c ^ 2 / 2 * (5 * a ^ 2 * c ^ 2 / 2) * (5 * a ^ 2 * b ^ 2 / 2)) ^ (1 / 3) + a ^ 2 * b ^ 2 * c ^ 2) = a * b * c * (a + b + c) + 2048 * a * b * c / (729) - (27) - (3 * (a + b + c) ^ 2) - (a ^ 2 * b ^ 2 * c ^ 2 + 15 * a ^ (4 / (3)) * b ^ (4 / (3)) * c ^ (4 / (3)) / (2))
  llm_simplify a * b * c * (a + b + c) + 2048 * a * b * c / 729 - (a ^ 2 * b ^ 2 * c ^ 2 + 15 * a ^ (4 / 3) * b ^ (4 / 3) * c ^ (4 / 3) / 2 + 3 * (a + b + c) ^ 2 + 27) = a * b * c * (a + b + c) + 2048 * a * b * c / (729) - (27 + (a * b * c) ^ 2 + 3 * (a + b + c) ^ 2 + 15 * (a * b * c) ^ (4 / (3)) / (2))
  llm_cancel_denom a * b * c * (a + b + c) + 2048 * a * b * c / 729 - (27 + (a * b * c) ^ 2 + 3 * (a + b + c) ^ 2 + 15 * (a * b * c) ^ (4 / 3) / 2) = (4096 * a * b * c + 1458 * a * b * c * (a + b + c) - (39366) - (1458 * (a * b * c) ^ 2) - (4374 * (a + b + c) ^ 2) - (10935 * (a * b * c) ^ (4 / (3)))) / (1458)
  scale AM_GM_normal_right_2vars (u := (4374 * (((a + b) + c) ^ 2))) (v := (1458 * (((a * b) * c) ^ 2))) (k := 1) (l := (39366 + (10935 * (((a * b) * c) ^ (4 / 3))))) (left := 4096 * a * b * c + 1458 * a * b * c * (a + b + c))
  llm_simplify 4096 * a * b * c + 1458 * a * b * c * (a + b + c) - (2 * sqrt(4374 * (a + b + c) ^ 2 * 1458 * (a * b * c) ^ 2) + 39366 + 10935 * (a * b * c) ^ (4 / 3)) = 4096 * a * b * c + 1458 * a * b * c * (a + b + c) - (39366) - (10935 * a ^ (4 / 3) * b ^ (4 / 3) * c ^ (4 / 3)) - (2916 * a * b * c * sqrt (3) * (a + b + c))
  llm_mul_expand 4096 * a * b * c + 1458 * a * b * c * (a + b + c) - (2916 * a * b * c * sqrt 3 * (a + b + c) + 10935 * a ^ (4 / 3) * b ^ (4 / 3) * c ^ (4 / 3) + 39366) = 4096 * a * b * c + a * b * c ^ 2 * (1458 - (2916 * sqrt (3))) + a * b ^ 2 * c * (1458 - (2916 * sqrt (3))) + a ^ 2 * b * c * (1458 - (2916 * sqrt (3))) - (39366) - (10935 * a ^ (4 / (3)) * b ^ (4 / (3)) * c ^ (4 / (3)))
  llm_factor 4096 * a * b * c + a * b * c ^ 2 * (1458 - 2916 * sqrt 3) + a * b ^ 2 * c * (1458 - 2916 * sqrt 3) + a ^ 2 * b * c * (1458 - 2916 * sqrt 3) - (10935 * a ^ (4 / 3) * b ^ (4 / 3) * c ^ (4 / 3) + 39366) = 4096 * a * b * c - (39366) - (10935 * a ^ (4 / 3) * b ^ (4 / 3) * c ^ (4 / 3)) - (1458 * a * b * c ^ 2 * (2 * sqrt (3) - (1))) - (1458 * a * c * b ^ 2 * (2 * sqrt (3) - (1))) - (1458 * b * c * a ^ 2 * (2 * sqrt (3) - (1)))
  llm_exp_expand 4096 * a * b * c - (1458 * b * c * a ^ 2 * (2 * sqrt 3 - 1) + 1458 * a * c * b ^ 2 * (2 * sqrt 3 - 1) + 1458 * a * b * c ^ 2 * (2 * sqrt 3 - 1) + 10935 * a ^ (4 / 3) * b ^ (4 / 3) * c ^ (4 / 3) + 39366) = 4096 * a * b * c - (39366) - (10935 * (a * b * c) ^ (4 / (3))) - (1458 * a * b * c * (2 * sqrt (3) - (1)) * (a + b + c))
  scale AM_GM_normal_right_2vars (u := (10935 * (((a * b) * c) ^ (4 / 3)))) (v := 39366) (k := 1) (l := (((((1458 * a) * b) * c) * ((2 * sqrt (3)) - 1)) * ((a + b) + c))) (left := 4096 * a * b * c)
  llm_simplify 4096 * a * b * c - (2 * sqrt(10935 * (a * b * c) ^ (4 / 3) * 39366) + 1458 * a * b * c * (2 * sqrt 3 - 1) * (a + b + c)) = 4096 * a * b * c + 1458 * a * b * c * (1 - (2 * sqrt (3))) * (a + b + c) - (13122 * sqrt (10) * a ^ (2 / 3) * b ^ (2 / 3) * c ^ (2 / 3))
  llm_factor 4096 * a * b * c + 1458 * a * b * c * (1 - 2 * sqrt 3) * (a + b + c) - (13122 * sqrt 10 * a ^ (2 / 3) * b ^ (2 / 3) * c ^ (2 / 3)) = 4096 * a * b * c - (13122 * sqrt (10) * a ^ (2 / 3) * b ^ (2 / 3) * c ^ (2 / 3)) - (1458 * a * b * c * (2 * sqrt (3) - (1)) * (a + b + c))
  llm_exp_expand 4096 * a * b * c - (1458 * a * b * c * (2 * sqrt 3 - 1) * (a + b + c) + 13122 * sqrt 10 * a ^ (2 / 3) * b ^ (2 / 3) * c ^ (2 / 3)) = 4096 * a * b * c - (13122 * sqrt (10) * (a * b * c) ^ (2 / (3))) - (1458 * a * b * c * (2 * sqrt (3) - (1)) * (a + b + c))
  llm_cancel_numer 4096 * a * b * c - (1458 * a * b * c * (2 * sqrt 3 - 1) * (a + b + c) + 13122 * sqrt 10 * (a * b * c) ^ (2 / 3)) = a * b * c * (4096 - (1458 * (2 * sqrt (3) - (1)) * (a + b + c) + 13122 * sqrt (10) / (a * b * c) ^ (1 / ((3)))))
  llm_cancel_factor a * b * c * (4096 - (1458 * (2 * sqrt 3 - 1) * (a + b + c) + 13122 * sqrt 10 / (a * b * c) ^ (1 / 3))) - (0) = a * b * c * (4096 - (1458 * (2 * sqrt (3) - (1)) * (a + b + c) + 13122 * sqrt (10) / (a * b * c) ^ (1 / ((3)))))
  scale AM_GM_div_right_3vars (u := a) (v := b) (w := c) (i := 1) (j := 0) (k := (13122 * sqrt (10))) (l := ((1458 * ((2 * sqrt (3)) - 1)) * ((a + b) + c))) (left := 4096)
  scale AM_GM_normal_right_2vars (u := ((13122 * sqrt (10)) * (1 / (((a + b) + c) / 3)))) (v := ((1458 * ((2 * sqrt (3)) - 1)) * ((a + b) + c))) (k := 1) (l := 0) (left := 4096)
  llm_simplify 4096 - (2 * sqrt(13122 * sqrt 10 * (1 / ((a + b + c) / 3)) * 1458 * (2 * sqrt 3 - 1) * (a + b + c))) = 4096 - (8748 * 10 ^ (1 / 4) * sqrt (6 * sqrt (3) - (3)))
  closed_by_eval


theorem P51 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) (h : a ^ 2 + b ^ 2 + c ^ 2 + a * b * c = 4) : a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * a ^ 2 ≤ a ^ 2 + b ^ 2 + c ^ 2 := by
  llm_simplify a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * a ^ 2 - (a ^ 2 + b ^ 2 + c ^ 2) = a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * a ^ 2 + a * b * c - (4)
  sym_pqr_method (2 - (a)) ^ 2 + a * (2 - (a)) + 2 * a ^ 2 * (2 - (a)) - (4) ≤ 0
  llm_simplify (2 - a) ^ 2 + a * (2 - a) + 2 * a ^ 2 * (2 - a) - 4 - (0) = -2 * a * (a - (1)) ^ 2
  try close

theorem P52 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) (h : a + b + c = 1) : 3 / 4 ≤ b ^ 2 / (a + b ^ 2) + c ^ 2 / (b + c ^ 2) + a ^ 2 / (c + a ^ 2) := by
  make_homogeneous 3 / 4 - (b ^ 2 / (a * (a + b + c) + b ^ 2)) - (a ^ 2 / (a ^ 2 + c * (a + b + c))) - (c ^ 2 / (b * (a + b + c) + c ^ 2)) ≤ 0
  scale Titu_variant1_right_3vars (u1 := (c ^ 2)) (u2 := (a ^ 2)) (u3 := (b ^ 2)) (v1 := ((b * ((a + b) + c)) + (c ^ 2))) (v2 := ((a ^ 2) + (c * ((a + b) + c)))) (v3 := ((a * ((a + b) + c)) + (b ^ 2))) (k := 1) (l := 0) (left := 3 / 4)
  llm_cancel_factor (3 / 4) - ((c ^ 2 + a ^ 2 + b ^ 2) ^ 2 / (c ^ 2 * (b * (a + b + c) + c ^ 2) + a ^ 2 * (a ^ 2 + c * (a + b + c)) + b ^ 2 * (a * (a + b + c) + b ^ 2))) = (1 / 4) * (1 / (a ^ 4 + a ^ 3 * c + a ^ 2 * b ^ 2 + a ^ 2 * b * c + a ^ 2 * c ^ 2 + a * b ^ 3 + a * b ^ 2 * c + a * b * c ^ 2 + b ^ 4 + b ^ 2 * c ^ 2 + b * c ^ 3 + c ^ 4)) * (3 * a * b ^ 3 + 3 * b * c ^ 3 + 3 * c * a ^ 3 + 3 * a * b * c ^ 2 + 3 * a * c * b ^ 2 + 3 * b * c * a ^ 2 - (a ^ 4) - (b ^ 4) - (c ^ 4) - (5 * a ^ 2 * b ^ 2) - (5 * a ^ 2 * c ^ 2) - (5 * b ^ 2 * c ^ 2))
  scale Vasc_left_3vars (u := c) (v := b) (w := a) (k := 3) (l := ((((3 * a) * b) * (c ^ 2)) + ((((3 * a) * c) * (b ^ 2)) + (((3 * b) * c) * (a ^ 2))))) (right := 5 * b ^ 2 * c ^ 2 + 5 * a ^ 2 * c ^ 2 + 5 * a ^ 2 * b ^ 2 + c ^ 4 + b ^ 4 + a ^ 4)
  scale Rearrange_cycle_mul_left_3vars (u := (b * c)) (v := (a * b)) (w := (a * c)) (i1 := 3) (j1 := 0) (i2 := 1) (j2 := 0) (k := 1) (l := ((3 * ((((c ^ 2) + (b ^ 2)) + (a ^ 2)) ^ 2)) / 3)) (right := 5 * b ^ 2 * c ^ 2 + 5 * a ^ 2 * c ^ 2 + 5 * a ^ 2 * b ^ 2 + c ^ 4 + b ^ 4 + a ^ 4)

theorem P53 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) (h : a + b + c = 1) :
  sqrt (((a - b) * (b - c) * (c - a) * (3 * (a ^ 2 + b ^ 2 + c ^ 2) + 5 * (a * b + b * c + c * a))) ^ 2) ≤ 3 * (a + b) * (b + c) * (c + a) := by
  make_homogeneous sqrt ((a - (b)) ^ 2 * (b - (c)) ^ 2 * (c - (a)) ^ 2 * (3 * a ^ 2 + 3 * b ^ 2 + 3 * c ^ 2 + 5 * a * b + 5 * a * c + 5 * b * c) ^ 2) - (3 * (a + b + c) ^ 2 * (a + b) * (a + c) * (b + c)) ≤ 0
  llm_cancel_power 2
  llm_cancel_factor ((a - b) ^ 2 * (b - c) ^ 2 * (c - a) ^ 2 * (3 * a ^ 2 + 3 * b ^ 2 + 3 * c ^ 2 + 5 * a * b + 5 * a * c + 5 * b * c) ^ 2) - ((3 * (a + b + c) ^ 2 * (a + b) * (a + c) * (b + c)) ^ 2) = (6 * a * b ^ 4 + 6 * b * c ^ 4 + 6 * c * a ^ 4 + 7 * a ^ 2 * c ^ 3 + 7 * a ^ 3 * b ^ 2 + 7 * b ^ 3 * c ^ 2 + 11 * a ^ 2 * b ^ 3 + 11 * a ^ 3 * c ^ 2 + 11 * b ^ 2 * c ^ 3 + 18 * a * b * c ^ 3 + 18 * a * c * b ^ 3 + 18 * b * c * a ^ 3 + 30 * a * b ^ 2 * c ^ 2 + 30 * b * a ^ 2 * c ^ 2 + 30 * c * a ^ 2 * b ^ 2) * (-(11 * a ^ 2 * c ^ 3) - (11 * a ^ 3 * b ^ 2) - (11 * b ^ 3 * c ^ 2) - (7 * a ^ 2 * b ^ 3) - (7 * a ^ 3 * c ^ 2) - (7 * b ^ 2 * c ^ 3) - (6 * a * c ^ 4) - (6 * b * a ^ 4) - (6 * c * b ^ 4) - (30 * a * b ^ 2 * c ^ 2) - (30 * b * a ^ 2 * c ^ 2) - (30 * c * a ^ 2 * b ^ 2) - (18 * a * b * c ^ 3) - (18 * a * c * b ^ 3) - (18 * b * c * a ^ 3))
  try close

theorem P54 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) :
  sqrt (3 * a * b * c * (a + b + c)) ≤ a * (b + c) ^ 2 / (2 * a + b + c) + b * (a + c) ^ 2 / (a + 2 * b + c) + c * (a + b) ^ 2 / (a + b + 2 * c) := by
  intro_by_homogeneous a + b + c = 3
  llm_cancel_power 2
  llm_frac_together 3 * a * b * c * (a + b + c) - ((a * (b + c) ^ 2 / (2 * a + b + c) + b * (a + c) ^ 2 / (a + 2 * b + c) + c * (a + b) ^ 2 / (a + b + 2 * c)) ^ 2) = 3 * a * b * c * (a + b + c) - ((a * (b + c) ^ 2 * (a + 2 * b + c) * (a + b + 2 * c) + b * (a + c) ^ 2 * (2 * a + b + c) * (a + b + 2 * c) + c * (a + b) ^ 2 * (2 * a + b + c) * (a + 2 * b + c)) ^ 2 / (((a + b + 2 * c) * (a + 2 * b + c) * (2 * a + b + c)) ^ 2))
  llm_cancel_denom 3 * a * b * c * (a + b + c) - ((a * (b + c) ^ 2 * (a + 2 * b + c) * (a + b + 2 * c) + b * (a + c) ^ 2 * (2 * a + b + c) * (a + b + 2 * c) + c * (a + b) ^ 2 * (2 * a + b + c) * (a + 2 * b + c)) ^ 2 / ((a + b + 2 * c) * (a + 2 * b + c) * (2 * a + b + c)) ^ 2) = (3 * a * b * c * (a + b + c) * ((a + b + 2 * c) * (a + 2 * b + c) * (2 * a + b + c)) ^ 2 - ((a * (b + c) ^ 2 * (a + 2 * b + c) * (a + b + 2 * c) + b * (a + c) ^ 2 * (2 * a + b + c) * (a + b + 2 * c) + c * (a + b) ^ 2 * (2 * a + b + c) * (a + 2 * b + c)) ^ 2)) / (((a + b + 2 * c) * (a + 2 * b + c) * (2 * a + b + c)) ^ 2)
  closed_by_sos

theorem P55 {a b : ℝ} (ha : a > 0) (hb : b > 0) (h : 9 * a ^ 2 + 8 * a * b + 7 * b ^ 2 ≤ 6) : 7 * a + 5 * b + 12 * a * b ≤ 9 := by
  make_homogeneous 5 * b * sqrt (3 * a ^ 2 / 2 + 7 * b ^ 2 / 6 + 4 * a * b / 3) + 7 * a * sqrt (3 * a ^ 2 / 2 + 7 * b ^ 2 / 6 + 4 * a * b / 3) - (27 * a ^ 2 / 2) - (21 * b ^ 2 / 2) ≤ 0
  llm_simplify 5 * b * sqrt(3 * a ^ 2 / 2 + 7 * b ^ 2 / 6 + 4 * a * b / 3) + 7 * a * sqrt(3 * a ^ 2 / 2 + 7 * b ^ 2 / 6 + 4 * a * b / 3) - (21 * b ^ 2 / 2 + 27 * a ^ 2 / 2) = sqrt (9 * a ^ 2 + 7 * b ^ 2 + 8 * a * b) * (5 * b + 7 * a) / (sqrt (6)) - (21 * b ^ 2 / (2)) - (27 * a ^ 2 / (2))
  scale AM_GM_square_left_2vars (u := sqrt ((((9 * (a ^ 2)) + (7 * (b ^ 2))) + ((8 * a) * b)))) (v := (((5 * b) + (7 * a)) * (1 / sqrt (6)))) (k := 1) (l := 0) (right := 27 * a ^ 2 / 2 + 21 * b ^ 2 / 2)
  llm_simplify (sqrt(9 * a ^ 2 + 7 * b ^ 2 + 8 * a * b) ^ 2 + ((5 * b + 7 * a) * (1 / sqrt 6)) ^ 2) / 2 - (27 * a ^ 2 / 2 + 21 * b ^ 2 / 2) = -59 * (a - (b)) ^ 2 / (12)
  try close

theorem P56 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) (h : a + b + c = 1 / a + 1 / b + 1 / c) : 4 ≤ a*b*c + a*b + b*c + c*a := by
  make_homogeneous 4 * ((a + b + c) / (1 / ((c)) + 1 / ((b)) + 1 / ((a)))) ^ (3 / 2) - (a * b * c) - (a * b * sqrt ((a + b + c) / (1 / ((c)) + 1 / ((b)) + 1 / ((a))))) - (a * c * sqrt ((a + b + c) / (1 / ((c)) + 1 / ((b)) + 1 / ((a))))) - (b * c * sqrt ((a + b + c) / (1 / ((c)) + 1 / ((b)) + 1 / ((a))))) ≤ 0
  llm_simplify 4 * ((a + b + c) / (1 / c + 1 / b + 1 / a)) ^ (3 / 2) - (b * c * sqrt((a + b + c) / (1 / c + 1 / b + 1 / a)) + a * c * sqrt((a + b + c) / (1 / c + 1 / b + 1 / a)) + a * b * sqrt((a + b + c) / (1 / c + 1 / b + 1 / a)) + a * b * c) = 4 - (b * c + a * c + a * b + a * b * c)
  sym_pqr_method b ^ 2 * (4 * a * sqrt (a * b * (a + 2 * b) / (2 * a + b)) - (2 * a ^ 2) - (a * b) - (b * sqrt (a * b * (a + 2 * b) / (2 * a + b)))) / (2 * a + b) ≤ 0
  llm_frac_apart b ^ 2 * (4 * a * sqrt(a * b * (a + 2 * b) / (2 * a + b)) - 2 * a ^ 2 - a * b - b * sqrt(a * b * (a + 2 * b) / (2 * a + b))) / (2 * a + b) - (0) = 4 * a * b ^ 2 * sqrt (a * b * (a + 2 * b) / (2 * a + b)) / (2 * a + b) - (a * b ^ 3 / (2 * a + b)) - (b ^ 3 * sqrt (a * b * (a + 2 * b) / (2 * a + b)) / (2 * a + b)) - (2 * a ^ 2 * b ^ 2 / (2 * a + b))
  llm_cancel_factor 4 * a * b ^ 2 * sqrt(a * b * (a + 2 * b) / (2 * a + b)) / (2 * a + b) - (2 * a ^ 2 * b ^ 2 / (2 * a + b) + b ^ 3 * sqrt(a * b * (a + 2 * b) / (2 * a + b)) / (2 * a + b) + a * b ^ 3 / (2 * a + b)) = b ^ 2 * (4 * a * sqrt (a * b * (a + 2 * b) / (2 * a + b)) - (2 * a ^ 2) - (a * b) - (b * sqrt (a * b * (a + 2 * b) / (2 * a + b)))) / (2 * a + b)
  llm_frac_reduce 4 * a * sqrt(a * b * (a + 2 * b) / (2 * a + b)) - (b * sqrt(a * b * (a + 2 * b) / (2 * a + b)) + a * b + 2 * a ^ 2) = sqrt (a * b * (a + 2 * b) / (2 * a + b)) * (4 * a - (b)) - (a * b + 2 * a ^ 2)
  llm_mul_expand sqrt(a * b * (a + 2 * b) / (2 * a + b)) * (4 * a - b) - (a * b + 2 * a ^ 2) = 4 * a * sqrt ((a ^ 2 * b + 2 * a * b ^ 2) / (2 * a + b)) - (2 * a ^ 2) - (a * b) - (b * sqrt ((a ^ 2 * b + 2 * a * b ^ 2) / (2 * a + b)))
  scale AM_GM_square_left_2vars (u := a) (v := sqrt (((((a ^ 2) * b) + ((2 * a) * (b ^ 2))) / ((2 * a) + b)))) (k := 4) (l := 0) (right := b * sqrt((a ^ 2 * b + 2 * a * b ^ 2) / (2 * a + b)) + a * b + 2 * a ^ 2)
  llm_cancel_factor (4 * (a ^ 2 + sqrt((a ^ 2 * b + 2 * a * b ^ 2) / (2 * a + b)) ^ 2) / 2) - (b * sqrt((a ^ 2 * b + 2 * a * b ^ 2) / (2 * a + b)) + a * b + 2 * a ^ 2) = (1) * (b) * (1 / (2 * a + b)) * (3 * a * b - (b * sqrt (b * a ^ 2 / (2 * a + b) + 2 * a * b ^ 2 / (2 * a + b))) - (2 * a * sqrt (b * a ^ 2 / (2 * a + b) + 2 * a * b ^ 2 / (2 * a + b))))
  llm_simplify 3 * a * b - (2 * a * sqrt(b * a ^ 2 / (2 * a + b) + 2 * a * b ^ 2 / (2 * a + b)) + b * sqrt(b * a ^ 2 / (2 * a + b) + 2 * a * b ^ 2 / (2 * a + b))) = 3 * a * b - (sqrt ((b * a ^ 2 + 2 * a * b ^ 2) / (2 * a + b)) * (2 * a + b))
  llm_cancel_power 2
  llm_cancel_factor ((3 * a * b) ^ 2) - ((sqrt((b * a ^ 2 + 2 * a * b ^ 2) / (2 * a + b)) * (2 * a + b)) ^ 2) = (2) * (a) * (b) * (-(a - (b)) ^ 2)
  try close

theorem P57 {a b c : ℝ} (ha : a ≥ 0) (hb : b ≥ 0) (hc : c ≥ 0) (h : a + b + c = 1) : (a ^ 2 + b ^ 2) * (b ^ 2 + c ^ 2) * (c ^ 2 + a ^ 2) ≤ 1 / 2 := by
  make_homogeneous (a ^ 2 + b ^ 2) * (a ^ 2 + c ^ 2) * (b ^ 2 + c ^ 2) - ((a + b + c) ^ 6 / 2) ≤ 0
  llm_mul_expand (a ^ 2 + b ^ 2) * (a ^ 2 + c ^ 2) * (b ^ 2 + c ^ 2) - ((a + b + c) ^ 6 / 2) = -(a ^ 6 / 2) - (b ^ 6 / 2) - (c ^ 6 / 2) - (10 * a ^ 3 * b ^ 3) - (10 * a ^ 3 * c ^ 3) - (10 * b ^ 3 * c ^ 3) - (3 * a * b ^ 5) - (3 * a * c ^ 5) - (3 * b * a ^ 5) - (3 * b * c ^ 5) - (3 * c * a ^ 5) - (3 * c * b ^ 5) - (13 * a ^ 2 * b ^ 4 / 2) - (13 * a ^ 2 * c ^ 4 / 2) - (13 * a ^ 4 * b ^ 2 / 2) - (13 * a ^ 4 * c ^ 2 / 2) - (13 * b ^ 2 * c ^ 4 / 2) - (13 * b ^ 4 * c ^ 2 / 2) - (43 * a ^ 2 * b ^ 2 * c ^ 2) - (30 * a * b ^ 2 * c ^ 3) - (30 * a * b ^ 3 * c ^ 2) - (30 * b * a ^ 2 * c ^ 3) - (30 * b * a ^ 3 * c ^ 2) - (30 * c * a ^ 2 * b ^ 3) - (30 * c * a ^ 3 * b ^ 2) - (15 * a * b * c ^ 4) - (15 * a * c * b ^ 4) - (15 * b * c * a ^ 4)
  try close

theorem P58 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) : 3 / 2 ≤ (a + b) / (2 * a + (a + b)) + (b + c) / (2 * b + b + c) + (c + a) / (2 * c + c + a) := by
  intro_by_homogeneous a + b + c = 3
  llm_cancel_denom 3 / 2 - ((a + b) / (2 * a + (a + b)) + (b + c) / (2 * b + b + c) + (c + a) / (2 * c + c + a)) = (3 * (3 * a + b) * (3 * b + c) * (3 * c + a) - (2 * ((a + b) * (3 * b + c) * (3 * c + a) + (b + c) * (3 * a + b) * (3 * c + a) + (c + a) * (3 * a + b) * (3 * b + c)))) / (2 * (a + 3 * c) * (3 * a + b) * (3 * b + c))
  llm_factor 3 * (3 * a + b) * (3 * b + c) * (3 * c + a) - (2 * ((a + b) * (3 * b + c) * (3 * c + a) + (b + c) * (3 * a + b) * (3 * c + a) + (c + a) * (3 * a + b) * (3 * b + c))) = 24 * a * b * c - (5 * a * b ^ 2) - (5 * b * c ^ 2) - (5 * c * a ^ 2) - (3 * a * c ^ 2) - (3 * b * a ^ 2) - (3 * c * b ^ 2)
  scale weighted_Power_Mean_Rgt1_right_3vars (u := b) (v := a) (w := c) (i1 := (3 * c)) (i2 := (3 * b)) (i3 := (3 * a)) (r := 2) (k := 1) (l := (((5 * c) * (a ^ 2)) + (((5 * b) * (c ^ 2)) + ((5 * a) * (b ^ 2))))) (left := 24 * a * b * c)
  llm_simplify 24 * a * b * c - ((3 * c * b + 3 * b * a + 3 * a * c) ^ 2 / (3 * c + 3 * b + 3 * a) + 5 * c * a ^ 2 + 5 * b * c ^ 2 + 5 * a * b ^ 2) = 24 * a * b * c - (3 * (c * b + b * a + a * c) ^ 2 / (a + b + c)) - (5 * a * b ^ 2) - (5 * b * c ^ 2) - (5 * c * a ^ 2)
  scale AM_GM_normal_right_3vars (u := ((5 * c) * (a ^ 2))) (v := ((5 * b) * (c ^ 2))) (w := ((5 * a) * (b ^ 2))) (k := 1) (l := ((3 * ((((c * b) + (b * a)) + (a * c)) ^ 2)) / ((a + b) + c))) (left := 24 * a * b * c)
  llm_simplify 24 * a * b * c - (3 * (5 * c * a ^ 2 * 5 * b * c ^ 2 * 5 * a * b ^ 2) ^ (1 / 3) + 3 * (c * b + b * a + a * c) ^ 2 / (a + b + c)) = 3 * (3 * a * b * c * (a + b + c) - ((a * b + a * c + b * c) ^ 2)) / (a + b + c)
  llm_cancel_factor (3 * (3 * a * b * c * (a + b + c) - (a * b + a * c + b * c) ^ 2) / (a + b + c)) - (0) = (3) * (1 / (a + b + c)) * (a * b * c ^ 2 + a * c * b ^ 2 + b * c * a ^ 2 - (a ^ 2 * b ^ 2) - (a ^ 2 * c ^ 2) - (b ^ 2 * c ^ 2))
  scale Rearrange_cycle_mul_left_3vars (u := (a * c)) (v := (b * c)) (w := (a * b)) (i1 := 1) (j1 := 0) (i2 := 1) (j2 := 0) (k := 1) (l := 0) (right := b ^ 2 * c ^ 2 + a ^ 2 * c ^ 2 + a ^ 2 * b ^ 2)

theorem P59 {a b c d : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) (hd : d > 0) :
  3 + 5 / (1 + a) + 7 / (1 + a + b) + 9 / (1 + a + b + c) + 36 / (1 + a + b + c + d) ≤ 4 * (1 + 1 / a + 1 / b + 1 / c + 1 / d) := by
  sorry

theorem P60 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) (h : 9 + 3 * a * b * c = 4 * (a * b + b * c + c * a)) : 3 ≤ a + b + c := by
  sym_pqr_method (3 * b ^ 2 - (8 * b)) ^ 2 * (4 * b ^ 2 - (9)) * (9 + (3 - (2 * b)) * (3 * b ^ 2 - (8 * b)) - (4 * b ^ 2)) ≤ 0
  llm_cancel_factor ((3 * b ^ 2 - 8 * b) ^ 2 * (4 * b ^ 2 - 9) * (9 + (3 - 2 * b) * (3 * b ^ 2 - 8 * b) - 4 * b ^ 2)) - (0) = (3) * (b ^ 2) * ((b - (1)) ^ 2) * ((3 * b - (8)) ^ 2) * ((2 * b - (3)) ^ 2) * (-(3) - (2 * b))
  try close
